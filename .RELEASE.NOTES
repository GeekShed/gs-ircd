Unreal3.2.8.1 Release Notes
============================

==[ ABOUT 3.2.8.1 RELEASE ]==
This Unreal3.2.8.1 release fixes a (serious) security issue regarding
allow::options::noident. The original release notes for 3.2.8 are below.

==[ GENERAL INFORMATION ]==
- If you are upgrading on *NIX, make sure you run 'make clean' and './Config'
  first, before doing 'make'
- The official UnrealIRCd documentation is doc/unreal32docs.html
  online version at: http://www.vulnscan.org/UnrealIRCd/unreal32docs.html
  FAQ: http://www.vulnscan.org/UnrealIRCd/faq/
  Read them before asking for help.
- Report bugs at http://bugs.unrealircd.org/
- When upgrading a network, we assume you are upgrading from the previous
  version (3.2.7). Upgrading from 3.2.6 or 3.2.5 should also be no problem.
  However, if you have a network running with servers that are several versions behind
  (eg: 3.2.1) then you might experience small (desynch) problems.
  Please also minimize the time you have multiple versions running, a few days or
  one week is generally not a problem, but having mixed versions on a network for several
  weeks or months is not recommended.
- The purpose of the sections below (NEW, CHANGED, MINOR, etc) is to be a SUMMARY of
  the changes in this release. There have been 70+ changes, and trying to mention them
  all would be useless, see the Changelog for the full list of changes.

==[ NEW ]==
- set::level-on-join: this defines which privileges a user receives when creating a
  channel, default is 'chanop', the only other available setting is 'none' (opless).
- Away notification through WATCH: This allows clients to receive a notification
  when someone goes away or comes back, along with a reason, a bit like IM's.
  There's probably no current client supporting this but it would be a nice feature
  in notify lists. Client developers: see Changes file for full protocol details.
  This feature can be disabled by setting set::watch-away-notification to 'no'.
- Spamfilter: Slow spamfilter detection: For each spamfilter, Unreal will check,
  each time it executes, how long it takes to execute. When a certain threshold is
  reached the IRCd will warn or even remove the spamfilter. This could prevent a
  spamfilter from completely stalling the IRCd. Warning is configured through
  set::spamfilter::slowdetect-warn (default: 250ms) and automatic deletion is
  configured by set::spamfilter::slowdetect-fatal (default: 500ms).
  You can set both settings to 0 (zero) to disable slow spamfilter detection.
  This feature is currently not available on Windows.
- SSL: set::ssl::server-cipher-list can be used to limit the allowed ciphers
- SSL: To specify when an SSL session key should be renegotiated you can use
  set::ssl::renegotiate-bytes <bytes> and set::ssl::renegotiate-timeout <seconds>.
- UHNAMES support: This sends the full nick!ident@host in NAMES which can be
  used by clients for their IAL. mIRC, Klient, etc support this.
- There have also been some behavior changes, which can be considered NEW, see
  next section (CHANGED).

==[ CHANGED ]==
- IPv6: On IPv6 servers you no longer have to use ::ffff:1.2.3.4 IP's for IPv4 in the
  config file, you can use the simple 1.2.3.4 form, as they are converted automatically.
- When someone is banned and /PARTs, the part reason (comment) is no longer shown
- ChanMode +S/+c: now strips/blocks 'reverse' as well
- Smart banning is now disabled by default because it was too annoying, this means that
  f.e. if there's a ban on *!*@*.com then you can still add a ban on *!*@*.aol.com
- except ban { } now also protects against ZLINEs and ban ip { }
- Modules: user modes and channel modes without parameters (eg: +X) no longer have
  to be PERManent, this means they can be upgraded/reloaded/unloaded on-the-fly.

==[ MAJOR BUGS FIXED ]==
- Zip links issue (Overflowed unzipbuf)
- Crash issue with 3rd party modules that introduce new channel modes w/parameters
- Mac OS X: Various issues which prevented the IRCd from booting up
- Remote includes (constant) crash with new curl/c-ares versions
- A few rare crash issues, including a crash when linking to another server
- In case of clock adjustments, the IRCd will no longer freeze when the time is
  adjusted backwards, nor will it incorrectly throttle clients when adjusted forward.
  However, because clock adjustments (time shifts) of more than xx seconds are 
  so dangerous (and will still cause a number of issues), big warnings are now
  printed when they happen.
  Morale: synchronize your system clock, or use the built-in timesync feature.

==[ MINOR BUGS FIXED ]==
- CGI:IRC: Several IPv6 issues, both on IPv6 IRCd's and CGI:IRC gateways
- IP masks in oper::from::userhost sometimes didn't match when they should
- (G)ZLINE's on IPv6 users were sometimes rejected
- CHROOTDIR works again
- OperOverride fixes
- Throttling is now more accurate
- And more... see Changelog

==[ KNOWN ISSUES ]==
- Regexes: Be careful with backreferences (\1, etc), certain regexes can slow the IRCd
  down considerably and even bring it to a near-halt. In the spamfilter user target it's
  usually safe though. Slow spamfilter detection can help prevent the slowdown/freeze,
  but might not work in worst-case scenario's.
- Regexes: Possessive quantifiers such as, for example, "++" (not to be confused with "+")
  are not safe to use, they can easily freeze the IRCd.
- Suse 10.3 in 64 bit mode (amd64, x64) is known to crash UnrealIRCd on-boot, this is
  likely to be a Suse 10.3 bug as over 3 people reported it with that exact OS / arch.

==[ ADDITIONAL INFO ]==
* See Changelog for more details

OLD CHANGES:

[ Unreal3.2 ]
- Fixed a _serious_ bug in SERVER command, reported by Valen, Forrester,
  M0rpheus, JK, and Hiten.
- Fixed /botserv problem
- Fixed permission problem with SSL .pem files (was o+r)
- Removed a redundant time.h include reported by trippin
- Modified rehash flags to use strnicmp rather than match (faster)
- Fixed some points of confusion of possible cptr->passwd bug in
  m_server_estab, reported and fixed by Kanzen_Greiver
- Fixed some more points of ->passwd bugs
- Added in devdev's INSTALL replacement
- Made it so you don't get a +W notice if you /who or /whois yourself reported by Ron885
- You can no longer specify an *@unrealircd.com/org, or unreal-*@lists.sourceforge.net email
  as your KLINE_ADDRESS (the "Why am I K:lined?" messages got too annoying)
- Removed some irc.flirt.org references.
- Made it so if a channel is +O or +A and you are not +O or +A and not in the channel, you can not
  /topic #channel same for +b if not +o or on the channel. Suggested by Sysop_Mars
- Fixed a bug where you would receive a double notice when someone does a /who 0 o
- Added first part of the new config parser, s_conf2.c
- Added the next part of the new config parser, and some even more
- Fixed a missing : on numeric 379 found by script0r
- Added some a bit functional _conf_class code
- Some more _conf_class code
- Typing /stats or /stats invalid-flag will return a list of valid flags
- You no longer receive a /stats +e notice when no flag is specified, or an invalid flag is specified
- Some more newconf code, and some more
- Added drpass (X:line) to the config code
- Some more config2 code
- Removed parser builtin directive include, and replaced it with our own
- The config2 now uses strerror() to display an error, rather than the numeric
- Fixed s_user.c so umode N and T cannot coexist
- Added tld (T:line) to the config code
- Finished _conf_oper
- A report_configuration code (showoff)
- Finished _conf_listen
- Finished _conf_allow
- Added TODO in top of s_conf2.c
- Fixed a bug reported by S7 that affected chg* and set* as well as sdesc
- Started work on the except parser
- Wierdoe parse things
- Made except parser use a specialized _configflag_except instead of wasting
  a byte.
- Changed version to "Unreal3.2-Selene" (Selene = female character in a
     comic mag i found at my grandmas :P)
- Finished _conf_vhost
- Made _conf_listen understand listen <port> {}
- Finished _conf_link
- Added some _conf_link validity and added ->class option (forgot it)
- Made ircd.c use the newconf with me.* setup. Uses the first and the best
  as listener
- Finished _conf_ban (try and attack us now idiots!)
- Made "No response from", use GLOBOPS instead of GNOTICE. 
  Fixes TODO Bugfixes Thu Dec 14 2000 Priority 10 added by Stskeeps
- Fixed telnet close server thing, fixes Wed 20 Dec 2000 priority 9, 
  added by codemastr
- Fixed /whois shows what channels +S are in.
  Closes stskeeps/Dec30-2000-10-Bugfixes =======
- Fixed a STATS_ONLYOPER bug
- Fixed a ircd.tune bug (the file may not write if it didn't exist)
- Fixed a serious bug reported by Kanzen_Griever
- Merged in sts-laptop branch
- Made /admin use the new config (had to modify some newconf stuff to make a backwards copy
  of the list as well)
- Made U:lines loaded from the newconf, also made /stats U read the U:lines from the newconf
- Added listen {} runtime-configuration code work :))
- Removed unrealircd.conf from the stock
- X:line was replaced with drpass {} in /restart and /die (will make them faster as well)
- Made +u do a auditorium/star chat feature, suggested by |Martin|=======
- Fixed a G:line bug that would allow certain masks to be interpreted as *@*
- Fixed the same bug in shun that affected G:line
- Made +f faster by replacing 2 strchr()s and a strrchr() with a if () inside an existing loop
- Fixed a +f bug reported by Enstyne
- Fixed a SVSMODE/SVS2MODE bug that could cause an incorrect +i and +o count, reported by CaliMonk
- Fixed another SVS2MODE bug that would make it send an empty MODE change
- Removed the old chmode +x = +c and +I = +V support (3.x use +cV and 2.1.7 is obsolete)
- Implimented except socks {} and tld {}
- Removed the old read_tlines code and made /stats t show tld {} blocks
- Fixed bug with /whois showing +S user channels (ChanServ)
- Made /mode (umode change) only send 1 unknown mode msg, forgot who suggested this one
- Made /rehash -motd/rules use tld {} 
- Heavily recoded /rehash (removed a ton of coding)
- Updated match() to have some optimizations from bahamut
- +GScm now affect /part msgs (requested by SegFault and others)
- Added Find_link, serv->conf, did a Find_tld fixup, removed serv->nline, 
  removing a lot of my_name_for_link crap, indented s_serv.c
- Recoded m_server(YES!) -stskeeps
- Fixed a +S bug reported by script0r
- Fixed a #undef USE_SSL problem found by codemastr.. caused by
  Sts(TM)coding
- Added set {} (unrealircd.conf/network file replacement)
- Made vhost {} use from {} for hosts
- Fixed some stskeeps-drunk-coding stuff in m_server
- Fixed a typo "receive" not "recieve"
- Made SVSNICK check if a nick is valid
- Made get_sendq be a macro
- Added find_ban, AllowClient() (old attach_Iline)
- Temporary disabled /svsnoop, /akill, /sqline /unsqline, /kline, /unkline
  /zline, /rakill, /unzline and /svso
- chkconf is not being built anymore
- Ripped out s_conf.c with the roots. 
- Ripped out add_listener
- Disabled a lot of stuff that needs to adapt to conf2
- Made allow {} work
- Changed allow {} to do user@host instead of user item
- Took out my_name_for_link
- Temporary disabled D:d lines/SQLines/Qlines
- Fixed some /connect stuff
- Disabled rehash temporary
- Made ban user/ban realname work (s_unreal.c needs to be modified)
- Added Zogg to credits
- NOTE: Unreal-devel is handicapped right now, code in progress, do not use
- Did a little speed up on Find_ban
- Made /setname and /chgname use ban realname {}
- Made /oper work with newconf (come get us now bastards!)
- Made +c show class names in connect
- Fixed a minor problem with ban {} and oper {}
- Made ban nick {} work
- Added the first (sorta) working version of the config converter
- updconf now makes use of from {} in oper {} to eliminate duplicate O:lines
- Made allow {} passwords work (AllowClient) - TODO: I:line encryptions
- Made allow { maxperip }; work, the old ONE password thing, just better
- Added a hack to updconf so ONE sets maxperip to 1 and made another hack
  -I IPMASK:HOSTMASK:IPs,... to allow you to specify an ipmax. ex. 
  -I *@205.188.*:*@*.aol.com:10,*@*:*@*:100 that will allow 10 on your aol.com allow, 
  and 100 on your *@* allow
- /vhost uses newconf
- Removed old vhost.conf code 
- Fixed check_pings (check_kills) code, so G:lines & ban nick/ip/realname
  works again
- /connect works now :), TODO: D:d lines, V:line needs fixing, badly
  says "Unknown location" atm on uplink
- Took out MyMalloc & co, direct to malloc/realloc/free now. Crashed in
  DEBUGMODE
- Added ConfigItem_link->ipnum
- Fixed a compile bug with DEBUGMODE
- Changed a load of old aConfItem crap .., FIX: ConfigItem_link->options
- Fixed a /connect bug
- Made /svsnoop "work" again, moved it to s_svs.c (and made that file too)
- Made /svso work again, moved it to same place as svsnoop.
- Made /rakill and /akill work again :). Added banflag.type2
  FIX: *@* detection
- Fixed a check_pings problem with usernames
- ban ip {} works 100% now
- Made /stats C work and /stats H. Intregrated into one.
- Made /zline, /unzline work. 
- Added CONF_BAN_TYPE_TEMPORARY
- Fixed a ban ip {} bug in check_pings
- Removed some waste of oldconf
- Moved advanced_check to s_svs.c
- Made /kline work again, with newconf
- Made /trace work again properly with class names
- Made /sqline /unsqline work again.
- Made SQLINE synching work with newconf
- Fixed a little problem with SERVER servername :info crashing the ircd
  Long live the Floridan way of counting
- ban server {} works the original way it was intended to now
- Classes keep reference counts now, and moving classes (oper) works good
  too.
- Added /trace class search results (class->clients)
- Fixed some protocol error in server_synch
- Made listener code work good .. 
- Made reference counts work again
- Started some rehash work
- Made full class work on servers too
- Fixed a refcount bug
- Fixed a spread server bug
- Some more rehash stuff
- Fixed check_pings problem (crash)
- Fixed negative timestamps problem (crash)
- Fixed a problem with cptr->class counting for servers
- Made a bunch of /stats flags work with newconf
- Added some MALLOCD (mini debug malloc by stskeeps..)
- Removed some C++ comments
- Made close_listeners work correctly again
- Removed some old check_* mammut code
- Fixed a bunch of possible bugs in newconf
- Added sendto_realops logging of config errors
- Made /rehash work .. sortof. Fixed some crash bugs
- Added /stats P on listener info (oper-only)
- listener temporary stuff works now
- Fixed temporary stuf with conf_link
- Fixed a problem with +x
- Made CPATH be unrealircd.conf and init_conf2 use configfile instead
- Disabled calls to dynconf
- Added validate_conf, added dynconf checking, me, admin, class, oper
  testing
- Added config_progress() Fixed temporary stuff
  with conf_link
- Made tld {} get rehashed
- Made listen/allow get validated
- Finished up validate_conf()
- Made badwords be in newconf (you can now specify a replace word for each word)
- Made vhosts and badwords rehash
- Fixed a bug in the rehash code
- Made it so set::auto-join and set::oper-auto-join can be excluded to mean no auto join
- Changed prefix_quit to prefix-quit (all others use - not _)
- Fixed a minor bug causing a mode without any flags to be sent
- Finished up deny dcc {}.
   TODOs: dcc_del_wild_match doesn't work. dcc_wipe_services() either
- Made deny_dcc get rehashed
- Made it so the IRCd can survive with certain set {} errors (uses defaults)
- stats-server and services-server are no longer required (missing = disabled services aliases)
- socks set {} options are now optional. Defaults are used if missing
- If an invalid ban or except is found, it is removed
- Some small SSL fixes .. 
- Added a notice on connect for SSL users with key length
- Fixed a /kline and /unkline buffer overflow, reported by [-Th3Dud3-]
- Fixed a crash in /stats k regarding temporary K:lines
- Fixed a missing " in validate_conf
- Replaced a few strlen()s with sizeof(), should make the IRCd start a bit faster
- Fixed a svsmotd bug (from 3.1) prevented adding lines to the svsmotd
- Recoded some dynamic motd stuff. Now uses 1 function.
- Removed an unused var from the old T:line code
- Removed a redundant check in SVSKILL
- Removed some old code from LUSERS (it was moved due to IRCStats but some leftovers remained)
- Added deny channel { channel "channelmask"; reason "why"; }; and
        allow channel { channel "channelmask"; };. Replaces chrestrict
- Made those above get rehashed
- Killed ircdupstr and called it ircstrdup
- Made link { options { work OK again. Had a dead loop as well
- Made autoconnect work again :>. Changes in behavouir: It connects more at
  a time now. You need autoconnect flag in options.
- Minor OpenBSD support cleanup
- bsd.c, channel.c, s_svs.c, s_unreal.c, s_kline.c, and s_extra.c now use ANSI 
  standards for naming function params
- Made connfreq unable to less than 10
- Added deny link { mask "servermask"; rule "connectionrule"; type all/auto; }; (equivilant of D/dlines)
- Made admin {} get rehashed
- Got /stats x to work again
- Recoded check_pings, with bits used from bahamut-ircd/hybrid-ircd, credits
  to lucas.
- Removed return_servers() and made servers be called Servers, and be a
  global variable. Done on request on Great Master codemastr.
- Made crule.c use the server list rather than the whole client list for checking (faster)
- Sped up some channel stuff a lot using a bahamut type user search
- Added CommandHash optimation .. this is not done 100% yet. uses msgtab as
  reference
- Removed msgtab part of parse, removed the bigass hashtable msgtab,
  removed inittoken, made command initalization happen in init_CommandHash
- Adapted /stats M to it. Removed /helpop ?commands temporary. Confirming
  hashtable works.
- Fixed windows CRLF problem in conf2, reported by Zogg
- Added Member and Membership and made the IRCd support this. Using
  "freelinks", todo: garbage collection
- Added find_member_link and find_membership_link. Made Floodopt only 
  get allocated for local users. Removed aFloodOpt in Link,
- Made a speedup in is_halfop (dumb code)
- Somehow is_halfop and co got called when a server set a mode .., added
  IsServer check (auto-return 1)
- Fixed the 9-month old win32 DNS bug, caused by Stskeeps's incidential
  delete. Found by Zogg and CVSweb
- Made autoconnect msgs only go to +os
- Made DNS cache list show a notice to other ops
- Made /stats C show flags correctly
- Added deny version {}
- Made deny link {} rehash
- Removed class.c, from the old conf
- Removed dynconf.c, from the old dynconf
- Fixed a deny version {} bug (oops)
- Fixed a config_load win32 problem, found by Zogg, fixed by Stskeeps/codemastr
- Overwrote s_conf.c with s_conf2.c, and removed s_conf2.c. Viva la Conf2!
- Added /stats I, Y, b, d, D, v
- /who now got its right behavoiur regarding masks, bug found by Zogg
  (acptr is not cptr)
- Made set::modes-on-connect work :) (strip out MODE_X and stuff plz?)
- Moved dynconf stuff from s_svs.c to s_conf.c, on popular request
- Made NAME_SERVER (set::dns::nameserver work). The IRCd no longer
  uses /etc/resolv.conf as reference.
- Updated most of /stats S for newconf
- You can now specify oper flags using the old method:
	(new method) flags { flags here }; (old method) flags flags_here;
- Removed a lot of vars and stuff from the old config, also made some cleanups to reduce source size
- Made del_Command(). 
- Rewrote makeconf and makenet to use newconf (added some new features to makeconf as well)
- Made MembershipL->flood get bzero on out delegation
- Removed stskeeps's lazy add_CommandX (tm) code
- Made IRCd not crash on /kick from servers
- Fixed a typo in makeconf
- Made /whois not return channels for services
- Made makeconf use "ban nick" instead of "ban nickname"
- Fixed ssl_client_handshake bug reported by IpAddress
- Made ./Setup not do dynamic configuration any more
- Changed reference in Setup from ircd.conf to unrealircd.conf (cosmetic)
- Changed output of updconf from ircd.conf.new to unrealircd.conf.new
- Changed the output of makeconf from ircd.conf to unrealircd.conf
- Renamed hostmask to hostname like it should be in makeconf - IpAddress
- Added "get_host" old 'H' O:flag
- Added #define KILL_LOGGING, by otherguy
- Added /cycle #channels, suggested by ^loki^
- Added Modules, using dlopen() and LoadLibrary for *nix/win32. 
- Added /module load <path.to.so>, /module status (list modules), 
  /module unload <modulename>
- Added loadmodule "filename.so"; and made the modules
  unable to get loaded twice with same name.
- Reintroduced "fake lag". Flood algoritm works this way:
   Make next check for parsing be 
   (1 + (length of command+parameters / 60)
- Started on commands.so making, works good atm -on req of codemastr,
  both as m_module.so and commands.so :) - long live dynamiclinking
- Fixed bug with double module unloading, bug found by RaYmAn
- Win32 Changes
- Had to convert the connect messages back to strlen() because of a bug found by Bagge
  working on a way to make it better though
- Added unknown connection flood protection (settable in config.h)
- Made chmode +z only settable by umode +z users or U:lines or services.
- Updated badwords.channel.conf and badwords.message.conf to use newconf (requires an include in 
  the config file)
- Made conf2 able to load empty files as well, with warnings
- Added module_sym("functionname"), for modules, like, sajoin might want to
  do fp_m_join = module_sym("m_join");
- Put out m_chghost, m_sethost in modules, remade Makefile structure and
  added src/modules
- Modified an old Unreal3.1.1 to be network file converter, and converted
  all of the networks files to the new format.
- Fixed a bug with RAKILL and UNSQLINE not working
- Moved m_chgident to an .so
- Changed license of m_dummy.c (dummy module, skeleton), so people can do
  closed source modules.
- Moved m_setname to a .so
- Started work on the new improved command hashing system
- Modified command hashing system to Sts's belief of how eggs should be
  made. (quick, dirty and fcked up)
- Fixed a bunch of bugs in the command hash system caused by sts:
  - You can't send numerics to servers
  - Using ERR_NOPRIVLEDGES (says you aren't oper)
  - Disabled commands allowed by unregistered users from registered users
- Removed networks/unrealircd.conf
- Implimented new logging system using log {} (if you leave it out it reverts to the old ircd.log)
- Added Hooks, only one working now is HOOKTYPE_LOCAL_QUIT 
- Added log flag kline (accidentily forgot it)
- Added #define HOOKTYPE_LOCAL_NICKCHANGE
- Made MyMalloc be MyMallocEx in codemastr's log {} code. Fixes junk pointer
  problem - discovered by sts/Morbid
- Removed the old /rehash flags, reported by Morbid
- Reverted Demigurus's select() speedup patch, did speedup, but it 
  also caused a good bit of CPU.
- Fixed a globops bug that required it to have a : found by ROXnet
- Removed KILL_LOGGING replaced by log {}, found by Morbid
- Removed PROTO() and general h.h/proto.h cleanups (made source 3.14K smaller)
- Implimented a system using chmod() at startup to try and keep the config file from being read 
  by people who shouldn't have access. (set through ./Config)
- Added oper::swhois idea by Robertsog (NOTE: since this is done before the mode change, a U:Line changing
  the SWHOIS after you /oper will override this)
- Added a donation credit
- Reverted a change
- Fixed a double definition (double m_chghost and m_chghost.so)
- Moved /sdesc, /setident to modules.
- allow { } now supports encrypted passwords -Syzop
- Made static linking a little more possible
- Made /kick not core on users kicking servers. (WTF?)
- Fixed a problem with users opping servers.. Found by Morbid
- Fixed a problem with SDESC module token being wrong - Found by eternal
- If no oper flags are found, default to locop (suggested by devdev)
- Added tld::channel so you can make people join a channel based on hostmask
- Made it so a motd or rules loaded in 2 seperate tld {} is only read into memory once (may need debugging?)
- Fixed a bug where the IRCd didn't validate hosts specified in a vhost {}
- Added the ability to specify a username to spoof in a vhost {} instead of vhost "host.name";
  you can vhost "user@host.name"; (suggested by IpAddress)
- Fixed a bug where you could use an infinitely large host in a vhost {} (now limited to HOSTLEN)
- Fixed improper old username being displayed reported by IpAddress
- Added M_NOLAG.
- Added new CRC32-hex-based IPv4 and hostname cloaking form
- Make users that send a forbidden file get auto blocked from sending other
  files. sptr->flags & FLAGS_DCCBLOCKED.
- Readded timestamp to log, accidentily got removed
- Made it so /stats C doesn't show the user@host of servers to non-opers
- Possibly fixed the vhost crashing bug, with much help from IpAddress
- Found a way to do +x IPv4 cloaking right. 
- Added set::cloak-keys { longvalue; longvalue; longvalue; }; for the cipher
- Fixed a NETINFO parameter problem - solves the new NETINFO format
- Made a little hack to newconf to allow varname=value; to try and keep it some what similar
  to the new config files of other IRCds. NOTE: the = is completely optional, it is allowed
  but not required
- # comments can be used anywhere in a line now (just like // comments) for compatibility with other
  IRCds
- Added sajoin/sapart error message patch by NiQuiL (modified slightly by codemastr)
- Implimented IRCNet style server redirection, based on the hybrid-7 code. Some clients will connect
  to the specified server automatically, others will require you to do it manually.
- Made /info use @unrealircd.com emails instead of @tspre.org
- Removed FNAME_OPERLOG and replaced it with log {} flag oper
- Removed OWNLOGON (did nothing?)
- Replaced FNAME_USERLOG with log {} flag connects (logs user connects and disconnects)
- added temporary define #define OLD_CLOAK
- Fixed up some codemastr(TM) coding regarding M_*
- Implimented a cloak fix based on code by Zogg (just used a #define ircabs rather than abs())
- Expanded the chmod() security fix to files added via include filename;
- Possible FD leak in ircd_log, caused by some codemastr coding(TM)
- #define HELP_WHO for the "did a /who 0 o"
- Added a new Win32 GUI does it work, no one knows
- Rewrote the ircd_log function a bit to fix the FD bug better, not sure wtf I was smoking
  when I wrote the last one :P
- When IRCOps are breaking into chans with invite only (+i) or 
  key-protection (+k) a eyes-notice is sent like it is on banwalk. -NiQuiL
- Added unitedirc.network -NiQuiL
- Removed a , in NiQuiL's banwalk message
- Fixed DEBUGMODE problem, found by someone ..
- Don't know why but m_file.so was in the modules makefile, removed
- Added irc2.10.3's resolver. Fixes debian-woody-libresolv problems..
  Still some fixes to be done
- More res.c fixes ..
- Final res.c fixes 
- Added /rehash -all patch by NiQuiL
- res.c: fixed ircsprintf problems
- Fixed ircd_log to work in windows
- Removed __P, windows doesn't like it, and only old compilers need it
- Fixed a ban realname {} bug that _may_ have something to do with the negative user count bug
- Fixed do_dns_async problem with new res.c
- Removed doc/ADD-TO-IRCRC, doc/INSTALL, doc/Manual, doc/Operators,
  doc/irc.1, doc/ircd.8, doc/server-compile-guide
- Made it so Invitewalk and Keywalk don't show for U:lines
- Fixed a cloak bug caused by stskeeps(tm) "not knowing how to use << and >> coding"
- Fixed some cloak bugs, and applied +x crypto to hostnames as well
- Changed some non-error messages in newconf from config_status to config_progress
- Added a way for newconf to report its errors in windows using a "Config Error" dialog
- Fixed the /stats Z bug reported by RaYmAn
- Added missing resource.h defineand missing +1 in MyMalloc of win_log reported by McSkaf
  Seemed to work without the +1 but added it just to be safe.
- Fixed possible crash bug imposed by too many users per ip in AllowClient -found and fixed by McSkaf
- Made IP Mismatches getting sent to UMODE_JUNK instead
- Added method mod_load in dummy example and made it work. mod_load() is executed 
  when server is ready
- Fixed minor problem with mod_load code
- Fixed possible crash with /quote dns l
- Removed newdns
- Fixed a memory bug in win32 code found and fixed by McSkaf, and fixed a typo
- Fixed a win32 bug found by RaYmAn causing the tray icon not to be displayed sometimes
- Fixed a bunch of Win32 bugs reported and fixed by McSkaf
- Made the IRCd delete its tray icon in win32 on SIGSEGV
- Brought 005 up-to-date with spefication - added CHANMODES= support
- Applied res.c.patch from McSkaf, fixes win32 GPF, but fixed mising HE(ocp)
- Applied s_debug.c/config.h patch from McSkaf, makes DEBUGMODE under
  win32 working again - fixed some errors in the unix part of it.
- Made the rehash button work in Win32
- Fixed up some CHANMODES= support and added WALLCHOPS support
- Added keyboard shortcuts to the win32 config and about popup menus
- Possible fixed a buggie in +f
- Fixed a bug causing Found your hostname (cached) to be displayed 2 times
- Fixed RTLD_NOW problem with openbsd
- Removed SJOIN/SJOIN2 support in SJOIN
- Fixed a +f bug, found by NiQuiL
- Applied McSkaf's winlocal.patch, seems to work ok, fixed some problems
  though in unix/win32 (cptr->fd can be -3. Should fix some READ ERRORS as
  well. 
- Some Open(aaaaaaaaaaargh)BSD patches, most stubborn compiler i've ever 
seen. gmtime warning still there
- Had to revert McSkaf's winlocal.patch, caused too many crashes. I believe
  there is a better way to do this ..
- Added a new StripColors heavily based on the one from xchat by Peter Zelezny
- Fixed doc error in s_conf.c
- Made IPv6 compile atleast, and work. Current problems:
- Made you able to bind to specific IPv6 IPs (we don't have FFFF::*
  functionality yet)
- Made a crazed out IPv6 cloaking
- Made chghost/chgident able to do :'s
- Finished up IPv6 - Kudos to bball/NiQuiL (shells), perian/bunda/larne 
  (testing)
- Made listen format able to do:
     listen [ip]:port, for IPv6 - listen [3fff:ff::1]:6667
- Fixed some compilation error with IPv6
- Fixed-fixed listen format troubles, larne++
- Possible fixed some +d bug(s)
- Added doc/unrealircd.conf.txt (by devdev), doc/services-install-guide
  (zyrol, edited a bit by stskeeps)
- Added richedit 1.0 support so Credits,License, etc show the bold and underline formats in win32
  code by codemastr with help from McSkaf (still needs work to support reverse and color)
- Added code so the rich edit _should_ work with any version of the richedit dll
- Changed all TStime() to use timeofday - CPU SAVE
- Removed userload.c & userload.h
- Added McSkaf's patch for the richedit to be able to support reverse codes
- Fixed the problems with 100% cpu, hopefully
- Fixed the 100% cpu problem, again, HTM is screwed now though?
- Got /stats O working
- Made the topic for a +s channel hidden from non-members (reported by Bagge)
- Removed ce_vardatanum (wasted CPU and memory)
- Added code to make the config parser try and stay alive when an error is encountered
- Added events code and converted some stuff to events
- Converted htmcalc/lcf to events
- Fixed /stats L bug found by larne
- Fixed the loop, made htmcalc more clean
- Applied McSkaf's winlocal patch II, only changed Debug() and removed
  DEBUGMODE from config.h. Still cores, but we might be closer to a
  solution. Broken code, do not use devel right now
- Fixed to winlocal by McSkaf
- More fixes
- Made /die not show admins IP (fixed by Stskeeps after his users nuked him..)
- Added McSkaf's mIRC color parse patch
- More winlocal fixes, and a +f bugfix
- Added HOOKTYPE_LOCAL_CONNECT (aClient *)
- Fixed DEBUGMODE under win32
- Fixed /trace problem with slots (idea from ircu2.10.01+winnt)
- Fixed listener problem, reported by McSkaf
- Minor Win32 bug fix
- Fixed problem with addto_fdlist(cptr->fd) caused by slotpatch
- Fixed minor socksfd problem in read_message
- Fixed identd problem
- Commited McSkaf's tab patch for win32
- Possible fixed fdlist problem with default_fdlist
- Added some numeric checking in m_server*
- Made possible speedup of fdlist checking in s_bsd.c
- Updated makefile.win32 for events.c
- Added McSkaf's rehash patch
- Made the Status Dialog update its values every 5 seconds
- Made slot arrangement be different.
- Merged McSkaf's hostname patch, debug patch, s_misc patch
- Made validate_configuration check for !conf_listen
- Made newconf state unknown directives (found by Madkiss)
- Small s_socks.c bugfix possible causing indetectable socks
- Fixed /whois problem, maybe introduced some others?
- Removed send_out_svsmode, not in use and broken too
- Made Config say Unreal3.2
- Made a popup menu for the tray icon to contain the same 'buttons' as the GUI does
- Made Unreal run correctly on OpenBSD (thanks to PFAK for the shell)
- Fixed with bug with ircd not -r'ing users on nick switch
- Fixed the /stats C = crash if it is a leaf bug found by BaTmAn
- Added a patch by McSkaf to make Unreal reload its tray icon if explorer restarts
- Fixed a win32 bug found by eternal
- Fixed yet another win32 bug (I think I should test before I commit ;P)
- Changed how hooks work, making them support voidfuncs
- Added src/modules/scan.c and src/modules/scan_dummy.c
- Made militime() just as accurate on win32 as on linux
- Made match() a little bit faster
- Fixed codemastr's broken millitime patch (sys/timeb.h)
- Added scan_socks.c, added and moved some stuff to
  include/modules/scan.h (the dir too)
- Converted threads to IRC*Thread by codemastr. 
- Updated the win32 thread code (maybe it will work now?)
- One last final change for the win32 thread stuff, but at least it works now :)
- Added hooks to allow you to add config directives
  - HOOKTYPE_CONFIG_UNKNOWN sent after config parsing, look in conf_unknown for all the
  blocks the config parser didn't understand
  - HOOKTYPE_REHASH sent when a rehash is being done
  Note: if you parse a block in conf_unknown make sure to del_ConfigItem it from the list
  or Unreal will return an unknown directive error for it.
- Fixed problem with u_int32_t servicesstamps, with SVSMODE and SVS2MODE,
  found by Andrew Church
- Unknown ban * {}, except * {}, deny * {}, allow * {} are accessible to modules
- Fixed some scan_socks problems - this needs a good hand with
- Fixed up scan_dummy.c
- Fixed /quote sethost : and /quote setident : exploit, found by ac1d, fixed
  by Griever
- Allowed capturing of unknown set {} variables by modules
- Minor src/Makefile screwup fix
- Added some pthread checking support
- Fixed double dependicies bug.. stupid dlsym
- Added /version using numeric 105 for remove clients to show protoctl (idea from hybrid)
- Added HOOKTYPE_PRE_LOCAL_CONNECT to allow banning before connection. If the module parsing 
  this hook returns >0 the register_user exits
- Removed src/agent.c (empty file)
- Removed src/userload.obj from the win32 makefile
- Added link::options::quarantine suggested by DumbFish
- Made blackhole.so work
- Fixed a set_non_blocking bug
- Fixed a codemastr screwup in quarantine code
- Removed the old SOCKS check code.
- Fixed a quarantine bug
- Added NETWORK= numeric 005 token for mIRC 5.91
- Fixed some scan-socks and blackhole fuckups
- Added ./configure, autoconf generated configure script, (still need to update ./Config)
- Config fixes, settings.h and Makefile.dist are now dead. RIP.
- Fixed a typo in configure
- Rewrote Config, it is now perfectly suited for an autoconf interface rather than a standalone config
- Minor fixes to Config, a license, etc
- Made changes to Config (removed a few unnecessary loops)
- Made CRYPTOIRCD get cached in config.cache
- Fixed generation of certs, moved from configure.in to Config
- Fixed lack of -lssl
- Fixed the keywalk bug reported by BaTmAn (?)
- Fixed a few configure problems with sunos and amiga
- Fixed an OpenBSD bug reported by perian
- Moved config/ to autoconf/
- Some fixes to configure.in that seemly got deleted?
- Some more configure.in fixes, and made ./Config -q & -quick (do not ask
  questions, just run with data in config.settings)
- Some more more configure.in fixes, regarding -export-dynamic, and buffer
  pools, and some illegal if test $var = othervar
- Fixed a configure.in error with IRCDLOBS
- Taking some more Config changes
- Some more INET6 fixes
- Made Unreal use FSU Pthreads if the pthreads on the system will show multiple copies of Unreal in ps
- Fixed a /rehash bug dealing with echoing to stderr
- Added MAXCONNECTIONS to configure
- Added a little utility to make converting an m_* command to a module easier
- Moved m_svsmode and m_svs2mode to m_svsmode.so and updated modulize a bit
- Moved m_swhois and m_svsmotd to modules
- Fixed a bug where configure would pick both -ldescrypt and -lcrypt
- Fixed /stats to work fully with newconf
- Added mod_depend checking, see scan_socks.c for example
- Added in Griever's SJOIN fix
- Made mod_depend a bit cleaner to use
- Removed some remnants of umode +b
- Added configure check for glob.h
- Added the ability to use file globs in loadmodule and include (only if your system has glob)
- Added ./Config option to enable IPv6 (and made a configure check to make sure we can)
- Fixed autoconf/Makefile screwup caused by codemastr
- Fixed a problem with IPv6 always enabled (could you check this fix, code?)
- Fixed a bug allowing channek keys to have spaces
- Cleaned up some thread porting code
- Added a new versioning system to allow easy tracking of bugs
- Made glob() use GLOB_LIMIT on OpenBSD 2.9 to help prevent a DoS
- Fixed makeconf
- Changed the way modules work. We're now at MOD_VERSION 2
- Changed ALL MODULES to version 2
- Commited the +k fix to +L
- Made version.c depend on ../Changes
- Made the ircd call mod_unload when it shuts down
- Made use of the new module_load parameter in mod_init, and made commands.so use mod_load
- Fixed a module bug where loading == unloading
- Moved blackhole into scan.c and removed blackhole.c, and fixed some
  blackhole bugs.
- Updated thread porting code to support more functions
- Fixed a pthread_join
- Rewrote updconf a bit, should work flawlessly now (?)
- Made a minor message change to ./Setup
- Fixed some minor mod_load troubles, and made it go a little more sensible
  regarding retarded rehashes
- Added some thread debugging, and fixed a SVS2MODE bug
- Fixed a major scan bug caused by stskeeps(TM) lazy-coding
- Hmm .. minor s_bsd.c read_message fix
- Some /info stuff, updated docs, .CHANGES.NEW, .RELEASENOTES
- /htm fix by Griever
- Fixed a bunch of warnings reported by Red Hat 7
- Random cosmetic fixes
- Updated the stats help list for newconf
- Removed include/userload.h (not used)
- Removed a few missed userload.h references
- Minor cosmetic fixes, and SVSNLINE (ban realname).
   SVSNLINE + reason_why_moo :realname mask - Add global ban realname
    ('_' is converted into spaces)
   SVSNLINE - :realname mask             - Remove global ban realname
   SVSNLINE *                            - Wipes all global ban realname
- Fixed FIXME dcc_deny_wipe_services
- Fixed some IsToken / sendto_serv_butone screwups - Stskeeps(TM) coding
- Actually added m_svsnline.c
- Removed a bunch of unused coding
- Win32 fixes
- Made a /scan fix, and fixed some version numbers found by Morbid
- Updated m_template.c to use module version 2
- Removed a // comment in src/ircd.c
- Fixed a bunch of updconf bugs reported by DarkSypher
- Fixed an SVSFLINE bug when removing an unknown dccdeny
- Made win32 compile and work ..
- Made scan_socks & scan work under win32. Only bug is a \1 IP in /quote scan (?)
- Added set { blackhole "insideip:port" { "outsideip"; }; }; (useful if
  being behind firewall)
- Fixed a little scan.so bug
- Fixed so we compile without symbols in win32 .. 
- Fixed some rant stuff
- Fixed a documentation bug in unrealircd.conf.txt, made config_error
  actually bitch when loop.ircd_booted
- Made badword fix found by eternal/Jsmj
- Changed pthread process check to pthread_join on proposal and idea by
  codemastr
- Some configure.in fixes to pthread stuff
- Added possiblity to add parameters to configure in Config
- Minor SJOIN fix .. 
- Fixed a ban {} bug where temporary bans were not cleared on rehash
- Fixed a validate_conf problem found by Janos
- Fixed some minor invalid numeric stuff
- Fixed problem with MAXCONNECTIONS when no parameters given in ./configure
- Fixed some possible points of confusion with hash.c regarding unsigned int
  & signed int
- Fixed u_intXX_t problem
- Removed the redefining stuff in s_conf.c
- Documentation (example.conf from Osiris)
- Documentation bug fix
- Changed version to -beta1
- Various preparitions for beta1
- Commited the web server prototype made by Stskeeps, web design by WildChild
- Ripped out the old DF watch system, using bahamut's now
- Fixed some CHINESE_NICK stuff
- Fixed an sdesc bug reported by Alzirr
- Fixed a little gcc 3.0 bug with Unreal
- Fixed *** nick has quit (no Days come, days go), by defaulting to "Quit: "
- Fixed -nexus.nexusirc.org- *** Notice -- Trying to send [:Alzirr WALLOPS
  :test bug, found by Alzirr 
- Fixed struct IN_ADDR problems on some OS'es
- Fixed some more gcc 3.0 problems and made FSU pthreads a bit easier to install
- Fixed some updconf bugs reported by Joe
- Fixed a bug where 'fake direction' messages were sent to non-ops reported by Janos
- Made it so unreal searches harder for SSL headers and libraries
- Fixed possible bug with allowing :'s in +k/+L .. 
- Added a credit
- Fixed a typo in /stats and a /chatops bug found by Cas 
- Made oper {} (and vhost {}) allow you to enter an IP even if your host resolves by request of Cas
- Added set::options:show-klines and set::options::show-tkl to make /stats G and /stats K oper only
- Added a patch by Zogg to fix a socks scanner problem
- Fixed a /sapart bug found by SubZero
- Minor bugfix in scan_socks, + some comments
- Fixed some flaws in httpd, that made it break unmercifully
- Added correct uptime to web interface
- Patched in zogg's scan_socks patch, second edition
- Added in Ossie's example.conf v2
- Major changes to the win32 editor
- Fixed a bug in the new editor, hopefully now it works flawlessly (?)
- Fixed a bug in the win32 status dialog causing it to get screwed up, found by Auspice
- Fixed a scan_socks problem under win32
- Added a 3d border to the color selector in the win32 editor
- Fixed a win32 bug dealing with the new RTF parser
- Fixed a scan_socks problem under win32
- Fixed a MOTD rehash bug found by fryo
- Made CR compatilbity actually work, it autojoins now :)
- Started updating network files (remove all the obsolete ones)
- Fixed SQLINE problem 
- Added doc/coding-guidelines
- Readded header info to network files which was lost in the update
- Updated a few network files that managed to slip by the update process
- Updated networks/networks.ndx and alphabetized it and added all network files submitted in 3.2 format
  (didn't feel like converting right now ;P)
- Win32 code cleanup
- Made my_itoa use _itoa on win32
- Implimented SVSMODE #channel -b nick to remove all matching bans against a nick, idea from bahamut
- Added SVSMODE #channel -b to remove all bans
- Added SVSMODE #channel -qaohv to remove all users of that respective level, and made all the # SVSMODE 
  flags work in SVS2MODE
- Made a bunch of config errors non fatal
- Added 2 more network files (yea, I'm slow)
- Fixed SQLINE bug, FINALLY. (forgot to set type ..oops..)
- Added more network files...
- Fixed a bug affecting /oper and /vhost caused by IP checking
- Added wildcard support to include and loadmodule in win32
- Added SVSMODE # -e to work just like -b
- Fixed SVSMODE compile error
- Added tgf's patches for these bugs:
   * if you dont have a rules file and do "rehash -motd" then the server 
   segfaults.
   * setgid has to be called before setuid... cos if you change to a non-priv
      uid first then you are not allowed to setgid!
- Added more network files
- Fixed a possible restart/die bug
- Fixed a bug where /die didn't do anything on win32 reported by Gilou
- Fixed a bug where /restart didn't send out notices on win32
- Made /restart call mod_unload for all modules
- Fixed a typo in the win32 makefile
- Rewrote Addit, hopefully it fixes the SJOIN problems?
- Fixed fence post marker overwrite in /vhost, found and fixed by tgf
- Made the Win32 version report the actual OS to opers in /version rather than just say 'Win32'
- Removed some obsolete code
- Added set::oper-only-stats which allows you to set any/all stats as oper only (* = all). Code is kind of 
  ugly since some flags are case insensitive and C == H but it works and seems pretty fast.
- Added set::anti-spam-quit-message-time idea from hybrid7
- Made the config smarter, for yes/no options yes/true/on/1 = yes no/false/off/0 = no
- Made Unreal be able to recover from a bunch of config errors
- Added stats flag r to the stats help list
- Fixed bindip problem with it not being made
- Made even more config errors recoverable
- Added more network files
- Fixed some typos in s_conf.c
- Fixed a win32 bug where /restart didn't remove the tray icon, reported by PHANTOm and Gilou
- Fixed Osiris's example.conf
- Fixed IPv6 bindip error found by Madkiss
- Added log::maxsize, when this size is reached the log is cleared and started over again
- Fixed a codemastr-on-crack /version bug, and fixed some IPv6 stuff in
  scan*
- Fixed some more IPv6 stuff in httpd
- Implimented snomask (similar to IRCu) and moved several usermodes to it
- Added a config check to detect what order we should specify the SSL libraries in
- Fixed bug with SSL, detected properly and fixed by Chawmp
- Fixed an oper-only-stats bug
- Updated some documentation to prepar for release
- Docs prepare
- Fixed a major snomask bug found by narf
- Using bahamut /who now, this needs some testing.
- HCN fix
- /who fix .. removed nick matching functionality..
- Fixed a SNOMASK problem found by Arantis
- Fixed a umode2 bug that crashed the server
- Fixed vhost bug that forgot to add a \0 in the end of the string
- /who fix
- Another /who fix, what crashed it I assume - helped by narf to find this
- Fixed a bug were operflag eyes didn't work
- /who fixes regarding +I +H and crap
- Preparation for beta2
- Fixed sts on crack win32 code
- Fixed a win2000 bug causing Unreal to crash on the credits dialog, thanks to llthangel and WildChild for 
  helping fix the bug
- Fixed a win32 bug that can cause unexpected crashes while using the editor
- Some httpd stuff and a #define CHROOTDIR problem found by Zhadum
- Added scan_http, scans on 80, 3128, 8080 in a threaded manner
- Fixed a /gline crash bug found by DemOnBaBy
- Http proxy scanner cleanup
- Added SOCKS5 detection based on code in Epona
- Cleaned up /mode a bit
- Cleaned up command parsing a bit (faster)
- Added config directive alias for services/bot aliases
- Fixed some credits, recoded httpd (still in progress)
- Disabled #undef PROPER_CORE
- Added alias {} to doc/example.conf
- Fixed a bug in alias {} found by RaYmAn
- Fixed another alias {} bug
- Added Bahamut usermode +R (only accept private messages from +r users)
- Moved FAILOPER_WARN define to set::options::fail-oper-warn
- Fixed an alias {} bug found by James-Bond
- Moved SHOWCONNECTINFO define to set::options::show-connect-info
- Added support for nested comments in the configuration file (by chasm)
- Added chasm to /info
- Started work on usermode +V (WebTV mode)
- Some aClient cleanups to reduce memory usage
- Made a bunch of messages check +V and if +V use PRIVMSG instead of NOTICE
- Cleaned up NOSPOOF code a bit
- Cleaned up /oper (a lot)
- Fixed a bug where the /oper recode broke oper host masking (found by James-Bond)
- Fixed something that could cause a possible bug in /oper ?
- log::maxsize can now be entered in the format 1MB, 1MegaByte, 1MByte, etc (KB,MB,GB,TB are the only sizes 
  recognized)
- Fixed a bug where log::maxsize would say it started a new log file if the log file didn't exist
- Converted /mkpasswd, /away, and /svsnoop to modules
- Added the ability to add aliases like /identify (complex, so see example.conf for samples)
- Added a bug reporting tool (still alpha)
- Removed some win32 debug code that was left, reported by TheEggMan
- Win32 cleanup
- Made except socks become except scan, and made it actually WORK, and some
  bugreport fixes
- HTTPd VFS fixes
- Modified updconf to reflect the except socks -> except scan change
- Fixed a typo in the win32 makefile
- Made the config a bit more sturdy (would have done more, but got boring :P)
- Moved /svso and /svsnick to modules
- Updated the win32 makefile
- modulize documentation, some web server fixes, preparation for uabr
- Some more VFS/PHTML fixes, it actually works now, thanks to butter
- Fixed a IPv6 bindip problem
- Removed bsd.c and made socket.c, moving signal stuff to ircd.c, possible 
  fixing a IPv6 bug
- Made Inet_si2p (sin to presensation), fixing the "*", bug, some debugging
  fixes, fixed a lot of IPv6 bugs, hopefully - thanks to JK for borrowing
  his box
- Fixed a #undef INET6 bug
- Made Link denied error a little more descriptive
- Various coding regardign bugreport
- Made port default to 6667 when options autoconnect in link {}
- Made some changes to allow Unreal to compile on win32
- Fixed a scan.c bug on win32
- Made the http scanner work on win32
- Fixed a bug where /userhost would report oper status regardless of +H
- Added some stuff that should fix the bug in Windows when including files in other directories
- Added aliases/ which contains config files for aliases to some popular IRC services (more will be added)
- Made makeconf load scan_http.so
- Fixed a /who bug, found by IXpfah
- Updated makefile.win32 for all the new modules
- Added in Fish's patches
- Added bitching when you lack needed IRC commands
- Removed REMGLINE
- Fixed a typo in the win32 makefile
- Really removed remgline (since sts didn't really do it)
- Made changes so the new modules compile on win32
- Added headers to all the new modules
- Fixed a typo in config.h
- Final changes to prepare for beta3
- Fixed some bugreport stuff
- Fixed codemastr-on-crack bug regarding oflag
- Fixed a win32 bug where the http scanner didn't get loaded
- Hopefully fixed the weird Z:line bug on win32?
- Fixed the Z:line bug (caused by stskeeps-on-crack coding) reported by Power2All
- Removed the tokens for /users, /summon, and /samode (these never come from a server so they don't need
  it)
- Added a utility to auto create version.c for win32. It's the worst coding I've ever done, but it works :P
- Added a hell lot of DNS debugging code, and fixed the BIGENDIAN problem
  with resolver. Thanks to dawn and Trash.net for shell on a sparc
- Added umodes.c, long val = get_umode('c');
- Added new umode system to win32 makefile
- Made umode_delete(flag, mode);
- made the umodestring variable smaller to conserve memory
- Added M_RESETIDLE to fix a /privmsg bug
- Fixed a bug with nickserv passwords found and fixed by Mathieu
- Fixed a DEBUGMODE problem with umodes.c
- Fixed a snomask bug found by Rob
- Made the missing commands error a little more.. tardfriendly
- Preperation for beta4
- Made some nameser.h changes to work win win32
- Fixed a typo in makenet found by 'Eternal Bliss'
- Updated module dependancies to allow a module to load the module containing the symbol
- Fixed a win32 bug where the editor would cut off text, reported by Inter
- Added make install to copy files for you when you install unreal
- Replaced killircd, ircd, and rehash with ./unreal start|stop|rehash
- Fixed a bug where the win32 help dialog links were plain text
- IPv6 fixes to Inet_si2p & Inet_si2pB
- IPv6 fixes to make dual ipv4/ipv6 work
- IPv6 fixes for IP_OPTIONS (disables under IPv6, i mean .. IRC multicast.
  WTF?)
- Made ./unreal generated by configure to make sure it has the correct path of the exe
- Added autoconf check for setproctitle
- Added some setproctitle(.., me.name) for extra l33tness :P~
- Changed the setproctitle check to also check in -lutil (some OSes have it there)
- Added aliases/auspice.conf, and added a /register command to aliases/aliases.conf
- Fixed a win32 typo in the .rc
- VERSION M_SERVER fix by skold
- Fixed connecting with IPv6
- Ident requests now orgin with the listener that the user connected on
- More IPv6 fixes, DNS resolving actually works now too.. (crackhead IRCnet
  coding)
- Webserver caching fix
- A little bug fix that prevented the G:line hostmask checker from checking ?
- Made the /kline hostmask checker work like the G:line checker, (it was too easy to K:line *@*)
- Fixed a bug where ./unreal rehash would kill the IRCd instead of rehashing :P
- Made ./unreal restart (to restart Unreal) and made the pid file location more accurate
- Added support for PS_STRINGS and pstat to change the progrma name (couldn't test since I don't have an OS
  that uses them)
- Fixed a win32 bug where pasting text into the editor would not
  show up in the correct font
- Added hscroll bars to the win32 editor (if needed)
- The win32 editor now allows you to edit files included via tld {} (probably needs testing)
- Made the win32 editor allow you to edit include "" files
- Recoded the win32 rehash button to be much better
- Recoded the way the editor menu works (hopefully this is much
  better?)
- Added the ability to create new files via the win32 editor
- Fixed a win32 editor bug caused by me being drunk or something :P
- Fixed the last of the font and editor-cutting-text bugs (hopefully)
- Commented out three lines of code that were causing SSL to freeze on 
  /connect, TODO: code in new SSL error handling (Griever)
- Fixed password crash bug, found by \dev\NULL-Z-[Zap]
- Added new auth.c API and a lot of different crap .. will document later
- Made make install copy modules (oops)
- Added configure code to get the Auth crypt working
- Made Events do thread locking (so we can do funny things and kill small
  furry animals in the attempt for the perfect scanning module) .. yes, this 
  is drunken coding
- Made delayed module unloading possible, make a int mod_delay() adding
  an event, for e_unload_module_delayed
- Updated makefile.win32 for the Auth system
- Redid the event system somewhat
- Fixed a little event issue involving data types.
- Changed the name of the hook functions from add_Hook, del_Hook,
  add_HookX, del_HookX to HookAdd, HookDel, HookAddEx, HookDelEx
  so the names are more standard.
- Added host54.net to /credits
- Fixed a FSU Pthreads bug that caused it not to work on Slackware (help from Frank Mueller)
- Started some work on CIDR support (added some functions from hybrid7)
- Added some functions for generic linked list modifications
- Slightly improved +x v2 algo, win32 releases should be compiled with
  this improvement OFF, at least until 3.2 final. COMPAT_BETA4_KEYS makes 
  it compat w/ beta4 and pre.
- Made checking for redundant bans both ways an ifdef, off by default. 
  Note that undefing this might SLIGHTLY break compat w/ beta4 and pre
- Added "griever would like to thank" section to /credits
- Auth/SSL fixes, list.c fix, code: could you add auth.c and ssl.c to
  makefile.win32?. If SSL is enabled, we can use MD5, SHA1, and crypt()
  even on win32
- Added ssl.c and cidr.c to the win32 makefile
- Added ssl-pubkey auth method (parameter = pem file for public key)
- Converted tkl, events, commands, hooks, and all config structs to ListStruct
- can_gkline/t and can_gzline/Z flags added, docs not modded yet
- Added snomask +n (nick change notices) I personally hate it, but people wanted it...
- Added oper::snomask to allow you to specify a default snomask for an oper
- Added snomask +q (Qline notice), triggered when a nick is being denied from a user due to
  a Q:line.
- Added HOOKTYPE_SERVER_CONNECT and HOOKTYPE_SERVER_QUIT for when servers connect and
  disconnect respectively
- Added module v3 code. Needs testing, and NO MODULES DOES NOT COMPILE
- Fixed a win32 movude v3 bug
- Small v3 fix with no dependency problem
- Fixed some more module v3 problems and upgrade all modules
- Fixed a ton of module v3 problems (cause: Stskeeps is an idiot)
- Yes, even more module v3 bugfixes
- Module v3 bugfixes. cause: codemastr lack find n replace skill
- Moved the mkpasswd program into ./unreal mkpasswd <method> <password>
- Recoded m_oper almost completely, note that the fceT flags are ignored
  now (you still get them, they just dont do shit). Remove them for me 
  please, as well as the +T usermode. I haven't tested this completely but 
  I see nowhere a bug could happen.
- Removed umode +T (useless) and the fue oflags since
  oper::snomask supercedes them.
- Fixed another module v3 bug caused by Stskeeps drunkeness
- Started adding HP-UX module support (Not enough added where it actually works yet)
- Added some more HP-UX code
- Made "Module already loaded" a non fatal error (funny msg on rehash)
- Fixed typical codemastr "Let's delete this from a list we haven't even
  added it to yet *giggles and twirls around*" bug, do to with config_set_unknown
- Fixed events bug, added recoded scan module, got a lot of stuff to fix so
  far. Problems, unloading, (delay), tkl doesn't always sweep it all, 
- Some scan unloading stuff
- FIXED THE GOD DAMNED WHOIS BUG THAT I REPORTED *MONTHS* AGO! -Griev
- Added a new dynamic help system that allows you to add and modify /helpop items
- Made N also give you OaA, since its what most people use it for *sigh*
- A and a give you O, set::modes-on-oper
- Made link::hubmask and link::leafmask actually work properly
- Big mods to TKL, oper commands split into module, testing
- TKL mods compile and run fine, set{} stuff to decide what funcs are 
  avail forthcoming
- SMO recoded but wierd because sendto_umode and sendto_snomask are wierd
- chatops actually checks if sender is an oper, why did no one notice this?
- bugs in SMO ironed out, now sends to someone with ANY of the umodes/snomasks
- Added #undef SECURECHANMSGSONLYGOTOSECURE - send only channel msgs to +z
  people on +z channels
- win32 fixes
- Scan API cleanup (You don't use goto when break works just as good)
- Fixed other scanner bugs (hopefully it 100% works now?)
- Fixed a typo in s_misc.c
- Config parser fixes (bugs found by Souleh)
- Changed SERVICES-NAME warning to error
- Auth_Make fix for crypt method
- Fixed a /time GMT offset bug under Win32 reported by Dave337
- Documentation updates
- Made a few updconf changes
- Credits updates
- Added a few more network files (why do I think this job will never end?)
- CIDR IPv6 fixes, scan_* fixes
- Credits fixes
- Final release cleanups
- Updated /info
- Added back good old error reporting in ./unreal start
- Changed to beta5
- Fixed some slave work.. return MOD_SUCCESS; in all command modules..
- make install fix
- Fixed a last minute bug in win32
- Fixed a bug affecting DEFAULT_PERMISSIONS reported by ashukmin
- Fixes for ->user structures
- beta5 released
- Fixed a bug causing /map to give away Ulines
- Fixed a possible segfault in m_stats
- Bug with crypt not working for /oper fixed
- Fixed a bug where certain oflags were ignored for new-style config flags
- Actually enabled MD5, SHA1 methods when SSL was defined. (fix for drunk
  coding)
- Fixed yet another Win32 editor bug affecting Windows 95/98/NT4,
  found by HA|Raptor
- If host == null, don't set it (m_oper, was setting it to "eek.host.is.null.pointer")
- Small fix for #427583 mode bug
- Fixed it so /module load doesnt require you to do ./module.so if the module is in
  current dir
- Fixed a freeze bug in m_htm (pthreads now uses recursive mutexes)
- Reversed freeze bug fix, _NP means NON PORTABLE
- Fixed a freeze problem with conf_deny_link
- Fixed a bug under WinXP in the editor
- Someone removed tkl and opermotd from the command hash (breaks both commands)
- Made validate_configuration be called on /rehash, reported by Mick
- Fixed a /chgname bug reported by rob where you had to prefix
  the name with a : to set a realname with spaces.
- Fixed a major events bug caused by Stskeeps drunken coding
  reported by Dragon974
- Added mutex.c for our mutexes
- Fixed makenet so techadmin-host is gone
- Removed set::hosts::techadmin from all network files
- doh, missing a ! in m_tkl.c that allows us to do bad things(TM)
- Fix for nested comments, found by lnxgk
- C++ comment fix, lnxgk again.
- Crash in scan_http fixed, h->in instead of &h->in = bad
- Made tld::mask be user@host instead of just host
- Fixed problem with EventDel, doing eventptr instead of eventptr->name
- Fixed bug #0000019 reported by Syzop, and bug found by same to deal with
  individual module loading
- Fix for svsnoop symdep problem
- Fixed sts's fix for svsnoop (since he failed to test his fix)
- Fixed a bug where the win32 editor would always say the file
  was modified even if it wasn't
- Fixed .1081 problem, see bug #0000020 for more information about how
  it REALLY should be fixed
- Fixed a typo reported by Tracer (bug #0000022)
- Made support in *nix for encrypted SSL private keys,
  "make encpem" to make an encrypted server key if you already have one
- Removed some ancient debugging code (num - %s)
- Wiped out FLAGS_TS8 because I want to move ->flags into the local section and
  FLAGS_TS8  had 0 purpose except setting CHFL_SERVOPOK (which did nothing)
- Fixed typo I made in previous fix causing non-compileness
- Moved some members of the Client structure to the local section, should be
  a nice cutdown on memory.
- Recoded the win32 editor to use a toolbar, and added support
  for XP style controls
- Made a few additional cleanups to the win32 code
- // comments are not supported by many compilers and should not be used
- Fixed a bug where teh SAJOIN/SAPART/SVSJOIN/SVSPART tokens were screwed up found by 
  Andy Church
- Made even more changes to the win32 editor (undo/redo buttons,
  and current line number display)
- Fixed yet another serious sts bug, we have to release beta6 soon :P~
- Fixed check_for_target_limit, should be more lenient now
- Sts is going for a record here, fixed ANOTHER auth bug in the SAME function
- Added hunt_server_token (the same as hunt_server except if the
  server supports tokens, the token is used)
- Added the ability to go to a specific line in the win32 editor
  by clicking the current line number in the status bar
- Converted all calls to hunt_server to hunt_server_token
- Preparation for release
- Changed version to beta6 and added final cleanups
- Added the TKline, TZline, and GZline commands to the documentation
- Fixed bug in m_tkl_line causing segfaultage
- Any reason why HOOKTYPE_SERVER_QUIT was being called for clients?
- Fixed exit_client to do NOQUIT type thing for SQUITs
- Moved around a lot of aClient/anUser members, hopefully wont cause
  segfaults
- Fixed res.c not managing to pass the proper type of parameter to inet_ntoa ONCE
- Lots of commands were using MAXPARA when they shouldnt have been
- passworded allow{} in example.conf doesnt match anyone anymore
- Fixed oper{} locop stuff
- Added can_gzline to doc/conf.doc
- Replaced EventModEvery with EventMod (allows broader modification)
- Maybe (but I doubt it) fixed bug #0000040 (Win32 resolver crash) reported by Kyver
- Hey everyone it's point release time... I completely screwed up check_for_target_limit
- Made the kline-address error easier to understand (must be instead of is not)
- Made a SNOMASK for the +s notices, so you arent forced into hearing them if you just
  want say +k
- Fixed some return values, can't gline masks with a ! in them anymore
- ARGH
- Recoded the module system somewhat, events are now 'stable' meaning if a module doesn't unload an 
  event the IRCd will not crash. Also fixed a crash involving delayed unloads and cleaned up notices
- Problem with sendto_ops and !aClient->user  fix
- Fixed bug in m_tkl_line and various m_line functions (was checking for wrong # of paras)
- Recoded hooks to take advantage of the module object code
- Fixed a memory leak in hooks
- Fixed a bug with module objects involving static linking
- Recoded hooks to work just like events
- Fixed a listener bug reported by Dragon974
- Removed some useless tkl code
- Fixed #0000046 regarding Module_free memory leak
- Added patch in #0000053 by |savage|, speedup in can_send
- Possible fix of #0000042 regarding duplicate scans at same time causing
  one to slip through, reported by Zogg
- Fixed a win32 editor bug reported by Jens that limited text additions to 32KB
- Really fixed bug #0000011 reported by Dragon974 (listener bug)
- Added link::cipher for #define USE_SSL, use this to select
  ciphers, read example.conf for more. Closes #000016. Suggested by narf
- Added a dialog interface to .pem SSL passwords. (Suggestion #0000025)
- Fixed some minor issues with dialog interface for .pem SSL passwords
- Added makecert.bat / encpem.bat to src/win32, which are used in SSL release
- Fixed some t.next's and replaced with codemastr method(tm)
- Fixed a t.next recode typo
- Added a ./Config check to see if gcc supports -pipe (speeds up compilation)
- Made SHOW_SECRET (allow opers to see +s chans in /whois) defined by default, suggested by Sid-V (#0000037)
- Added except tkl to allow exceptions from tklines, tzlines, shuns, glines, and gzlines, suggested by
  funraiser [still need to design a way to report in /stats] (#0000044)
- Documented link::cipher and except tkl in doc/conf.doc
- Changed umode +I behavoiur to you have to be loading invisibility.so to have
  the +I functionality. Code is still in IRCd, but isn't used until module
  is loaded. Loading of this will cause an "R" to be added to /version
  flags. Hopefully this will satisify some people's thoughts about a so 
  called spy tool being enabled by default. Also added flag_add(char *) 
  and flag_del(char) for modules to add to flags string. -Sts
- Removed -win32 postfix for wircds, look in /version for "W" instead
- Removed ircnetwork part of /version
- Cleaned up a bunch of -Wall warnings (unused variables, etc)
- -Wall cleanup cleanup with SSL AUTH problem
- Fix for /version crash, reported by RaYmAn
- Made all functions use new-style parameter lists
- Moved set::socks::ban-time to set::scan::bantime, and remove the other set::socks::* (not used)
  also added set::scan::timeout to specify how long the scanner should wait for a response 
  before giving up
- Added HOOKTYPE_STATS - allows modules to respond to certain /stats (so far only S is supported)
- Changed some m_ functions into CMD_FUNC(m_*)
- Fixed a win32 bug with the scanner code changes
- Added a win32 menu item that lets you view log files
- Documented the net set::scan::* directives in doc/conf.doc
- Fixed a bug in the new usermode system that caused odd Unknown mode flag reporting.
- Added a shutdown confirm message box to the X button on the win32 GUI 
  (suggested by dimplesx #0000058
- Made the win32 version set log files to writable if they are
  read only (reported by dimplesx #0000057)
- Removed useless stuff in m_oper (null ptr thing, just dont set them)
- Fixed auth.c to use random salt
- Fixed loadmodule invisibility.so: undefined symbol: 
  get_umode bug, reported by James-Bond, #0000060)
- BEFORE you use event functions, LockEventSystem(), after,
  UnlockEventSystem(). In EVENT() functions, the system _is_ locked.
  This might fix the double recursion mutex problem we got.
- More -Wall cleanups
- Fixed hunt_server_token (use IsToken on acptr->from, not acptr)
- Unbroken Griever's broken hunt_server_token broken token fix
- Various fixes to virthost system, may fix some memory corruptions,
  and potential exploits.
- Made makefile ability to "make custommodule MODULEFILE=m_zline"
  if m_zline.c is in src/modules/, it will get compiled. This SHOULD
  help 3rd party modules atleast
- Added "tainted" variable. 3rd party modules must ++ this upon load,
  -- upon unload. Will show a "3" in flags.
- Added extras/m_rawto.c - 3rd party module. Fixed some documentation
- Added andi's OpenBSD fix for the symbol issue with prefix _
- Added SJOIN fix so it won't accept NULL channels
- Fixed a problem with Mod_Handler being **, found by andi
- Fixed an issue with -x and /quit and whowas, found by RaYmAn
- Modified the OpenBSD fix to work for all OSes that add an _
- Fixed m_rawto.c problem found by TheDarkOne
- Possibly fixed the /who flags bug reported by sbalmos (#0000063)
- lack of time sucks. openbsd problem
- Fixed a typo in the docs found by TheEggMan
- Fixed a m_htm.c problem
- Updated supporters list in /credits
- Fixed s_conf.c so a) It uses MyMalloc b) It doesn't cast the return
  from MyMalloc!
- Clean compile under -Wunused
- Clean compile under -Wformat
- Clean compile under -Wparentheses
- Clean compile under -Wall -Wno-implicit
- Fixed #undef STRIPBADWORDS problem, patch by light
- Blah blah new cloaking shit blah
- Added a patch by Syzop fixing a memory leak in StripColors
- Added a patch by Syzop fixing a +k issue using a key with a , and when using long keys
- Added a patch by Syzop to fix a MyMalloc/MyFree debugmode error
- Added yet another patch by Syzop to fix a /vhost bug when using very long args
- Added a patch by Syzop to fix a possible hash bug with /list
- Made the server pass extraflags at linking for deny version validation
- Added a patch by Syzop to fix a bug preventing +I from being used (fixes #0000073)
- Readded examples to doc/conf.doc by request of several users
- Clean compile with -Wall
- Win32 cleanup of the -Wall cleanup
- REALLY clean compile with -Wall (except for wierd TStime stuff)
- Removed all remnants of PROTO()
- Removed src/cio_main.c, src/cio_init.c, include/cio.h, include/ciofunc.h extremely old unused code
- Win32 fix with u_int16_t
- Removed my_name_for_link (unused)
- Preparation for release
- Changed to beta7
- Fixed a IPv6 problem reported by Zerwas
- Fixed -Wall warnings for TStime
- Compile fix for TS2ts 
- Small release tricks
*** beta7 released ***
- Fixed a win32 editor bug where the line count didn't display right away (reported by
  iDW-badSol)
- Module Insanity Recode (part 1) if the module version is 3.2-b8* we now pass a ModuleInfo struct
  to Mod_Init which contains extended information. This replaces the Mod_Handle method in beta7
- Module Insanity prototype fix
- Fixed a listen::options::serversonly bug reported by swissSolaris (#0000084)
- Fixed leftovers of non- char *configfile compliance. Thanks to ace and
  various other people ..
- Fixed a /mkpasswd typo and added the updated /mkpasswd syntax to doc/unrealircd.doc, both
  reported by peck
- Made the command system use module objects (haven't yet converted modules to use it)
- Fix with DEBUGMODE
- Fixed a Chinese nick bug found and fixed by Xuefer
- Fix with status needed for remote clients too. Found by
  Craig/FrostyCoolSlug <Craig@e-tidalwave.org>
- Fixed m_oper setting +O on globops
- Fixed bug with mode buffer overflow .. I'm not 100% positive it works..
  Thanks to larne, Luke, SciFi, panda, ^Tux^.. Syzop .. and the countless
  people bitching about their servers going down.
*** beta8 released ***
- Added log {} syslog support (appears to work fine) [#0000099]
- Added HOOKTYPE_JOIN
- Converted all modules to 3.2-b8 format (passes ModuleInfo)
- Updated doc/conf.doc
- Fix for desynch problem with the fix in /mode system, Thanks to Luke
- One little patch for humanity, one giant step for science..
- Cosmetic fix for /setident, found by juli ..
- Implimented a dynamic hooktype system to allow modules to create their own hooktypes
- Fixed a conf_unknown bug
- Added EXLIBS= to make custommodule so a module can specify additional libraries it needs
- Changed version to beta9 and updated documentation
- Made +I once again work in win32
*** beta9 released ***
- Fixed a stupid m_oper bug
- Fixed a win32 editor bug causing a crash when you click save multiple times
- Fixed a /stats q bug where it would crash if there was an sqline with no reason, reported by toji (#0000120)
- Fixed a bug that caused locops to see client exiting but not client connecting notices while +s +c,
  reported and fixed by cmx (#0000123)
- Fixed a bug reported by dimplesx where +H did not decrease the oper count (#0000129)
- Documentation bug #0000152 reported by Tony at sexnet.org fixed regarding
  example.conf being wrong about set::socks
- First part of skyper's security audit patch
- Some more of skyper's security audit patch. Some of them were simply
  unfair in regards to performance or blindly added strlcats/strlcpy
- Fixed some problems with skyper's patch (typos)
- Fixed a cloak problem on OSes with 64bit integers (reported by wolven)
- Updated credits
- Memory leak fixes with scanners
- Some fixes with connect(). Knowing my luck this will fuck up to hell
- Fixed another memory leak with the scanners
- Fixed some helpop typos reported by BiGi (#0000144)
- Fixed a typo in /stats ? where T/t were reversed, reported by Zer0
- Fixed a typo displaying a message to edit config.h after compiling reported by dimplesx
  (#0000133)
- Fixed a bug where except ban didn't work (reported by Hercules)
- Fixed a scanner memory leak, and made some changes to make the HTTP scanner work
- Fixed a bug in the socks scanner causing it to fail
- Removed some typecasts from free calls, *hopefully* it will fix some problems
- Fixed a bug with \r\n being mistakenly parsed wrong. Thanks to John_z
- Fixed a config parser bug that would cause a crash under certain conditions. Reported by 
  roskecr (#0000173)
- Rewrote check_pings and the whole way banning people are handled. Do loop.do_bancheck = 1
   to provoke a bans check. This possibly fixes #00001702, #0000137 and other
  funny bugs.
- Fixed a number of bugs in the upper patch. 
- Fixed an OpenBSD bug reported by RaYmAn, k0adh, and numerous others (#0000104)
- Credits changes
- Fixed problem in dopm (short and char should NEVER be passed to va_arg)
- Fixed HCN so it uses IP instead of sockhost.
- Changed version to beta10 and updated documentation
- Removed obsolete network files
- Added some new network files (hopefully I'll be able to get all the submissions added soon)
*** beta10 released ***
- Added a config check to see which (if any) gethostbyname_r exists (based on a macro by Caolan McNamara)
- Removed some SOCKS scanner debug code that was forgotten
- Finally REALLY fixed the scanner (note to Stskeeps: bcmp returns 0 when there IS a match)
- Added OpenIRC-CA in .SICI
- Fixed a openssl+ipv6 bug, pointed out by Aragon .. This probably breaks some other crap, but what
  the heck..
- Made ident checking work on IPv6 as well
- Fixed a /stats L/l bug reported by dimplesx [#0000190]
- Fixed some typos in validate_configuration, fixed a hostilename problem when ident
  checking is off
- Fixed a hostilename problem reported by Xuefer [#0000158]
- Fixed some stuff to deal with #136 - Please note that we do NOT compress our addies
  - reason for this is because for example ::ffff:192.168.1.5 would really fuck up stuff
  in the IRC protocol
- Fixed a typo in doc/example.conf that I believe is causing ident not to work
- Fixed a /stats Z bug where it didn't correctly report local clients
- Made /stats Z once again report the # of classes and memory used by classes
- Added an allow::options this fixes some problems with allow, ident is now used
  unless allow::options::noident is set, also if the user matches an allow by IP rather
  than by host the hostname is still used for the u@h, unless allow::options::useip is set
  (idea inspired by danielek)
- Fixed a bug in the new allow system reported by danielek
- Fixed a maxperip and a maxunknownconnectionsperip bug in IPv6 reported by danielek
- Fixed another scanner bug causing the scanner to never timeout
- Fixed a module bug when there is an include between a module-config-directive and the loadmodule
- Made it so if a module fails to load it is non-fatal, reported by Adiga007 (#0000194)
- Made hosts converted to lowercase before run through hidehost() this way ABC.com is the
  same as abc.com, reported by Magnet (#0000065)
- Converted the status window in the win32 GUI to a modeless dialog
- Fixed a win32 bug where the tray config menu didn't contain anything, reported by Jens (#0000127)
- Fixed a /who bug where + wasn't shown for voices, reported by Wcc (#0000202)
- Included larne's /who patch, adding a multitude of symbols? :P
- Split 005 and 105 up in order to conform to the RFC1459 limit of 15 parameters per
  command
- Failsafe check (to be removed again) in s_bsd.c
- [nighthawk 2002-06-16] Added myself to s_serv.c:m_info().
- Fixed a doc/conf.doc typo reported by SciFi
- Documented the new allow::options in doc/conf.doc
- [nighthawk 2002-06-17] Rewrote m_who.c from scratch.  It's slightly different,
                         help.conf explains exactly how.
- [nighthawk 2002-06-17] Changed m_quit.c slightly, removed a redundant strlen,
                         made prefix-quit of "no" not use one at all, since this
                         is in example.conf and is sensicle..
- Couple of updates to INSTALL.
- Updated INSTALL to no longer say 'make install is not needed' reported by wolfy
- Fixed a oper count bug caused by +H (reported by dwd) [#0000203]
- Fixed another oper count bug caused by +H and SVSMODE/SVS2MODE [#0000203]
- Fixed yet another oper count bug caused by SVSO and +H and +O (local oper)
- Fixed a modes-on-oper bug that could cause a negative invisible and/or oper count if +i
  or +H was specified in modes-on-oper.
- Fix a minor stupid in m_quit.c.
- Added /who +R which shows real host to opers.
- Added set::scan::bind-ip, set::scan::message, on request of RaYmAn, documented
  in example.conf
- Fixed minor problem with former patch
- Fixed the set::scan::bind-ip patch to work with win32
- Added 005 token AWAYLEN= from ircu
- Heavily updated INSTALL
- Removed Win32 and READMENOW.Win32.txt (obsolete)
- Started WinXP IPv6 support (added headers)
- More WinXP IPv6, finished headers, replaced calls to inet_ntoa with Inet_ia2p
- Added support for the RIPEMD-160 encryption algorithm for encrypted passwords (supposed to be slightly 
  stronger than SHA1 and much stronger than MD5)
- Added MD5 and SHA1 password encryption support to the win32 version whether SSL is
  installed or not using the CryptoAPI library included in Windows.
- Added extras/channeldumper.c
- Fixed an alias {} bug reported by Keeper (prefix was :nick not :nick!user@host which screwed up some bots)
- Fixed a +sp bug reported by Zerwas (#0000160) fixed by JK and Luke
- Fixed a bug where locops did not receive a hidden host reported by breathingman (#0000221)
- Fixed a bug where makeconf would not work after a make install
- Fixed m_sjoin bug with banlist propagation
- Fixed compile problem with non-glob/win32 systems (sunos 4.1) found by rshurr
- Fixed secure channel only (+z) sending ERR_BANNEDFROMCHAN
- WinNT/2k/XP service support added
  This should currently be considered EXPERIMENTAL
  To use this you use the unreal.exe utility:
    unreal install -installs the service
    unreal uninstall -uninstalls the service
    unreal start -starts the service
    unreal stop -stops the service
    unreal restart -restarts the service
    unreal rehash -rehashes the config file
  Config errors are now logged to service.log when in service mode.
- Added a win32 installer script (for Inno Setup with ISX)
- Removed a reference to TechAdmins in makeconf, reported by Zerwas (#0000234)
- Added a new debugger for win32 this version is NT Service compatible, logs to service.log
  when a crash occurs while running in service mode. The new debugger requires dbghelp.dll
  version 5.0 or newer. Included natively on Win2k/XP and available as redistributable for
  other versions. Also removes StackTrace
- Added src/win32/gpl.rtf (used for installer) made installer download dbghelp.dll if needed
- Added an installer script to generate the Win32 SSL version
- Made the win32 uninstaller remove dbghelp.dll if it was added when uninstalling
- Added a #ifdef _WIN32 for extern BOOL IsService; in ircd.c that made compile break
  on non WIN32 systems
- Depricated AKILL/RAKILL and made them alias to TKL G +/- - for normal users they
  just reply that the commands are depricated. Server compatiblity is maintained. 
  Eventually it will just be removed. Thank god for modules.
- Fixed a silly bug with regards to matching against compressed IPs in link {} checking
- Added some release notes with regards to scanners
- Removed s_segv handler
- Changed ./update to use update.unrealircd.com
- Made ./configure check if it has parameters, and error if it don't.
- Made ./configure remove uscore.c and uscore binary after test
- Removed mutex.c
- Credits changes, various tweaks mzp ftq Gzdqmx qhqdk dqxqmeq oapq otmxxqzsq. Tmbbk tgzfuzs.
- Fixed some ./configure errors
- Added ircd/safe_SSL_read/write from bahamut+inet6/azzuranet. This can be done much nicer
  when newio is done.
- Updated the config parser to be smarter when dealing with times and sizes
- Updated doc/conf.doc for any new config changes
- Made the win32 installer remove the . from the begining of . files and append .txt to
  most text files, ie .RELEASE.NOTES becomes RELEASE.NOTES.txt
- Updated .RELEASE.NOTES
- Fixed a bug where /who always reported 0 hops reported by Alzirr (#0000242)
- More SSL horror and fixed a missing , in m_who
- Fixed !SSL compile error
- Made the win32 installer have the option of installing as a service under NT and fixed a
  shortcut bug
- Fixed sptr->user->realhost becoming lowercase upon a +x
- Fixed +bbbbb lots of crap desynch bug
- Fixed OperOverride snotice bugs with halfop
- Standardized OperOverride notices
- Implemented new operoverride system
- Fixed some compile errors found by Zerwas and fixed some implementation problems of 
  the not able to set +z when there's non +z users (ULines not counted) in channel
- Fixed some SSL errors. read() returns -1 on error, so ircd_SSL_write and
  ircd_SSL_read must emulate the same. codemastr: could you check what the
  win32 equiviant of EIO is? I don't think my WSAEIO or whatever I called it
  in sys.h is correct.
- Seemingily we can't do SSLv3 only for ctx_server?
- Fixed some SJ3 bugs that could cause desync in rare cases
- Added some technical documentation in doc/technical. Docs include: 005.txt, base64.txt,
  token.txt, protoctl.txt, and vl.txt
- Send +f and +L in correct part of 005.
- Fixed SSL linking, again..
- SSL compile error fix in s_bsd.c
- Added some OpenSSL version showing
- Win32 SSL compile fixes
- Made /trace show correct for SSL handshake(s)
- RELEASENOTES stuff
- Win32 installer fixes (changed version to beta11)
- Changed version to beta11
- updated .RELEASE.NOTES to explain operinvite
- Fixed SSL compile error wrt to /trace
- Removed doc/features.txt, doc/unrealircd.conf.txt, include/relinfo.h,
  include/stamp.h, src/buildm4, src/chkconf.c, src/conftool.c
- Removed doc/Etiquette
- Compile error fix regarding version.h
- Made +x send out a SETHOST to VHP servers, requested by PreZ@DarkerNet
- Removed support for SSLv2 (SSLv2 is obsolete and insecure)
- .RELEASE.NOTES change
- Cleaned out Credits (i'll fix the web part of it later), made doug lea malloc default
  on Linux FSU Pthread installs. (When we got a better way, we will have full doug lea malloc..)
- Made OPEROVERRIDE_VERIFY default undeffed
- SSL fixes to deal with not allowing SSLv2
*** beta11 released ***
- Removed src/s_unreal.c contained 2 functions, 1 never used, 1 used once
- Removed /hash (did nothing), removed /post (replaced by scan_http)
- Modulized /vhost, /cycle, /svsjoin, /svspart
- Fixed a autoconf problem where FD_SETSIZE was NOT replaced when it wasn't big enough
  (abort() problem on some installs.)
- Readded find_match_server which got removed, m_rping uses it. Now in hash.c
- Added note about Linux and FD_SETSIZE > 1024 in release notes
- Made IRCd bitch properly when MAXCONNECTIONS>FD_SETSIZE
- Fixed a make install bug due to removing obsolete files, reported by Morbid (#0000250)
- Removed find_match_server from hash.c since it wasn't removed and was instead already
  moved to s_serv.
- .. Fixed a problem with normal unix source compiling as codemastr had
  #ifdef _WIN32 'ed find_match_server, causing me to believe it was gone.
- Allowed SQLINE/UNSQLINE to come from a U:lined client as well
- Module load fix for a minor fuckup in SQLINE/UNSQLINE
- Fixed a long existing bug where when MAXCONNECTIONS is too high it was displayed as set
  to 0
- Fixed the bug where /invite doesn't work (TEST BEFORE COMMIT!) reported by havlaz
  (#0000255)
- Fixed problem where the parameters of the RAKILL aliasing to TKL were switched, 
  and a missing return for normal users.
- Fixed a win32 SSL installer problem
- Fixed problem with DEBUG ERROR when SSL handshaking (reported by some people)
- Fixed a bug where the win32 installer didn't install dbghelp.dll on systems that don't
  have any version of the dll.
- Removed GNU malloc totally from the FSU pthreads distribution
- Added some somewhat path specifics to unrealinstssl.iss
- Fixed some installer problems wrt SSL compile, and added makefile.win32.ssl
- Removed /doc/faq included in new doc set
- Added set::ssl::egd for Entropy Gathering Daemon support see doc/conf.doc or
  doc/example.conf for more information.
- Updated credits
- Removed ./Setup - No longer supported (read the docs!)
- Removed .NEW_CONFIG - No longer needed
- Removed INSTALL - Refer to NEW docs Unreal32docs.html
- Removed doc/commands.txt - Refer to NEW docs Unreal32docs.html
- Removed doc/faq - Refer to NEW docs Unreal32docs.html
- Removed doc/conf.doc - Refer to NEW Docs Unreal32docs.html
- Removed doc/unrealircd.doc - Refer to NEW docs Unreal32docs.html
- Removed doc/Elite.Changes - Out Dated
- Removed doc/services-install-guide - Refer to NEW docs Unreal32docs.html
- Modfied Unreal.nfo to include ref. to new docs
- Removed old docs and added new docs to Makefile.in
- Updated .CHANGES.NEW with new version # and link to docs
- Updated .RELEASE.NOTES with new version # and link to docs
- Added NEW doc/unreal32docs.html Docs
- Fixed an oper::swhois bug where the swhois was not propagated reported by FrostByghte
  (#0000247)
- Converted cr/lf to just lf in doc/unrea32docs.html
- Fixed a bug where set {} info wasn't cleared out at rehash
- Removed .NEW_CONFIG referenced from the win32 installer scripts
- Removed LEAST_IDLE, wtf did that do in the first place?
- Added version flags (O and o) for oper override and oper override verify
- FAKE_LAG_FOR_LOCOPS define added in config.h - enables local ops to
  override RFC1459 flood control
- Fixed grammar error thanks to MorPheus
- Fixed halfops kicking halfops bug thanks to Jim_
- Fixed a typo in /akill and /rakill obsolete depreciation notices reported by zak (#0000272)
- Added set::ssl::certificate and set::ssl::key to point to where we got the certificate
  PEM and the private key PEM
- Fixed a /invite bug where remote clients couldn't be invited, reported by Alzirr (#0000275)
- Fixed a bug where if the hostname didn't have a dot (ie. localhost) host cloaking broke
  reported by Ron885
- Rewrote /helpop to work as advertised, reported by FrostByghte (#0000217)
- Fixed a set {} memory leak on /rehash
- Made it so Unreal can still be launched by clicking wircd.exe when in NT service mode
- Stripped the docs. 100kb down, but a reformat in something other than MS
  word would really really help.
- Changed version to beta12
- Add config option to the unreal service utility options are:
  unreal config startup auto|manual
    auto starts the service when the pc boots, manual requires you to run Unreal manually
  unreal config crashrestart delay (2k/XP only)
    specifies how long to wait after a crash to restart Unreal (in minutes). If no delay is
    specified, no action is taken when a crash occurs
- Made some changes to the win32 resolver, hopefully this will fix the crash bugs
- Made /die exit gracefully when in service mode
- Made it so Unreal (win32) can't be reinstalled or uninstalled while it is currently
  running
- Some install script win32 changes to deal with unreal32docs.html
- win32 install script changes to deal with version switchover
- Added src/win32/gplplusssl.rtf for ssl-install script to show during
  install in license - GPL + the notes from openssl
- Made minor changes to help.conf
- Fixed +O/+A ban implementation issues
- Reformated unreal32docs.html in something other than MS Word 93k now!
- Corrected release date in doc/unreal32.docs
- Removed ssl.rnd as it was not supposed to be provided by CVS
- Made standard-threads default, and made a Config option if to use FSU
  pthreads or not
- Made set::static-quit - check doc/example.conf for documentation - but
  this allows the admin to decide a standard custom quit for users. so they
  won't be able to make their own quits. This affects set::prefix-quit and
  ANTI_SPAM_QUIT_TIME - it simply replaces it with the message if enabled
- Make makecert.bat and encpem.bat show their use in titlebar when run
- Added define TOPIC_NICK_IS_NUHOST - nick!user@host in topic-whoset, undeffed by
  default, read warning in config.h. Only use with 3.2-beta12 or higher
- Made so every join is a SJOIN to prevent TS0 problems. Read config.h to disable this if it causes problems
- Added set::static-quit to unreal32docs.html
- Updated docs to include ripemd-160 encryption option
** beta12 released **
- Fixed problem where SSL handshakes weren't unknown--'ed on remove reported
  by Alzirr
- Compile fix regarding above fix
- Added vhost::swhois requested by FrostByghte (#0000171)
- Fixed a win32 password encryption bug when in NT service mode reported by simonbell
  (#0000285)
- Fixed a problem with set::ssl::certificate and set::ssl::key that used
  ->ce_varname instead of ->ce_vardata. Found by badSol
- Added a newline in dynconf.h
- SSL debugging stuff
- Added some more debugging stuff, made check_pings a little more readable 
- More SSL debugging stuff..
- A minor fix in SSL_is_inited stuff in s_bsd
- Fixed a bug with installing unreal as a services under NT4 reported by peter (#0000295)
- Added the oper login the user has /oper'ed to in the 'is now an operator'
  notice. Suggested by havlaz (#0000287)
- Fixed a bug where aliases {} didn't use tokens reported by havlaz (#0000288)
- Fixed a win32 editor bug when using chars with an ASCII code > 128, reported by XircNet
  (#0000298)
- Fixed a bug in TKL found by DerAlSem where it was possible to add a line for *@* (#0000307)
- Fixed a /who bug where /who +c #chan wouldn't display the name of the channel
  requested reported by aproxity (#0000304)
- Fixed a bug where /who +c #chan would let you see users in a +s channel
- Added Nugget's setuid patch
- Made the IRC_UID stuff more proper..
- Removed some old debug code from the win32 debugger
- Compile warning cleanups
- Made the win32 version default to unsigned chars, and the linux version do the same under gcc
- Added Syzop's various zero-terminate patches and fixes for crashes when
  you send commands like JOIN from a server directly
- Made channel keys be case sensitive
- Fixed a bug with /who -h in some cases, found by Zer0, fixed by butter (#0000361)
- Changed auth method sslpubkey into sslclientcert, which means it will check the X509 certificate of the
  user using X509_cmp. Also needing is some policy/conf setting to adjust if to reject invalid client certificates or whatever..
- Added set::ssl::options, with three options:
    fail-if-no-clientcert   - If SSL client connects and doesn't provide a client certificate, abort connection immediately
    verify-certificate      - Check the certificate's validity using X509 methods, check if we trust CA's, etc. 
                              It however does slip self signed certificates through UNLESS
    no-self-signed          - Don't allow self-signed certificates through (requires verify-certificate)
- Made conf parser mention if we make a link->options with CONNECT_SSL if we don't support SSL (and remove the CONNECT_SSL flag)
- Made conf parser mention if we make a SSL listener and we don't support SSL
- Added set::ssl::trusted-ca-file, if enabled, it will point the SSL stuff to use that file as trusted CA's (for verify-certificate)
- Made conf _not_ bitch that it doesn't know set::ssl
- Removed some leftover client certificate stuff
- Fixed bug #0000372 reported by MorPheus where Killed (<everything-but-the-first-char-in-killer-letter-got-shown> (reason))
- Fixed bug #0000377 reported by MorPheus where IPs of servers were shown in nick collision notices
- Fixed bug #0000371 reported by havlaz about an extra \n slipped in with the TKL notice
- Fixed bug with all TKL commands not accepting nicks anymore (#0000370 reported by Ravage)
- Fixed bug #0000342 reported by James LiGate about tokens leaking through from clients
- Removed some IPv6 resolver specifics that seemed illogical (reference to Jollino's IPv6 crashes)
- Fixed crash bug in m_tkl_line found by Keeper
- Fixed another m_tkl_line bug found by Keeper
- Fixed an samode bug reported by mcskaf (#0000403)
- Added the ability to /lusers server.name to get the lusers reply of another server
  suggested by tony0man (#0000373)
- Fixed a bug where /htm would report "no such server" when used locally, reported by
  jollino (#0000343)
- Possibly fixed some crash bugs in scan_socks and scan_http in Win32 reported by
  UrLoverGuy13 and Xose (#0000389)
- Documentation - Updatet sec2.0 - list of Supported OS's for Win32 Version
- Documentation - Updated sec1.1 - Instructed to use bugs.unrealircd.org to report problems with docs
- Documentation - Updated misc hyperlinks - doc/unreal32docs.html
- Documentation - Updated sec3.31 - Added better description to the format we present set:: settings 
- Documentation - Updated sec3.31 - Added more details to set directives
- Documentation - Updated sec3.25 - Added option vhost::swhois to section 3.25 Vhost block
- Documentation - Replaced text vair {} with <> to prevent confusion.
- Documentation - Documented that lusers now supports remote servers
- Documentation - Corrected vhost::from example as reported by joolz (#0000329 )
- Documentation - Corrected set::scan:messages, currently listed as set::messages - as reported by joolz (#0000329) 
- Documentation - Added channel mode t & description as reported by stfcs (#0000315) 
- example.conf - Corrected incorrect set::services-services statment in alias block - reported by mcskaf (#0000401)
- Documentation - Corrected Spelling mistake in HTM mode - Reported by CoNfOuNd (#0000387)
- Documentation - Added coadmin to table of oper types - Reported by FrostByghte (#0000359)
- Documentation - Corrected several HTML formating problems
- Commited first 20% of conf3, if anyone runs devel, DO NOT, it is BROKEN and will most likely NOT FUNCTION
  and it WILL burn, DIE, and WILL NOT WORK
- Fixed conf3 bug with _conf_except tkl
- /kline and /zline now use TKL
- Removed src/win32/unrealinstssl.iss and merged it into unrealinst.iss, add #define
  USE_SSL to the file to build an SSL package
- Added additional NT Service options to the win32 installer
- Made CLIENT_FLOOD more customizable
- Fixed some conf3 compile errors and block-modded _*_tld
- Fixed stats bug reported by RaYmAn
- Added a patch by McSkaf that will hopefully fix the win32 resolver crashes
- Converted badword to conf3
- Fixed some win32 problems with conf3
- Fixed a problem in config testing with conf3
- Modified the main conf3 searching routine to use a binary search, this should speed up
  config processing somewhat
- Converted the config flag parsing systems to use a binary search
- Conf3 cleanups
- Converted help and log to conf3
- Fixed a configure script bug involving gcc3 (#0000398, #0000412, #0000433) found and 
  fixed by mister
- Fixed alphabeticalising of named oper flags, added _conf/test_link
- Finished up conf3, still needing some directives added but it sortof works. Rehash doesn't yet. 
-  Fixed some idiotic lack of src/modules/Makefile.in changes for the sake of commands.so when 
  /zline /kline etc was moved to a module
- Converted _conf_alias to conf3, in the process changed the format to be slightly more
  stable. See aliases/aliases.conf for the format changes
- Numerous Sts-coded-conf3-while-sick bugs
- Added SVSLUSERS, allows changing of local/global max users. This is designed so services
  can make sure all servers report the same global max and that a local max can be adjusted
  if for example a clone flood occurs. It is NOT designed to make the max count higher than
  you actually have.
- Fixed a bug in the win32 debugger where the contents of the core file were not written
  until ok was clicked. Reported by Simon Bell.
- Added an operflag can_override (v) only opers with this flag are allowed to use
  oper-override.
- Fixed a bug in SVSO where the t and Z flags could not be removed.
- Updated .RELEASE.NOTES to include can_override
- Fixed a bug where if set::help-channel was missing it was reported twice.
- Made modules able to have configuration directives in conf3. The system to do this is 
  completely new and works differently. All remnants of the old system have been removed.
- Changed the module config system slightly to be able to detect more errors.
- /rehash for conf3 (that works) :)
- Fixed win32 compile error with default: ;
- Fixed several conf3 errors
- Converted deny {} to conf3, in the process added some extra crule functions to help
  report errors better
- Fixed sendto_ routines to use slot number as index into sentalong array
- Fixed a conf3 bug
- Made alias {}'s get rehashed
- Made modules correctly rehash, this involves adding a Mod_Test function to modules that
  need to perform configuration tests. This is currently only implimented for dynamic linking
- Made the same system work under static linking. This (barring any bugs) should be the
  completion of conf3. :)
- Fixed a bug where chmode +q users could not kick chmode +a users. (#0000459) reported by
  jollino.
- Fixed serious bug in /who that caused the server to lock up (there's a ID
  for this, could someone find it). Beta13 SHOULD be a LOT nearer now
- Small typo in config validation found by ins4ne
- Changed the way return values work in conf3 to better report the number of errors that
  occurred.
- Cleaned up some module code, also removed /module load|unload (just use /rehash)
- Removed makeconf
- Fixed errors in doc/example.conf and makenet
- Fixed set::scan::bind-ip and set::scan::ban-time typos in unreal32docs.html
- Changed set::scan:ban-time to set::scan::bantime and added set::scan::timeout in 
  unreal32docs.html
- Fixed some logical module rehash issues
- Made config actually add listeners when rehashing (...) also you can now
  change listener flags using /rehash
- Changed .SICI to point to cacert.org instead (patch by evilbunny)
- Fixed an oper count bug with SVS2MODE reported by confused (#0000490)
- Removed m_kline.c and m_zline.c these are now implimented as part of m_tkl.c
- Implemented a patch by poisoner to log vhosts in connect/disconnect logging (#0000487)
- Made some changes to the thread API to fix some win32 crashes
- Changed resolver code to use IRCMutex macros.
- Documentation updates (some reported by poisoner) (#0000493)
- Fixed some problems with /kline when removing a K:line
- Updated docs some more
- Fixed a makefile.win32.ssl problem reported by WeeD
- Changed version to beta13, updated docs
- Check for connect() success/failure in scanners on all OSs.
- Documentation updates
- Added back the commands check that didn't get added in conf3 (lamers
  beware)
- Fixed a typo in the module system
- Fixed exception in scanner on Windows
- Changed base version name to Unreal3.2, instead of Unreal3.2-Selene
- Made McSkaf part of core coder team
*** beta13 released ***
- Added set::htm to set HTM options via the config. set::htm is only valid if either
  commands.so or m_htm.so is loaded.
- Recoded some of +G to work MUCH faster. A compiled copy of the regex is now stored 
  in memory rather than compiling the regex each time the swear stripping was trigged. 
  This uses slightly more memory, but saves a signifigant amount of execution time.
  Idea inspired by a suggestion from CaliMonk
- Fixed a bug where makeconf was still included in make install 
- Fixed a bug reported by |Zerwas| where tsctl required all lowercase params (#0000537)
- Fixed a bug reported by |Zerwas| where forgetting to have an oper::flags would cause a 
  crash (#0000543)
- Added a max of 500:500 to +f (higher than this is just stupid), this fixes
  (#0000542) reported by BiGi
- Fixed a bug where included files were not added to the file list in the Config menu under
  win32. Reported by PoisonDart316 (#0000535)
- Added chmode +u to help.conf, reported by Jaw959 (#0000544)
- Fixed a docs typo 'channes' instead of 'channels' and a typo that said +I is limited to
  netadmins, reported by PoisonDart316 (#0000547), also removed /unkline and /unzline from
  the docs (replaced with /kline - and /zline -, also reported by PoisonDart316 (#0000548)
- Fixed bug with INET6 and find_tkline_zap (..)
- Fixed include bug
- Created StripControlCodes() and call it from stripbadwords() to fix bug 552
- Made 3 param TKL funcs Perm with reason instead of timed with no reason
- Added set::snomask-on-oper to set the default snomask when users /oper (oper::snomask
  overrides this)
- Fixed a bug reported by AngryWolf where setting umode -o didn't remove umode
  h. (#0000556)
- Added a pretty_time_val function, this converts a number such as 86400 to "1 day"
  to make it easier to read.
- Fixed a bug in the binary search functions that could cause crashes when unknown config
  directives were added. Reported by 1of10 (#0000587)
- Fixed a bug at synch time that could cause more parameters to be sent than should be
- Fixed a TKL bug where leaving out the reason caused a crash (reported by Ravage)
- Added the ability to specify port ranges, for example listen *:6660-6669; listens
  on ports 6660, 6661, ... 6669. Suggested by Krisztian Romek
- Removed USE_LONGMODE, if it was #undef'ed problems could occur, so there is no reason to
  have it if it doesn't to anything.
- Fixed a bug where leaving out a value for certain config directives would cause a crash,
  reported by AngryWolf (#0000596)
- Fixed whole bunch of users in empty channel bug (probably)
- Added a patch by Syzop to increase the "randomness" of well... the random numbers
- Fixed a bug in the empty channel fix
- Fixed a bug in the random patch under win32
- Added a suggestion by AngryWolf to generate an error if a link::password-connect
  is specified as encrypted. (#0000597)
- Fixed bug #0000601 reported by cate where specifying just a :port number for set::scan::endpoint 
  caused a seg fault.
- Added some patches by Syzop to fix a variety of different bugs
- Added some bugfixes for IPv6 and others by Syzop
- Fixed a bug where leaving out the parameter to a password config entry would cause a
  crash, reported by AngryWolf (#0000623)
- Adding throttling, read config.h for more info. For the uneducated,
  throttling is to reconnect way too fast repeatedly. Thanks to [Real] for
  the idea
- Fixed bug #000613 reported by AngryWolf where we were writing a null to the log file when 
  we reached max size.
- Fixed a bug where helpop would pass on a null pointer
- One more fix to the above
- Patch by Syzop to fix a bug in the resolver
- Preperations for beta14. Will be a recommended upgrade
- Compile fixes regarding throttling
- Fix when you use another make than make
- Fixed so crypt() works on !HAVE_CRYPT systems with openssl 0.9.7+ too
  (yes, this makes us able to compile win32-ssl)
** beta14 released **
- Fixed example.conf set::dns::retries, 2s -> 2
- Updated help.conf: added access level required for channel modes, added chanmode +G, etc.
- Fix for missing mode 'S' in 005 CHANMODES= message
- Added message if '/helpop' is used without parameters by helpops.
- Fixed compile error in makefile.win32.ssl (added src/random.c).
- Fixed compile error in src/random.c at win32.
- Added end of stats message to /kline, /gline, etc.
- Fixed some of the FreeBSD warnings, like 'Cannot accept connections' and 'getsockopt(IP_OPTIONS)'
  (#0000616) and also changed report_error() to give additional error info.
- Fixed /shun: ADMIN and PONG allowed if shunned (as documented) and removing a shun now also
  affects connected clients immediately. (#0000593)
- Fixed SVSMODE bug in handling of non-qaohvbe modes. (#0000631)
- Fixed time calculation bug. (#0000634)
- Made netadmins able to see users in all chans by using /who #chan or /names #chan.
- Fixed crash when +x is in modes-on-oper, user has -x and then /oper's. (#0000578/#0000624/0000637)
- Removed ircdreg, bug (#0000614), outdated
- Fixed win32 compile error because of report_error patch (oops..)
- Minor documentation fixes reported by Jollino (LUSERS, OFLAGS mode h).
- Fixed bug in non-working channel mode +H. (#0000572)
- Fixed bug in channel mode +L #aaaaaaaa<etc>
- Added win32 compile instructions in doc/compiling_win32.txt.
- Fixed major (?) bug in resolver (affects ipv4 only), could cause long stalls / crashes.
- Added much better checking for weird characters in hostnames.
- Fixed SSL session cache bug, symptoms were: stunnel can only connect the 1st time, reconnecting
  etc fails with (in stunnel log) "SSL_connect: Peer suddenly disconnected". This happends with
  OpenSSL 0.9.7.
- Fixed some formatting issues.
- Cleanup of m_userhost
- Added a much faster (>100x) badwords replace routine, currently disabled until it's
  100% finished and more testing has been done.
- Cleanups in badwords.c.
- Fixed minor bug in resolving of IPv4 names if IPv6 is enabled (#0000659).
- Temporarely added user-already-in-chan check in m_sjoin to help tracing user-twice-in-chan bug
  which has been reported by two users (#0000594).
- Fixed halfop bug, ex: /mode -o+b user *!*@blah.com will get +b user!*@*. (#0000653)
- Blah... forgot to remove some debugging code in badwords.c (new fast replace system).
- Fixed yet another bug in new badwords replace system (should be almost finished now! ;P).
- Optimization: channel msg routine now 10-30% faster.
- Fixed 2-bans-needed-trick. (#0000626)
- Minor documentation update for SVSNLINE. (#0000651)
- Tweaked fix for 2-bans-needed-trick a bit.
- Fixed crash when link::leaf was empty. (#0000610)
- Fixed a bug where HCN would mean client exiting notices were displayed twice. As are result
  of the fix, sendto_conn_hcn has also been removed. Reported by AngryWolf (#0000672)
- Added some missing oflags for SVSO. Reported by auspice (#0000671)
- Possibly fixed the throttling bug reported by Jaw959 (#0000644)
- Fixed triple WATCH reply bug (#0000632)
- Added ZIP_LINKS support, no check in ./Config & configure yet.. you currently need to
  add -lz to IRCDLIBS in Makefile and enable it in include/config.h (and ofcourse set
  link::options::zip on both sides) -- Syzop.
- Removed unnecessary #ifdef blocks added by previous ZIP_LINKS patch
- Fixed some minor sending-1-byte-too-much bugs
- Made a STRIPBADWORDS_CHAN_ALWAYS option in include/config.h, if you define it badwords will
  always be stripped from all channels (regardless whether +G has been set or not) [default=disabled].
- Fix for error msgs flood at (at least) Linux 2.4.x and FreeBSD ("Transport endpoint is not connected"
  and "Socket is not connected"). (#0000677)
- Added makefiles to compile with zip links @ windows (zlib needed).
- Added '/stats zip' (Oper only, only usefull if ZIP_LINKS is defined).
- Fixed missing 's' flag in oper::snomask causing not receiving any server notices.
- Fixed a bug with channel mode +A that could prevent admins from joining. Reported 
  by Maxsus (#0000678)
- Added some missing stuff to the documentation. Reported by AngryWolf (#0000611)
- Started work on set::allow-userhost-change
- Fixed some typos in aliases/operstats.conf (#0000684) and added an aliases/cygnus.conf
  (#0000686), both reported by katsklaw
- Added better error messages support instead of just "Dead socket".
- Ahem... Fix for patch above (memleak).
- Fixed bug which made opers unable to do -a/-q (#0000654).
- Fixed bug in +q/+a list (/mode #chan q)
- Added set::snomask-on-connect
- Some tiny text fixes
- Fast badword replace is now enabled by default
- Added (optional) class::recvq so you can dynamically/per class set the recvq (flood control).
  CLIENT_FLOOD in config.h is used as a default value if recvq is not specified.
- Bugfix for crash with STRIPBADWORDS_CHAN_ALWAYS.
- Fixed bug in ipv6 + unknown connection flood.
- Don't encrypt SSL certificate by default @ win32.
- Fixed /topic for opers when not in +s-channel.
- Improved unreal32docs.html readability/layout/text.
- Minor doc updates (example.conf).
- Added better (specific) link error messages (only on the "incomming" side) so you can easily
  see whether servername, hostname/ip or username is wrong.
- Added recvq column to /stats y reply.
- Fixed a throttling bug reported by Ely (#0000704)
- Fixed a resolver bug where cache entries didn't timeout correctly.
- Made async resolve-and-connect work
- Added link::options::nodnscache which means Unreal will not cache the host forever for
  outgoing server connections, you could for example enable this if you are linking two servers
  with an often changing host (like dyndns.org).
- Documentation updates for nodnscache.
- Fixed minor memleak with zip links.
- Code cleanup in m_umode
- Fixed bug in ISON
- Code cleanup
- Fixed a bug in m_part
- Fixed a bug where compiling with ZIP_LINKS and SSL wouldn't work (#0000707) reported by 
  Ravage.
- Added the ability to enable ziplinks via ./Config as well as specify a directory zlib is
  in. Also added the ability to specify a directory for OpenSSL.
- ZIP_LINKS fixes/debugging.
- Code (comments) cleanup
- Fixed an ident bug, maybe it actually works now.. (#0000709) reported by marviiin.
- Added config error if link::options::zip was enabled at a non-zip compiled server.
- Fixed a bug with ZIP_LINKS + show-connect-info, also added fallback to uncompressed link.
- Updated protoctl.txt (added ZIP).
- Added USE_ZIP stuff to win32 installer script.
- Fixed a bug with except ban {} reported by Gargo (#0000604). As a result except tkl {} of
  type tkline and tzline have been removed since they are now handled by except ban {}
- Updated docs.
- Added set::restrict-usermodes so you can restrict which usermodes users can (un)set,
  for example you can force users to be all +G by setting G in modes-on-connect and
  also in restrict-usermodes. Ofcourse these restrictions do not apply to ircops.
  Feature suggested Gargo (#0000603).
- Fixed a bug in coadmin: global flags were not added (#0000716).
- Made ".. did a /whois on you" always show the real host (#0000705).
- Removed usermode +I (invisibility)
- Fixed link::port bug reported by AngryWolf: was signed so ports >32767 had problems
- Fixed a win32 bug that could cause crashes when editting files. Reported by camje_lemon
  (#0000717)
- Removed channel mode +H (not needed without umode +I)
- Allow coadmins to use /rehash -flags. Suggested by kyotou
- Added channel mode +M. Can't talk unless you are using a registered nick. Suggested by 
  CaliMonk
- Fixed compile warning in ssl.c.
- Updated docs, removed umode +I and cmode +H and added cmode +M
- Removed some left over +I code
- Added set::restrict-usermodes to /stats S (reported by AngryWolf)
- Zip links: Added link::compression-level so you can set the compression level per link.
- set::services-server is now required to be set (#0000730).
- Fixed /list memory leak.
- Fixed MyConnect()/MyClient() bug causing memory leak.
- Fixed a bug with TKL and rehash
- Recoded aliases (regex style) to be much faster.
- Removed some leftover +I code
- Fixed a bug in /who where +s was case sensitive. Reported by jollino (#0000736)
- Removed some debugging messages
- Fixed an alias bug reported by darko`` where alias::format::type of "normal" produced
  an error.
- Fixed some case insensitive checks in configfile parsing, fixed to be case sensitive.
- Module changes: added two hooks: HOOKTYPE_USERMSG and HOOKTYPE_CHANMSG, changed umode_get.
- Fixed bug with chmode +u: Quits/nick changes of other users were shown.
- Added /who *.host.com support (ircop only), this was already possible via /who -h <host>
  but most ppl expect it to work this way too.
- Updated win32 compile instructions
- Fixed set::dns error messages
- Fixed win32 compile error
- Fixed chmode +u again.
- Fixed a bug reported by mQ where it was possible to include spaces in a TKL host
- Documentation updates (added a section about features).
- Fixed remote /rehash bug (#0000600).
- Documentation updates (unreal32docs.html, example.conf).
- Added a new badword type, quit. This replaces the old CENSOR_QUIT. If you want to censor
  quit messages you create a badword quit {}. Additionally loading badwords.quit.conf will
  censor several badwords by default. Based on suggestions by Gargo
- Fixed two ident bugs (multihomed&connect), both resulted in ident not working.
- Added set::options::dont-resolve (=hostnames of incomming clients won't be resolved).
- Code cleanup (gcc 3.2 warnings with -Wall).
- Removed/updated some NS stuff
- Added EventMarkDel which marks an event for deletion for the (next) DoEvents() call.
- Fixed /rehash stall caused by delayed unloading of the scan module (deadlock).
- Added feature that if the chan is +m AND +u (so both!) and you ban IRC!*@* then ops
  will no longer see the "relayed" message from IRC.
- Made set::allow-userhost-change force-rejoin work.
- Fixed chmode +u bug when chanop was parting but wasn't sent to normal users.
- Added allow-userhost-change checks to /vhost.
- Added SVSWATCH: allows U-lined server to modify the watch list of a user.
- Added SVSSILENCE: allows U-lined server to modify the silence list of a user.
- Documentation/text updates.
- WebTV fixes
- Added except throttle {}, only working when #define THROTTLE
- Doc/text updates
- Changed version to beta15
- Fixed /setident bug
*** beta15 release **
- Fixed a problem with modules not loading when #undef STRIPBADWORDS
- Doc updates (SSL/stunnel example was wrong)
- Fixed a buffer overflow that could be used against setuid setups, 
  found by rave@dtors.net, reported by kokanin
- Disabled CMDLINE_CONFIG(-f) by default
- Fixed a bug in /list where opers could not see +s channels when doing /list #channel. 
  Reported by _SciFi_ (#0000762)
- Fixed a /who big which could make the server crash (oper only).
- Fixed a match() bug
- Fixed a /version bug
- Improved fake lag stuff
- Improved previous /version bugfix
- Fixed some missing /helpop info reported by Jaw959 (#0000782)
- Added set::throttle::period to allow you to change the throttling period 
  (requires THROTTLING)
- Updated some documentation
- Fixed "proxyscan on quit" bug (#0000788)
- Moved the "flood from unknown connection" notices to snomask +f
- Fixed compile error
- Fixed a restrict-usermodes bug reported by Rocko (#0000796)
- Minor /die and /restart code cleanups
- Added channel mode +M to 005 (#0000803) reported by jollino
- Fixed a bug where +x would make hosts lowercase (#0000810) reported by rayman
- Implemented a ban version {} (bans users based on CTCP VERSION). It works by sending out
  a CTCP VERSION when a user connects then checking the reply. If you don't use any 
  ban version{}'s then no version request is sent so users are not inconvenienced.
- Rewrote the "flood from unknown connection" system to kill all matching users immediately
  and also added set::anti-flood::unknown-flood-bantime and 
  set::anti-flood::unknown-flood-amount to set the length of time an unknown connection
  flooder is banned for and how much data (in KB) the user must send before being banned.
  This should fix (#0000767) reported by ora.
- Updated some documentation
- (Hopefully) fixed some Ziplinks problems
- Added missing except tkl {} documentation
- Documentation update and cleanup
- Added umode +p (hide channels in whois). For opers, channels are shown as "!#chan" to indicate
  that the user is +p and the channel is only shown because you are an oper.
- Fixed a typo in the docs for except throttle (#0000830) reported by CoNfOuNd
- Added set::modes-on-join to set channel modes that are set when a new channel is created.
- Fixed a typo in the HTM docs (#0000832) reported by CoNfOuNd
- Added anti-away-flood code, based on Bahamut. This prevents users from repeatedly using /away.
  This feature is disabled by default (see NO_FLOOD_AWAY in config.h). 
- Added set::anti-flood::away-count and set::anti-flood::away-period to control the away flood
  system.
- Moved the "missing user in SJOIN" notice to snomask +j
- Rewrote some of the set::allow-userhost-change code. Fixes (#000843) and (#0000791) reported
  by |VIO|Maverick and Rocko
- Made throttling use DelListItem and fixed some confusing regarding
  undeffing of THROTTLING
- Fixed a set::modes-on-join bug and fixed an oob read in config parser.
- Fixed an oper bug with /names on a +s channel (#0000816).
- Fixed 2 other oob reads in config parser (parsing of size and time).
- Fixed yet another oob read in config parser (ie: #0000841).
- Fixed a typo in the docs (#0000867) reported by tc
- Fixed a fast badword replace crash (#0000834) reported by orga
- Fixed a ban version {} bug with NOSPOOF (#0000872) reported by poisoner
- Made gline/zline/kline take precedence over a shun in TKL (#0000870) reported by KnuX`
- Fixed a long standing typo where doc/example.conf still mentioned oflag e (#0000638)
  reported by twigboy.
- Possibly fixed an SSL crash bug (#0000871 and #000784) reported by shotgun and comrade
- Fixed opermode bug which could cause the ircd to crash a while later (#0000823).
- Changed throttling errormsg so mIRC recognizes it and waits a while.
- Added SSL quit error messages
- Fixed an SQLINE bug with sqlines without a reason
- Fixed a bug effecting additions/deletions of SQLINES and deletions of SVSNLINES (may be
  the cause of #0000866)
- Fixed MAJOR "messages are lost" bug which can cause various problems: ziplink corruption,
  duplicate user entry in sjoin, etc etc. This would happen if BUFFERPOOL was set too low (like
  the default) and you got a lot of traffic. It's now handled a bit better and you'll get
  a nice warning, additionally the default BUFFERPOOL is now set to MAXSENDQLENGTH*18 instead of
  *9. Thanks to ora and others which helped me tracing this down.
- Added tld::options::ssl so you can have different motd/rules files if the user is using SSL.
- Fixed cloaking bug reported by Rocko (#0000869).
- Added set::restrict-channelmodes, works exactly the same as restrict-usermodes, you can for
  example disallow using of channelmode u and L. Suggested by poisoner and others (#0000838).
- Added allow::options::ssl and allow::options::nopasscont, requested by iguy and Scytale.
- Removed usermode +b from docs (been gone for a long time) (#0000798) reported by Rocko
- Fixed an SQLINE bug
- code cleanup / misc minor bugfixes (MyMalloc, oper msgs)
- Fixed a throttling bug where it could return negative numbers.
- Improved IPv6 throttle hashing
- Make the above actually work
- Improved throttle hashing (both IPv4 and IPv6).
- Changed throttling so it now bans after M connects in N seconds rather than 2 connects in N 
  seconds. (set::throttle::connections).
- Updated channelmode +f "algorithm", much better now. Reported by JimmyZ, Rocko, and others.
- Added badword::action <replace|block>. (replace is default). If you specify block, instead
  of replacing the word with "<censored>" it will block the message from ever being sent. 
  (#0000557) suggested by paranomix
- Made /stats b output badword quit {} (#0000883) reported by AngryWolf
- Made except ban {} override ban ip {} (suggested by Lithium).
- Removed some old defines for the old password encryption system (#0000765) reported by
  AngryWolf
- Made it so you can use a ~ as the first character of an ident with /chgident (#0000765)
  reported by AngryWolf
- badword::action::block should now be ok
- Added some missing /stats flags to help.conf and the /stats ? output (#0000886) reported
  by Rocko
- Fix for set::restrict-channelmodes (eating parameters).
- Made it so if someone /who's you and you are +p it doesn't show the channel you are on
- Fixed a ban version {} bug where it would version remote clients
- Added aliases/anope.conf (For Anope IRC Services)
- Updated some documentation
- Minor error msg improvements
- Fixed a bug with wrong hub/leaf settings ("non-hub introduced leaf") causing a crash 
  (#0000732).
- Fixed a bug where an unknown set::dns directive wasn't reported as an error (#0000898)
  reported by AngryWolf
- Made it so /msg nick@server and /notice nick@server use tokens if the server supports it
  (#0000895) reported by Troco
- Added some information to the docs listing the file names for motd, rules, etc. (#0000519)
  suggested a LONG time ago by Jaw959
- Fixed a compile error with openssl enabled at redhat 9.
- Added some temporarely SQLINE debugging/trace code
- Fixed a PRIVMSG channelprefix bug reported by aragon (#0000902)
- Fixed far connect (+s +F): connects from U-lined servers are now hidden again.
- Added IP bans like *!*@194.109.* (#0000474).
- Fixed usermode +S: was accidently a local usermode (#0000909) reported by DukePyrolator.
- Enabled throttling support by default, you need to have a (correct) set::throttle block
  to make it work, otherwise it's just turned off.
- Some code cleanups (s_conf.c, now has a config_setdefaultsettings()).
- Fixed minor badwords /rehash memleak.
- Added link::options::nohostcheck which makes Unreal not to validate the incomming host/IP
  against the link::hostname field, useful for dynamic DNS hosts.
- Some documentation improvements regarding link::hostname.
- Changed the module umode adding function to allow an 'is_allowed' function. This fuction
  defines who may set the specified usermode.
- Made it so Ulined servers can use a TS that is in the past for topics (#0000448) reported 
  by thilo
- Fixed a bug with ban version {} where some clients didn't like the request we were sending.
- Usermode +q can now be set by services admins, as stated in docs (#0000923).
- Preparing beta16: release notes ready, version updated in docs/text (except version.h).
- Changed version to beta16
- Various docs typo fixes, some reported by AngryWolf (#0000913)
- Mm, let's see what this checkin brings: 
  * Removed thread questions from Config, and autoconf code from
    configure.in, leaving in the old macros though, but inactive
    --enable-standardthreads is dead as of now
  * Undefined HOOKTYPE_SCAN_INFO
  * Removed CONF_EXCEPT_SCAN
  * Removed locking in events, Lock/UnlockEventSystem still active for other
    possible uses.
  * Removed scanners, web server module
  * Removed except scan {}
  * Removed SCAN_API stuff from l_commands.c, win32 makefiles, etc
  * Removed basically any mentions of threads in source tree, excepting
    threads.h which Resolver uses on win32
  * Documentation changes not done yet
- Updated docs [unreal32docs/example.conf] (maybe not all yet), win zip makefile fixed
- Module coders: I've changed HOOKTYPE_PRE_LOCAL_CONNECT, you must now return '0' to let
  the client pass and anything else is threated like a return, so you must return
  FLUSH_BUFFER if you just called exit_client, this fixes a read-already-freed-mem bug.
- Added warning message if set::scan exists
- Made SVSNOOP work. Reported by Lx (#0000933).
- Removed some more html files.
- Removed CREDITS.POTENTIAL
- Removed 'bugreport'
*** beta16 release ***
- Fixed a bug where opers without can_override could still operoverride with /topic,
  (#0000942) reported by Rocko
- Added verification that a vhost::vhost is valid (#0000924) reported by AngryWolf and ChRiS
- Fixed "make install" error caused by bugreport file removal.
- Removed some leftover +I code (can_stealth/^).
- Fixed a badword::action block bug with regex (non-fast) badwords, could cause a crash,
  reported by auspice (#0000946).
- Fixed unprecise RPING output at windoze, reported by pak (#0000945).
- Fixed a bug where operoverride notices were not send when overriding chmodes +aq (#0000831)
  reported by _SciFi_
- Fixed a bug in SVSMODE with setting -b on a user in a channel
- Recoded the "version flag" system, it is now safe to have multiple modules that use the 
  same flag, new functions are VersionflagAdd and VersionflagDel they replace flag_add and
  flag_del
- Fixed a local /kill bug during connection phase, reported by Gilou (#0000952).
- Fixed ripemd-160 vs ripemd160 confusion, reported by thelight (#0000949).
- Little find_client() audit.
- Removed some leftover TECHAT references (#0000953).
- Added a CommandExists function to be used by module coders to determine if a command already
  exists.
- Renamed channel mode +a to "channel admin" it fits better, and it makes us more consistent 
  with other IRCds.
- Made the command parsing loop slightly faster by validating command parameters when a command
  is created rather than when a command is used.
- Made ban version {} also listen for CTCP SCRIPT replies. Some scripts apparently use this to
  report their version info.
- Made it so NETINFO won't report a different cloak key error if the server specifies * for the
  cloak keys. Useful for services that rely on VHP.
- Misc /whois and webtv whois fixes
- Added CASEMAPPING=ascii as per request
- /WHO code cleanup + partial recode + bugfixes
- Updated example.conf about U-lines since many people set them wrong.
- Fixed numeric checking.
- Moved /stats zip from NOTICE to RPL_TEXT, updated stats documentation.
- Made it so it is no longer necessary to copy the ModuleInfo structure passed to Mod_Test
  and Mod_Init. Unreal now does this internally.
- Code cleanup/merge m_join/channel_link: fixed multiple channelmode +L problems.
- And another minor +L fix.
- Minor channelmode +f fix.
- IPv6: Fixed unable-to-resolve-bug if both a A/AAAA record and NS/MX/etc records were present
  for the same hostname, reported by Byte (#0000972).
- Updated flags in /version (and greeting), added 'Z' for zip links support, updated tech doc.
- Added set::ident::connect-timeout (default 10s) and set::ident::read-timeout (default 30s) to
  have much more control over ident timeouts, this should also fix connection timeout problems
  during connecting.
- Updated example.conf (added throttle block).
- Made some fixes to the resolver code under Win32
- Fixed a bug in del_throttling_bucket 
- Code cleanup (sys_errlist[])
- Fixed a crash in SVSMOTD that could occur if invalid parameters were used. Reported by 
  emigrant
- Committed little de-Fizzer module to extras/
- Check in autoconf for MacOS X that will make compiling and running on it 
  to work
- Possibly fixed a compile problem on Solaris/SunOS (#0000984) reported by Dom
- Added deny channel::redirect, which allows you to forward a client to another channel
  if the one he/she joined is not allowed. can also be used for channel "aliases" like
  #operhelp sends people to #help
- Made it so Unreal always uses extended regex support
- Fixed the compile problem on Solaris/SunOS (#0000984) reported by Dom
- Updated src/win32/unrealinst.iss a bit
- Changed /who flag '&' to '?'
- Fixed regex detection problem (introduced by a change 2 days ago).
- Added set::options::mkpasswd-for-everyone to let normal users use /mkpasswd, requested
  by Evats.
- Added error messages if not oper for: sdesc, mkpasswd, htm, rping, opermotd (#0000988).
- Removed the old TSP stuff from the extras directory, this is no longer used and it just
  wastes space.
- Made /whois work slightly faster
- Probably fixed server-notices bug (duplicates, to non-opers) caused by a few SVS* cmds,
  reported by _loco_ (#0000991).
- Fixed a bug in the win32 editor reported by ChAoS^TiGeR
- Fixed /map bug that permitted trivial finding of U-lined servers
- Fixed bug in HOOKTYPE_LOCAL_JOIN which could cause 0-member-channels if a hook returned
  1 and the channel was new.
- Made it so a permanent /kline no longer says "Permanent Timed K:line" which can be confusing
  (#0000997) reported by AngryWolf
- Module coders: new hooks: part, kick, chanmode, topic. changed: quit (added 'comment' param).
- Enlarged REPORT_* vars a bit.
- IPv6: UnrealIRCd can now lookup ip6.arpa addresses too (original IRCnet patch modified for
  UnrealIRCd by Onliner).
- Doc updates
- Removed "Duplicate user entry in SJOIN" notice because the problem has been traced down.
- Fixed some ./Config problems on Solaris with IPv6, SSL, and some other misc. things 
  (#0001004) reported by lion.
- Changed the /whois "secret channel" flag from '~' to '?'
- Fixed some MOTD problems: remote MOTD gone after rehash (#0001007) and motd time, etc...
- Fixed _some_ gcc3.3 + -Wall warnings.
- Fixed a bug where the win32 config editor could crash if the file contained color codes.
- Resolver fix nr #1 (prolly not "the real problem").
- Minor oob fix for parse_v4_netmask
- Fixed another serious bug in the win32 resolver.
- Removed mutex stuff from rem_request, no longer needed, should make the resolver much
  faster.
- Implemented short motds (ircd.smotd). If you don't know what short motds are, read on:
   short motds are a method of conserving bandwidth. When a user connects ircd.smotd
   is displayed (or a tld::shortmotd). This file contains brief text. Alternatively,
   ircd.motd (or tld::motd) is displayed when a user types /motd. The idea behind this is
   instead of displaying huge ASCII art, and tons of text to every user when they connect
   (since most users will ignore it anyway) you only show that stuff to users who specifically
   request it. Also, if you choose not to use short motds, everything will function as it used
   to the ircd.motd (or tld::motd) will be displayed both when users connect and /motd.
- Changed a few messages so that they use PRIVMSG when being sent to a WebTV user rather than
  using NOTICE.
- Added the TRE regex library to extras/tre (minor modifications to reduce source size)
- Made ./Config configure, compile, and install TRE
- Implemented +a/+q prefixes (#define PREFIX_AQ in config.h) read the comment above PREFIX_AQ
  in include/config.h for more information.
- Fixed PRIVMSG bug with multiple targets.
- Yet another resolver fix
- Fixed a bug with using crontab
- Docs update
- Temporarily disabled compiling TRE 
*** Unreal3.2-beta17 release *** (god save us)
- Modified './update', now points to docs until we have a new update thingy.
- Fixed bug with /list and '?' wildcard, reported by maGGus.
- Fixed a few fdlist bugs in SVSMODE/SVS2MODE found by Aither.
- IPv6: added warning if a ::ffff:a.b.c.d type addr doesn't work since this "feature"
  is disabled by default at newer *BSD versions. Also improved another warning.
- Added set::channel-command-prefix to allow channel text which starts with specific characters
  to be sent to +d clients (for in channel commands).
- Added a README
- Added some checking in fdlist add/remove functions.
- Updated docs a bit (how-to-get-support/FAQ link style).
- Rewrote the win32 editor handling of mIRC codes. The new system should be more stable,
  and it supports more features, such as background colors. Just a note, the editor should
  be able to display any mIRC code without problem, however, some codes may be changed once
  you save the file. For example, reverse is replaced with ctrl+k0,1 and color code 99 is 
  treated as a 1 if used for a text color and 0 if used for a bgcolor. This might cause
  problems when displaying in some clients, however not all clients support color code 99.
  As for the reverse, if I can come up with a decent way to still keep the original reverse
  code, I will change it to do that. So in short, if you need the color codes to stay
  _exactly_ the way they are, then you shouldn't use the editor on that file. Also, color 
  codes that are 0..9 are translated to 2 digits, ie "2" becomes "02" this is to prevent 
  problems when a number follows directly after the color code. 
- Added support for editting short motds in the win32 editor.
- Added a goto button on the win32 editor toolbar.
- Made the win32 editor window maximizable.
- Added a find text feature to the win32 editor.
- Added HOOKTYPE_LOCAL_OPER (first param = aClient of oper, second param = 1 if the user
  just became an oper, 0 if they just -o'ed)
- Added a system to allow modules to create snomasks using functions SnomaskAdd and SnomaskDel
- Fixed ban version crash and another read-after-free.
- Fixed problem with make custommodule and multiple EXLIBS arguments (EXLIBS="-la -lb -lc").
- Fixed a bug with +b and +e involving how trimming should occur when a mask is too long.
  (#0001103) reported by Troco.
- Fixed a bug in aliases reported by darko``
- Updated help.conf and unreal32docs.html (#0001111) reported by SciFi, AngryWolf, and Zerwas.
- Cleaned up some code for /die under Windows
- Fixed ircd.c compile error discovered by Ravage
- Made unreal work with Linux under PPC (#0001105,#0000929) reported by drevlan and Cruiser
  and thanks to drevlan for donating a linux ppc shell to help track down the problem
- Fixed a problem where Unreal would sometimes die without outputting information about the
  crash under Windows
- Made /restart work under Windows in NT service mode.
- Fixed a documentation typo (#0001027) reported by Soldier007
- Fixed a bunch of logging problems reported by LRL (#0001034).
- Fixed a problem with a fix for +b/+e reported by AngryWolf (#0001117)
- Fixed a documentation typo reported by Z3l3zT (#0001066)
- Clarified what ban server {} does, suggested by Joolz (#0001110)
- Fixed a problem related to crontab reported by LRL (#0001034)
- Fixed a problem in PPC detection
- Will now error at too large cloak keys (2147483647 and greater) because it's dangerous
  and could cause cloak key differences (ex: mixed ia32&ia64 networks).
- Some minor text/documentation fixes.
- First big part of modulized extended channelmodes system:
  - Adds room for at least 32 (new) channel modes.
  - Supports both paramless and 1-parameter modes.
  - Modulized: modules can add new channelmodes, but are unloadable (permanent).
  - Everything is ifdef'd, and EXTCMODE is disabled by default in config.h
  - It will send CHANMODES= in the PROTOCTL message on server link, this enables
    servers and services to see which modes are supported and of what type
    they are (1-parameter, paramless, etc).
  And now the bad part:
  - The system has not been fully tested, it will contain bugs (for example I'm
    aware of some memory leaks).
  - A few features are missing: warning/error on linking if chanmodes mismatch, unloading
    of channel modes (not planned soon), 005 broadcasts on change and maybe more..
  - The function (and maybe variable) names will be changed in the next weeks/months
  - You should be carefull with parameter modes + services. Things will get desynced
    if services don't recognize it's a parameter mode. This also applies to clients
    without 005 CHANMODES= support.
  - No documentation

  I really suggest module coders to wait a few weeks till the system is ready..
  In the meantime, don't report bugs or ask for support on this.
- Fixed bug with SWHOIS: oper::swhois wasn't broadcasted correctly which made it
  only show up in local (or server) /whois, reported by format (#0001141).
- minor m_kick tweak.
- Fixed bug in /silence regarding cloaked hosts, reported by kuwatog (#0001157).
- Fixed a problem with a Sleep call on win32
- Rewrote the /stats system. The new system allows for long flags for example
  /stats gline to list glines rather than just /stats G (old flags are still
  supported). Additionally, for glines an extended syntax is now supported allowing
  more refined searches. /stats G +m *@*.aol.com lists only glines that match that 
  mask. For more info do /stats ?. 
- Added stats flags for except throttle and ban version blocks
- stats bugfixes: a null pointer crash and a '/stats k' bug.
- Fixed a couple of problems in the new stats system
- Fixed another stats problem, reported by Angrywolf (#0001163)
- Rewrote the usermode module interface to be more stable and consistent with other
  module functions. New functions are UmodeAdd and UmodeDel (backwards compatibility
  is available for the old functions).
- Fixed a bug in the snomask and umode system dealing with removing flags
- Added two module functions ModuleGetOptions and ModuleSetOptions to retrieve/toggle
  module options
- Fixed a bug effecting +k/+L where you could /mode #chan +k test, /mode #chan +k test
  and each time it would send a mode change (#0001170) reported by Airnike.
- A few documentation updates/fixes
- 005 CHANMODES= set back to original value before extcmode merge
- made some functions in channel.c non-static so module coders
  can use them (they are not defined in the header files [yet] however).
- fixed 2 minor oob write issues
- Fixed a bug with stats l/L
- Updated example.conf with a more strict default oper-only-stats.
- Made '/stats S' and '/stats Z' oper only again (always).
- Hopefully fixed incoming/outgoing rate in /stats T. Only the stats of the first
  listener was counted instead of the total. This also explains why on some (many?)
  ircd configurations it always showed 0.00 kb/s and why HTM (high traffic mode)
  was never kicking in.
- A few doc updates (example.conf).
- Added EOS command (End Of Sync), which is sent between servers after a server has
  succesfully synced (after introducing of channels, users, etc). This way we can
  easily distinct between linked servers and a connecting server.
  This is needed / very helpful for: snomask +F, new +f anti flood system, prolly
  other things as well. Services don't support this command, but it's not
  needed atm since +F/+f both ignore U lines.
- Internal: changed 2 MyMalloc's to MyMallocEx (mem zerofill).. nothing was currently
  affected by this but it's easy to forget if you add new stuff.
- Fixed minor /WALLOPS bug reported by Praetorian_ (#0001195).
- Internal code cleanups: EOS var rename, got rid of old UnknownUser structs, moved
  anti away flood to new flood struct.
- Changed away flood configuration to set::anti-flood::away-flood <count>:<period>.
- Added nickflood protection, can be set in set::anti-flood::nick-flood <count>:<period>
  to allow max 'count' nickchanges per 'period' seconds. The default is 3 per 60s.
  As usual, the nickchange limiting does not apply to ircops.
- Allow o/a/q'd users to nickchange if banned (#0001150).
- Added badword all { }, this will add the badword to the badword channel, badword message
  and badword quit lists... could be useful :p.
- Little config.h cleanup (removed obsolete non-working defines).
- Allow opers to talk in channel even if +m (#0001109).
- Implemented the *nix resolver under windows. This should solve 90% of the problems that
  exist in the Windows version. There may be some problems with the resolver that still
  need to be worked out, however it should be much more stable than before. Some of this
  code is based on the ircu Windows NT port by run.
- Fixed a problem with /quote dns i
- Rewrote a whole bunch of stuff in the extcmode code
- Extended the module system to allow better error reporting using ModuleGetError and
  ModuleGetErrorStr
- Changed channel mode +f, it's a much more advanced antiflood mode now.
  It can protect against joinfloods, ctcpfloods, nickfloods and message/notice floods.
  For example +f [10j]:15 allows 10 joins per 15 seconds, if the limit is reached the
  channel is set automatically +i (invite only) by the server.
  You can read more about it in section 3.12 'Anti-Flood features' of unreal32docs.html:
  http://www.vulnscan.org/UnrealIrcd/unreal32docs.html#feature_antiflood
  This change can cause desynch problems if both old+f and new+f servers are used on
  a network. It's (currrently!) possible to use the old +f system if you undef NEWCHFLOODPROT
  in include/config.h.
- Fixed ~5 compiler warnings at *NIX and ~20 at windows. Some of them _could_ have caused problems.
- Moved EOS debugging code to DEBUGMODE.
- Fixed a channel sync bug reported by thilo&Rocko (#0001218).
- Fixed minor config parser memleak reported by AngryWolf (#0001214).
- Fixed bug regarding hidden opers + m_whois cleanup (#0001208).
- Made SSL users unable to -z themselves, also added 2 flags to /stats S,
  reported by Joolz (#0001200).
- Fixed problem with opers having both 'admin' and 'coadmin' causing double-notices (#0001043).
- +f now also allows you to specify an 'action'. For example +f [30j#R]:15 will set the
  channel +R (instead of +i) if more than 30 joins in 15 seconds are reached.
  The following combinations are allowed: c#m, c#M, j#R and m#M. (docs will be updated later)
- Probably fixed a bug regarding 'setting mode' notice with +f (was sometimes sent to non-chanops).
- Fixed multiple chmode +u bugs: remote join, netjoin, +mu relay between servers, kick and
  a part bug. Most of them reported by Lx (#0001097).
- Fixed a bug in +f + modes-on-join + 't' subfloodtype, reported by Rocko (#0001228).
- Fixed a crashbug with +f and services, reported by Rocko (#0001227).
- And another +f + modes-on-join one...
- Made anti away flood system work just like anti nick flood (#0001205).
  NO_FLOOD_AWAY is now enabled and away-flood is set to 4 per 120s by default.
- Fixed a double OperOverride notice bug reported by DukePyrolator (#0001180).
- Doc fixes/updates reported by Angrywolf (#0001163, #0001176).
- Fixed a /rehash crash regarding badword all & regex badwords, reported by Angrywolf (#0001230).
- Fixed an old bug where allow::hostname localhost (or *@localhost) didn't work (#0001115).
- Fixed a chroot bug, reported by iceblade (#0001112).
- Badwords filtering is now only done for local clients, previously every server was filtering
  the message. This will reduce CPU usage, especially at hubs (#0001022).
- Will now strip/block color codes in quits if any channel the user is in has mode +S/+c.
- Temporarely added trace code for hunting down negative operator counts (#0001155).
- Made it so that with +M and user not +r and not voice/halfop/ops/etc the part message isn't
  shown, just like with +m.
- Added warn option to deny channel, this will send a notice to the eyes snomask when a user
  attempts to join. Suggested by Joolz (#0000992).
- Added clientsonly/serversonly/ssl/java flags to /stats P (#0000992).
- Added official-channels block. These channels are listed in /list even if they have 0 users.
- Fixed a crashbug introduced by +mu fixes 3 days ago (#0001237).
- Fixed a typo where /knock would say the channel is +I if +V is set, reported by Certus
- Improved SSL error msg sent to junk snomask.
- Fixed Q:lined nickname msgs during linking and a debug fix.
- Fixed a SVSMOTD crashbug (removing of motd).
- Fix-for-fix-for-+mu-fix (it was still crashing)... don't ask.
- Minor +f code tweaks.
- Added checks for ipv4 listen lines on ipv6 compile.
- Finished some of the extcmode code (memleaks).
- Fixed a problem in the new win32 resolver code
- Added HOOKTYPE_UNKUSER_QUIT (disconnects of unregistered clients).
- Fixed a Linux PPC problem (#0001242)
- Made the win32 version use libtre for regex rather than GNU regex
  libtre is smaller, faster, and more feature rich.
- Fixed some issues regarding unsetting of -R/-M when server set that mode due to a flood (+f),
  it would set the mode back immediately after next msg/join, counters are now reset.
- Updated documentation
- Added set::default-bantime. It allows you to set the default time for a gline/kline/gzline/
  shun/etc when the time is not not specified (like with /gline *@*.stupid.net).
- Added HOOKTYPE_LOCAL_PASS and HOOKTYPE_REMOTE_CONNECT
- Added HOOKTYPE_REMOTE_QUIT
- Added beta18 release notes (might be changed)
- Added HOOKTYPE_REHASHFLAG (triggered when /rehash is passed a flag)
- Fix for HOOKTYPE_REMOTE_QUIT (was called for local quits too)
- Redid the join/kick/topic hooks
- Added a few macros (MOD_HEADER, MOD_INIT, MOD_TEST, MOD_LOAD, MOD_UNLOAD) to make
  setting up a module for both static and dynamic linking easier
- Fixed a win32 resolver lockup bug
- Fixed hunt_server* bug
- Very Very small change to doc/example.conf
- Updated .CHANGES.NEW to read Beta18
- Minor doc update.
- Updated all the modules to use the new macros
- Changed version to 'beta18'
- Fixed a problem with tre.dll
- Rewrote some of the message searching code to make it roughly 25% faster
- Minor botmotd-on-mode+B fix.
- Added a "command override" system for modules (experimental)
- Fixed some documentation typos (#0001273) reported by AngryWolf
- Fixed a bug where SVSNOOP could cause negative oper counts
- Fixed even more negative oper count bugs:
  1) if services would do a '-o' via svsmode/svs2mode on a +H person (instead of -oH)
  2) services setting +H on a non-oper
  3) services making someone a global oper while he's already local op might cause confusion.
  4) if local opers would do /mode nick +H
  5) Some false warnings (negative opercount) if services would do -Ho (-oH went fine)
- Fixed a problem with HTM where it would never actually read messages from clients
- Made /who limit output (uses set::who-limit) (#0001244) suggested by Exael23 
- Made /who * disabled (for non-opers) in HTM mode
- Added usermode +T - No CTCP (excludes ACTION and DCC), (#001288) suggested by White_Magic
  and others.
- Optimized the channel privmsg/notice code again (sendto_channelprefix_butone_tok),
  now ~33% faster.
- Yet another code audit:
  - (Just for the record, this audit has nothing to do with the ircnet buffer overflow,
     unrealircd is not vulnerable)
  - Various fixes
  - Visual bug regarding +f & server synching, it was sometimes setting mode +f multiple
    times depending on the ban-/userlist.
  - Fixed a possible desynch regarding chmode +L.
  - Fixed possible client confusion regarding bans.
- Now it would be even better if it actually compiles...
- Optimized send code re-enabled, I disabled it 6h ago due a bug-triggering-a-bug (see next).
- Fixed a PING bug resulting in 'trying to send .. to myself' msg.
- Some spelling corrections in unreal32docs.html.
- Added checks for /sethost&/chghost to same host.
- Added remove-chanmode-after-X-minutes in +f.
  The format is +f [30j#R5]:15, where 5 is the "do -R after 5 minutes". For a default
  action like +i you would have to do the same: +f [30j#i5]:15 (remove 'i' after 5 minutes).
  Additionally, 2 config items are added:
  - set::modef-default-unsettime, if this is set to for example '5' then things like
    +f [30j]:15 will be transormed into +f [30j#i5]:15. It's just a default, the user can still
    override it. By default this feature is not used.
  - set::modef-max-unsettime, specifies the maximum amount of time for the <time> parameter,
    by default this is set to 60 (=1 hour), the value should be between 0 and 255.
  I didn't do the extended tests I usually do but it seems stable, also the docs are updated
  but are probably updated again later to make it a bit more readable.
  Feel free to report any bugs as soon as you discover them.
  The only thing I could think of is: _usually_ only 1 server will have the -i/-R/.. timer
  running, so if that server splits (or even worse dies) it will only be -i/-R/.. at that server
  and when they sync back they merge chanmodes so +i/+R is set again.
  I don't consider this a huge problem but maybe it can be inconveniently, if people have
  a lot of trouble with this I'll have to consider a 50% recode of the +f system :/.
- Fixed gline with weird value causing a crash at windows, reported by Spectre (#0001309).
- Fix for +L without +l desynch on serverlinking.
- Fixed a problem regarding module hooks, if a hook was called within a hook it could cause
  problems (like pre connect hook -> exit_client -> quit hook).
- Changed some useless stuff.
- Enabled EXTCMODE by default, I presume it's stable but can't promise anything.
- Module coders: changed 'allowed' callback function for umodes&snomasks,
  from 'aClient *sptr' to 'aClient *sptr, int what'.
  'what' will be MODE_ADD if trying to add and MODE_DEL if trying to remove.
- Added HOOKTYPE_REMOTE_NICKCHANGE (called like: cptr, sptr, newnick).
- Fixed a bug regarding +f and bounce modes, would cause a crash, reported by Rocko.
- Made it so the dccdeny system can now check files that contain spaces (suggested by
  Lamego)
- Added set::options::allow-part-if-shunned. Sometimes shunned users close a channel
  window, most irc clients just close the window immediately and send a part msg..
  they don't wait for the server to confirm the part and thus the user thinks he has left
  the channel while in fact he has not... this can be annoying if you are temporarely
  shunning n00bs for a few minutes, they won't understand why they get a 'You are already
  on that channel' error msg when they try to join that chan again.
  This is however disabled by default because the idea of shun is to totally shun a user
  so (s)he can't do anything except /admin (and thus not causing "any" [server]traffic).
  Suggested by brentos. Note that we won't support /quit, or any other command, just this.
- Module coders: Moved call to HOOKTYPE_LOCAL_JOIN down to where the JOIN, NAMES, etc
  are already sent... this seems to make more sense since we have a prejoin hook now.
- Moved it a bit too far (outside the loop), should be fixed now.
- Fixed bug where color quits were stripped when they shouldn't be >:).
- Added 'action' field to ban version { } which can be: kill: kills the user (default),
  tempshun: shun the specific connection only, kline/zline/gline/gzline/shun: place
  a ban on *@IP. Time of those bans can be specified in set::ban-version-tkl-time.
  It's up to the admin to take a good decision, sometimes zlines are best (=won't use
  much sockets but will reconnect quite quickly), sometimes tempshun (=will use 1 socket
  but generates nearly no network traffic), sometimes klines/glines, etc..
- Added sendto_umode_raw, sends to umodes, but not as a NOTICE
- Added hook HOOKTYPE_CHANNEL_CREATE (cptr(user creating channel), chptr
  (channel that has gotten created)
- Added hook HOOKTYPE_CHANNEL_DESTROY (chptr (channel getting destroyed))
- Minor doc updates regarding snomasks reported by Stoebi (#0001324).
- Fixed two OperOverride kick bugs:
  - If ircop is +h and victim is +h it would deny it, reported by Special (#0001308)
  - Ircops (all except netadmin) had trouble kicking +q people, if the ircop isn't
    op'ed he can kick them, but if he has +o he can't. Reported by Michi (#0001012).
  If you use mixed unreal versions you can get desynch problems if you use those
  fixed things (like kick a +h if you are +h) because older servers will still block
  the kick. You will receive a 'You cannot kick channel' message from every older
  server so you'll at least be notified ;p.
- Don't allow remote pongs if unregistered.
- (Internal) Added __attribute__ format checking for most format string functions,
  this will currently produce a lot of warnings with -Wall.
- Fixed 159 of 184 warnings detected by the above, the other warnings are false.
  Most warnings had to do with long vs int, and thus the format strings (%d->%ld)
  or the vars (int->long) have been changed (many of these were time_t/TS vs int).
  Only a few rare crashbugs were discovered.
- Module coders: for HOOKTYPE_LOCAL_CHANMODE the 'sendts' parameter was changed
  from type 'int' to 'time_t', while in most circumstances (like on ia32)
  you won't notice, I suggest you to update your callback functions anyway.
- Possibly fixed an issue with set::modes-on-join and mode +f, it could have
  set random remove-chanmode times in the default chanmode line.
- Fixed some other weird remote PING/PONG stuff as well.
- Fixed a bug where link::options::autoconnect wasn't working after rehash, ircd
  had to be restarted to make it work. Will now try to connect on /rehash to
  servers with autoconnect enabled. Bug was reported by Rocko (#0001321).
- Added insane OperOverride system for joining +z channels (#0001189).
  This seems better than just allowing the insecure oper trough +z.
- Fixed a UMODE2 bug.
- Made it so chanmode +f flood detection doesn't apply to u-lined servers. This was
  already indirectly the case because services don't support the EOS command, but
  now some (homemade) services do :p. Reported by Troco (#0001337).
- (Internal) Moved most valid-host checking into 1 function, valid_host(),
  which checks for invalid characters.
- Added hostname check for me::name since this could cause mysterious trouble.
- Removed references to tkline/tzline from help.conf. Reported by penna22 (#0001340)
- Fix for permanent modules w/ config hooks (they were not called).
- Fixed desynch bug regarding extended channelmodes. Reported by AngryWolf (#0001347)
- Multiple /module changes (the command):
  - Normal users can now get a list, versioninfo will be hidden however.
  - Opers get some additional details like hooks and commandoverride's.
  - Opers can use /module <servername> to get a remote list of loaded modules.
  - Added flag [3RD] to show it's a 3rd party module
  This was requested by by quite some people because serveradmins started to load
  "spy modules" without clearly mentioning it in the MOTD (which is highly unethical
  and in some countries even illegal due to privacy law). Also the remote module
  list was requested by quite a few opers.
  Sure, this isn't a 100% guarantee but at least if someone goes hiding stuff
  then it's clear what their intentions are (and thus will be refused support, ..).
- Changed emailaddr in help window at windows to unreal-users mailinglist.
- Made the cloak mismatch msg during linking a bit more scary.
- Added comment to 'Install as a service' option in installer to help n00bs a bit.
- Made win32 work again (broke it by /module patch 30 minutes ago).
- Fixed a snomask issue reported by Magnet (#0001354).
- Added oper::maxlogins which allows you to limit the number of concurrent session
  with the same oper block. Suggested by kain.
- Made /dns oper-only (the ircd command, not your client /dns command :p).
- Various help.conf fixes. Reported by nukie (#0001373).
- Fixed remote BOTMOTD bug reported by Angrywolf (#0001365).
- Workaround for "special ban makes it impossible to add other bans" bug
  reported by wilkie, SerialKillinNinja, etc. 
- Made /rehash reread botmotd and opermotd (#0001291).
- Made OperOverride work for chanmode +Q (#0001370).
- A few example.conf changes.
- Fixed a compile problem on alpha, reported by Hyperi (#0001374).
- Made "operator count bug" not notice all opers (log only), unless in debugmode.
- Added comment regarding MLOCK and set::restrict-chanmodes in unreal32docs.html.
- Made PREFIX_AQ a ./Config question at *NIX and enabled it by default at Win32.
- Added stuff that will ease the transition to extended bans next release.
- Added beta19 release notes
- Made USE_ZIP the default again in src/win32/unrealinst.iss
- Changed version to beta19
- A last-minute fix, lalala...
*** beta19 release ***
- Changed the HOOKTYPE_REHASHFLAG syntax to (aClient *cptr, aClient *sptr, char *flag)
  requested by AngryWolf (#0001365)
- Added HOOKTYPE_PRE_LOCAL_PART to allow changing of part messages suggested by AngryWolf
  (#0001365)
- Fixed a bug with SVSNLINE - reported by FreakyComputer and fixed by AngryWolf 
  (#0001399)
- example.conf: added +i in modes-on-connect.
- Temporarely added fdlist debugcode, please report any bugreports it gives,
  it would especially be helpful if you know _what_ triggered the error :).
- '/rehash <server>' didn't reload motds&rules files, reported by w00t (#0001409).
- Added channelmode +T: no notices allowed in channel.
- Made ./Config create a tmp/ directory
- Rewrote some of the module system to allow /rehash to load a new version of a module i.e.
  after a newer version has been compiled. This also fixes the problem with hooks disappearing
  during a rehash (#0001332) reported by AngryWolf and (#0001325) reported by Cnils. This
  might need some testing.
- Fixed some problems with the copyfile routine for the new module rehash system and also fixed
  an issue with rehashing when permanent modules are loaded
- Made "chanop notices" only go to @#chan on non-prefixaq servers (and to ~&@#chan otherwise),
  internal: added ugly macro CHANOPPFX which is "~&@" if prefix_aq, else "@".
- Added error checking/error messages to new module reloading system, to catch errors like
  insufficient hd space, permission denied, etc..
- Made it compile at windows again
- Added set::static-part: similar to static-quit, default 'no' (static-part disabled).
  If set to 'yes' or '1' it will strip all part comments,
  if set to something else it will use that as a part comment.
- Partial cleanup of m_part (hopefully I didn't destroy anything).
- Minor stats compile warning fixed
- Started some work on the remote include system
- Fixed a bug with set::who-limit sending multiple error notices, reported by doh
- Fixed a bug with the configure script reported by doh where Unreal would ignore the
  manually specified directory for OpenSSL (and also Zlib)
- Made the ./configure --help display a bit cleaner
- Added include/types.h to hold any new datatypes we create
- A lot more work on the remote include system
- Added a patch by Certus to make it so hide-ulines also hides the server name from a
  /who /whois and /whowas
- Merged all of the win32 makefiles into a single file (makefile.win32) with some
  configurable macros to decide whether ziplinks and/or ssl should be enabled
- Added "extended bans". An idea from SorceryNet ircd.
  These bans look like ~<type>:<stuff>. Currently the following bans are available:
  ~q: quiet bans (ex: ~q:*!*@blah.blah.com). People matching these bans can join
      but are unable to speak, unless they have +v or higher.
  ~c: channel bans (ex: ~c:#idiots). People in #idiots are unable to join the channel.
  ~r: gecos (realname) bans (ex: ~r:*Stupid_bot_script*). If the realname of a user
      matches this then (s)he is unable to join.
      NOTE: an underscore ('_') matches both a space (' ') and an underscore ('_'),
            so this ban would match 'Stupid bot script v1.4'.

  These bantypes can also be used in the channel exception list (+e).
  +e ~r:*w00t* makes anyone with 'w00t' in their realname able to join,
  and +e ~c:#admin makes anyone in #admin able to join, etc..

  This system allows modules to add extended bantypes too.

  This feature requires some additional testing, also the module interface will
  probably be changed in the next few weeks, and perhaps more extended bans will
  be added before next release.. we'll see...
- Updated win32 makefile...
- Module-systemized the extban stuff
- As expected, fixed a crashbug in extended bans system. Reported by Rocko (#0001444).
- internal: changed is_banned() again: cptr,sptr -> sptr (dropped cptr). It was too
  confusing (and thus causing bad code/bugs) and was never used anyway.
- Added a function join_channel which will make it easier for module coders to force users
  to join a channel
- Made it possible to compile the win32 version with libcurl support
- Updated the win32 TRE lib/dll to the latest version (0.6.3)
- Fixed a PATH_MAX vs MAX_PATH problem
- Fixed a bug where if a Mod_Load returned MOD_FAILED, the module was not removed (#0001426)
  reported by AngryWolf
- Fixed a bunch of oper fdlist bugs regarding locops
- Fixed a couple of minor typos in the source
- Removed the old configure checks for pthreads
- Added configure/Config stuff for libcurl
- Added a ./curlinstall script to help with installing curl (Read INSTALL.REMOTEINC for
  more information).
- Added code to make remote includes able to use SSL (HTTPS/FTPS) if SSL support is enabled
- Fixed a remote include bug with rehashing when no remote includes were loaded
- Fixed a remote include compile bug on Linux regarding url.h
- Fixed a remote include compile bug regarding ares (#0001458) reported by mustapha88
- Made the tmp/ directory cleaned up better
- Added some additional warnings for insane large values for allow::maxperip, and class::*
  stuff. Reported by Erik_Rana (#0001463).
- Fixed a bug with /rehash and cached remote includes reported by mustapha88
- internal: Modified TKL system (getting ready for anti-spam system):
  Instead of 1 big list of *lines, it's now an array to easily distinct between types.
  Also made tk->usermask static (USERLEN+2) instead of dynamic.
  These changes should give enough speed improvement to make the new anti-spam/anti-ads
  feature fast enough.
- Updated the TRE library source to 0.6.3 (not yet used)
- Updated the win32 TRE lib/dll to 0.6.4
- Updated the TRE library source to 0.6.4 (yup, a release right after I do the last upgrade!)
- Removed all the FLAGS_TS8 stuff (no longer used)
- Fixed some operoverride bugs regarding halfops found by Sinus (#0001465)
- Cleaned up the /kick code to make it a bit faster
- Reactivated TRE compile
- Finally made Unreal use TRE under *nix
- Fixed a compile problem reported by ace (#0001474)
- Added an EXTBAN 005 token (see doc/technical/005.txt for info)
- Fixed a bug with the dynamic umode and cmode systems
- Made CmodeAdd return MODERR_EXISTS if the mode already exists
- Fixes for TRE under win32
- Made Extbans use the module object system
- Fixed a problem caused by the previous change
- Fixed some compile warnings
- Made CmodeAdd set MODERR_NOERROR when no error occurs (#0001484) reported by AngryWolf
- Fixed a bug in /kick reported by rav2k (#0001490)
- Made /who +M show +i users since they are already visible (#0001489) reported by penna
- Made /who +M take chmode +u (auditorium) into account
- Corrected the SVSNLINE documentation in help.conf (reported by Certus)
- internal: Ok, I'm committing this in parts... did most of the TKL spamfilter
  integration now, no.. it doesn't work at all yet but most of the internal stuff
  has now been done (but I temporarely need to work on other things now).
   moved/added a lot of regex stuff, banaction/spamfilter helper functions, etc
  into s_misc.c. [note: current code has some bugs but since the stuff isn't
  used that's no problem... it's also a bit ugly, do NOT mail me about these things ;p]
- Enabled talk-trough-+M for opers (just like +m)
- Disabled talk-trough-+m/+M for opers if NO_OPEROVERRIDE is defined
- Display zlib/SSL version in /version (oper only)... will prolly be improved later.
- updated doc/compiling_win32.txt
- updated doc/compiling_win32.txt some more (tre.dll, not gnu_regex.dll)
- Added a patch by AngryWolf to display libcurl info at startup. Also added support to 
  display in /version
- Added a patch by AngryWolf to add ./unreal version (displays the Unreal version)
- Made permanent modules receive HOOKTYPE_REHASH to notify of a rehash (#0001499)
- Added EXBCHK_PARAM to allow reporting errors about bad extban parameters. 
  Requested by AngryWolf (#0001488)
- Added a patch by XeRXeS to log usage of some potentially abusive commands
  (#0001397)
- Renamed "FAKE_LAG_FOR_LOCOPS" to "NO_FAKE_LAG_FOR_LOCOPS" since that's what it did
  anyway, requested by Greg (#0001453)
- Made it so chan ops can invite in a +V channel. Requested by AI (#0001478)
- Added HOOKTYPE_PRE_LOCAL_QUIT to allow changing quit messages. Suggested by penna22
  (#0001424)
- Updated some /stats docs, reported by AngryWolf (#0001283)
- Added set::silence-limit to allow specifying how many entries may be in the SILENCE list
  also upped the default value to 15. Suggested by tabrisnet (#0001486)
- Updated the docs to reflect that /module can now be used by users. Reported by fez (#0001434)
- Made it so the configure script doesn't add include/library paths if they would be the 
  default path. Reported by LoVeR (#0001307)
- Changed random number generator to use arc4random-alike routines so we can get "secure"
  random numbers. We will also no longer be using rand()/random() anywhere.
  Thanks to dek\ for pointing out this is potentionally dangerous, especially on
  win32 with NOSPOOF enabled.
- Changed NOSPOOF msg in ./Config a bit since this can also be effective against
  "blind proxies" (like HTTP POST proxies).
- WebTV updates: made it so (user generated) channel notices are now displayed as
  privmsgs in the channel. Also made the /knock channelnotice a privmsg for webtv.
- Module coders: added HOOKTYPE_REMOTE_CHANMODE
- Fixed a bug with HOOKTYPE_CONFIGTEST not being called for permanent modules, found by
  AngryWolf
- Updated PRIVMSG/NOTICE paramcount so '/msg IRC NOTICE #chan hi all' works (no ':').
- Made it so *lines via place_host_ban() take effect immediately (eg for spamfilter,
  ban version, flood from unknown connection), there was a small delay before.
- Added spamfilter system. This is an attempt to fight spam, advertising, worms, etc..
  It's much like badwords but allows you to choose multiple targets (eg: private,
  channel, notice, etc) and various actions (eg: block, kline, gline, kill, etc).
  You can use the /spamfilter command to add network-wide spamfilters, but you
  can also use spamfilter { } config blocks to create local spamfilters.
  Additionally, set::spamfilter::ban-time (duration of *lines added by spamfilter)
  and set::spamfilter::ban-reason (*line reason if banned) are added.
  See the documentation for more information (section 3.14).
  This system needs some additional testing, I'm sure there will be bugs ;).
- Fixed a problem with /stats [G|s] extended flags parsing.
- internal: added sendnotice()
- win32 compile fix (typo)
- added set::spamfilter::* to docs
- updated /stats help and docs on '/stats f'
- Fixed '/SetHost Error' flood from all servers in some circumstances like re-opering,
  reported by blotter45 (#0001400).
- Made ./Config remember the libcurl directory, reported by ace (#0001505).
- Fixed a problem with the snprintf() check, reported by virusx (#0001510).
- Fixed a bug where multiple spaces could appear in a MODE message, reported by Airnike
  (#0001169).
- Fixed a bug with SSL remaining enabled even when the headers are not found, reported by
  AngryWolf (#0000863)
- Added can_setq/q for regulating which opers can set umode +q, requested by cfreak202
  (#0000478)
- Added HOOKTYPE_TKL_EXCEPT (arg: cptr, tkline) which is called from find_tkline_match
  and find_tkline_match_zap. This can be used to add custom TKL exceptions.
- Fixed possible compile bug (caused by HOOKTYPE_TKL_EXCEPT).
- Cosmetic 'stats /zip' output change (#0001435).
- Made services admins able to see on which channel services bots are, just
  like netadmins can, suggested by EviL_SmUrF (#0001481).
- Fixed problems with Unreal using devices in a chroot'ed environment and ircd.pid problems
  with setuid/setgid, reported by thilo (#0001514).
- Made /sajoin override modes (e.g. +bilk) reported by mcskaf (#0000518).
- Fixed issue when 2 servers link with identical user@host *:lines but with different
  expire times, reason field, etc... Entries are now fully synced between servers.
  Reported by Cnils (#0001448).
- Added umode +T to help.conf
- Fixed an issue with add/del/remove in /spamfilter being case sensitive.
- Fixed invalid nameserver info when chrooted (nameserver was always localhost).
- Fixed a remote include bug involving cached files. Thanks to chatsphere.net for helping to
  track this down!
- Modified 404 numeric a bit (#0001515).
- Fixed 'no server notice on /restart or /die', reported by Lx (#0001062). This was caused
  by a bug in flush_connections(&me), hopefully there won't be any side effects.
- Fixed file owner problems when IRC_UID/IRC_GID is used (eg: when running chrooted).
- Fixed crashbug if we were unable to write a remote include file to disk.
- Limited 'All Connections in Use' message to max 1 every 15s, this DOES NOT mean we will
  introduce throttling of other msgs (or making this configurable)... this is just
  an exception because this msg is sent to _all opers_ and you cannot disable it by
  unsetting certain snomasks. Anything lower than 15s would be bad anyway since this
  is a very serious error condition. Requested by LoVeR (#0001412).
- Added can_dccdeny operflag so you can give your local/global opers access to this too.
  Co-admin, admin, sadmin and netadmin get it by default. Suggested in #0001247.
- Updated operflag docs.
- '/rehash -all' had bugs and is now considered depricated, just use '/rehash' instead.
  On '/rehash' we reload everything already so the '-all' option was useless anyway.
  Reported by fez (#0001516).
- Made blocked dcc notices (sent to umode +v) global, suggested by neothematrix (#1513).
- [internal] cleaned up snomask removal after deoper, now remove_oper_snomasks() is
  called which might look a bit ugly, but is better than before (scattered on 3 places).
- Added snomasks 'N' which allows you to see nick changes of clients on other servers,
  requested by several people (#0001323).
- Made setting of -qaohv etc on services (+S) not possible unless you are a netadmin (purpose
  is to prevent people from deoping BotServ bots). Suggested by shiny (#0000917)
- Ripped out fast (bad)words support out of spamfilter to avoid confusion, also renamed
  spamfilter::word to spamfilter::regex to make it even more clear (since we match
  on the whole line and have nothing to do with words.. 'word' doesn't make sense).
- Updated docs with some better regex examples, reported by AngryWolf (#0001520).
- Added snomasks 'S' (Spamfilter) which notifies you of any spamfilter matches.
- [internal] always return after spamfilter match, don't continue looping trough
  targets list (eg in case of: /msg #a,#b,#c spamspam), otherwise you would get
  duplicate notification msgs.
- Added SENDSNO server command, similar to SENDUMODE but for snomasks, this is
  used by the spamfilter snomask (+S) so you get network-wide notifications.
- Added "compiled for.." versioning system, this way a beta17 module can't be loaded
  on beta18, etc... People often forgot to recompile their modules or had old ones
  somewhere by mistake, therefore crashing after upgrades... this should fix this
  (in the future). Module coders don't have to do anything for making this work,
  it's done automatically (via modules.h).
- Forgot to add src/modules/m_sendsno.c to CVS, also fixed 2 compile warnings
  and a crashbug related to previous commit.. bug hunting will continue ;).
- Fixed minor compile warning.
- Added a section "Security tips/checklist" to unreal32docs.html, this is something
  I worked on a few months ago... It tries to explain how to get a server/network
  secured, what the potential risks are, etc... Of course security is a complex topic
  so I cannot talk about everything in it, but I tried to mention the main risks and
  what you can do about it in a (hopefully) simple and understandable language ;).
- Fixed a snomask bug reported by Cat / HERZ (#0001531).
- Started using the umode->allowed stuff a bit ourselves, just to be sure.
- Fixed a problem with module reloading (#0001533) reported by penna.
- Removed remote /restart support. There are too many security issues that
  can not be overcome. 
- Added a patch by thilo to make Unreal correctly deal with umask settings when
  creating devices in a chroot'ed environment. (#0001514)
- Added commands SVSSNO and SVS2SNO (work just like SVSMODE/SVS2MODE but for snomasks)
  suggested by x64 (#0001461).
- Added 80% of release notes, rest will be added a day before release or so :).
- We are having fun with Makefiles...
- Updated the Donation file to talk about the PayPal address to make donating easier
  (hint hint.. ;)
- Added missing lines to include/setup.h.in for snprintf, vsnprintf, strlcpy, strlcat,
  and strlncat. Should fix #0001510 (for real this time).
- Ouch!! Fixed a severe bug which caused opers not being recognized on remote
  servers causing various problems... This was caused by a change 1-2 days ago.
  Reported by Rocko (#0001537).
- Fixed fdlist bug/warning if a local operator /oper'd up twice. Reported by
  DukePyrolator (#0001539).
- Changed version to RC1
*** RC1 release ***
- Fixed a problem regarding the new module system and deleting the tmp/ directory
  under Linux 2.2 (thanks to FunTeenChat for helping track this down)
- Updated /credits. Now includes everyone who has sent in donations, thanks
  to everyone!
- Fixed a bug in "unkickable users" (umode +q), they could still be kicked
  by non-netadmin ircops in some (many) cases, reported by Zell (#0001541).
- Removed reference to SVSTIME from help.conf (it's actually /tsctl svstime)
  (#0001540) reported by penna and DukePyrolator.
- Added HOOKTYPE_UMODE_CHANGE (sptr, oldflags, newflags) - this may 
  not be accurate as umode changes are done manually many places.
- Added HOOKTYPE_TOPIC (catches both remote and local TOPIC sets).
- Added a missing ; in the docs oper {} example, reported by Certus
- Fixed a bug with leaving out SJB64 in PROTOCTL resulting in strangeness
  (#0001545) reported by MagicalTux2
- Added [OLD?] flag in /module so you can easily spot old beta* modules.
- Modulized: samode, sajoin, sapart, kick, topic, invite, list
- Added HOOKTYPE_REHASH_COMPLETE to allow permanent modules to reload
  command overrides. (#0001553) reported by AngryWolf
- Modulized: time, svskill
- Modulized: sjoin, pass, userhost, ison, silence
- Modulized: knock, umode2, squit, protoctl
- Slightly changed how extcmodes handles access control
- Module coders: for extended channelmodes the EXCHK_ACCESS* the return
  value should now be one of EX_*:
  EX_DENY        : disallowed, except for oper override
  EX_ALLOW       : allowed
  EX_ALWAYS_DENY : disallowed, even in case of operoverride (eg for
                   operlevel modes like +A).
  Note that it's backward compatible since TRUE/EX_ALLOW=1 and FALSE/EX_DENY=0.
- Fixed a few bugs with oper override & extended chanmodes, for example
  chanmode +T could not be set by a globop w/can_override and non-+hoaq.
- Added some set::throttle::* checking if insane values were supplied.
  Reported by Troco (#0001555).
- Added support for single-target specifiction like spamfilter { regex "blah";
  action kill; target private; }; previously it didn't warn/error on this
  but it didn't work either.
- Fixed a bug in the unreal_checkregex() routine which could cause a crash
  if you added an invalid regex. Reported by Tony (#0001556).
- Fixed the problem with services and SETHOST for unknown user errors
  (#0000893) reported by vorte[x]
- Made allow::options::noident work correctly (#0001416) reported by Zifnab
- Made some files include limits.h to find PATH_MAX on Solaris (#0001561)
  reported by lunytune
- Made a change to the remote include code to deal with a random memory corruption
  issue (#0001558) reported by hybridz.
- Fixed a bug caused by the fix to bug (#0000917) that would also prevent you from
  setting +qaohv on a network service (#0001563) reported by Rocko.
- Fixed a few wrong macro's (ircstrdup/ircfree) in s_conf.c causing
  very weird behavior... This also fixes a bug where set::spamfilter::ban-reason
  would have the value of ban-time.
- Improved spamfilter again.
  - The new syntax is:
    /spamfilter [what] [type] [action] [tkltime] [reason] [regex]
    [tkltime] specifies the duration of any *lines placed by this rule.
    [reason] specifies the *line, kill and/or block reason.. no spaces
    allowed, but '_' will be escaped to a space.
    In both cases you can simply use '-' to skip and use the default.
    Ex: /spamfilter add p block - - Come watch me on my webcam
        /spamfilter add p gline 3h Please_go_to_www.viruscan.xx/
        nicepage/virus=blah Come watch me on my webcam
  - A message is now shown if the msg/notice/dcc is blocked.
  - There are 2 new spamfilter action types:
    'dccblock' will mark the user so (s)he's unable to send any files by DCC.
    'viruschan' will part the user from all channels and join
     set::spamfilter::virus-help-channel (default: #help).
     this action might be improved to do more later.
  - Internal: added EXTTKL PROTOCTL, this determinates if 10 parameters
    instead of 8 are supported for m_tkl (used by spamfilter add).
  This new system needs some testing... :)
- Fixed a bug in 'Flood from unknown connection' (#0001566).
- Rewrote a great deal of the remote include code to make it work on Windows
  due to Microsoft insanity. 
- Added /tempshun, temporary shuns the current session of specified nick
  (just like the 'tempshun' in spamfilter and ban version). Suggested by
  Cnils (#0001526). [docs/help.conf will be updated later]
- Updated docs on tempshun and new spamfilter features.
- Modulized: addline, addmotd, addomotd, wallops, globops, locops, chatops,
  admin, trace.
- Removed: gnotice, goper
- Modulized: netinfo, links, help, rules, close, map, eos
- Made it compile on win32 again
- Modulized: server, stats
- Modulized: svsfline, dccdeny, undccdeny, whowas
- Modulized: connect... should be the last one till 3.2final.
- Fixed some compile warnings/problems caused by modulizing.
- Fixed a bug which prevented "/spamfilter del[..]" from working.
  Reported by Fury (#0001575).
- Moved the SQLINE system (and ban nick) to TKL and introduced "holds"
  suggested by Certus
- Minor fix for previous.
- Improved 'viruschan' spamfilter target:
  - better msg after the forced join
  - +oaq's in set::spamfilter::virus-help-channel receive a notice about
    which filter the user matched.
  - it disables all commands except PONG, ADMIN, and msg/notices to
    set::spamfilter::virus-help-channel.
- Made snomask +S also show the spamfilter reason field.
- Added class::pingfreq checking, should be 30-600 now.. else you might
  get mysterious (mass) disconnect issues.
- Lol, I made /connect dissapear during modulizing ;).
- Added a warning if your listen portrange affects >100 ports
  (eg for idiots doing 6667-7000 which uses 333 sockets).
- Added some extra debugging for tkl update notice...
- Fixed a problem in 'tkl update': lowest expire time won instead of
  highest. Reported by Malcolm.
- Fixed a tkl update problem with sqlines
- Improved dcc blocking support (both for spamfilter and deny dcc).
- '0' tkltime in spamfilter now really means 'perm', not '*line for
  0 seconds' or something. Reported by Certus.
- Fixed a bug in individual m_*.so loading, 39 new modules were affected.
- Fixed an issue where chanmode +f was often set by the server again
  in a netjoin when there was no need to (nothing to synch).
- Added spamfilter::except which allows you to specify targets
  (eg: channels) where spamfilter should not take action. Requested by Fury
  (#0001586). Ex: set { spamfilter { except "#spamreport,#help"; }; };
- Fixed a zero-terminate bug in remote includes: urls with '?' in it could
  cause a crash, reported by Joolz (#0001587).
- Made numerics 518-520 a bit more clear by mentioning the channelname in it.
  Suggested by Zell (#0001589).
- Fixed a bug reported by Joolz that would cause problems when deleting a remote
  included file from a server (#0001587).
- Fixed a few more remote include problems on Windows
- Fixed a remote include problem caused by an earlier fix that resulted in referencing
  free'd memory 
- Q comes after P. Thanks to Rocko for reminding us! (fixes /stats P bug ;p).
- Added 90% of RC2 release notes.
- Cosmetic doc updates (#0001596) reported by HERZ.
- Updated SSL error for underlying syscall error a bit (#0001615).
- Minor doc updates on SSL (mIRC now supports SSL a bit).
- Fixed yet another fun remote includes memory corruption crash bug due
  to curl strangeness (took me 2 hours to trace down, great!). Reported by Matridom.
- Redesigned the HOOKTYPE_PRE_LOCAL_JOIN to support return types of HOOK_DENY,
  HOOK_ALLOW, and HOOK_CONTINUE to prevent a user from joining, to immediately allow
  a user to join, and to proceed on to see if other modules will deny the user.
  Based on a suggestion by satmd (#0001604)
- Imported TRE 0.6.5 on Win32 and Linux, solves (#0001542) and (#0001564) reported 
  by methos
- Added rest of release notes.
- Added first 2 rules to spamfilter.conf, update release notes and unrealinst.iss
  for it too (also added missing badwords.quit.conf file @ win32).
- And some more spamfilter.conf rules (mirseed & fagot).
- Updated /credits with a few more donators (listed in no particular order)
- Fixed a little error in the spamfilter.conf
- And some more spamfilter.conf rules (aplore, gtbot, sdbot, spybot).
- Minor doc update.
- Changed version to RC2
*** RC2 release ***
- Fixed a bug regarding the new HOOKTYPE_PRE_LOCAL_JOIN reported by bla
- Fixed a compile problem on Solaris due to tar not supporting the z option
*** RC2fix release ***
- spamfilter.conf: fixed fyle sig (was bad!), some minor updates to the rest,
  added mirc 6.12 exploit sig. Reported by PHANTOm.
- Added a check to try and prevent people from adding all-encompassing
  regexp's in /spamfilter. Thanks to Ville Laurikari for coming up with the
  method!
- Removed the old/unused src/win32/version.c (#0001630) reported by fez
- Updated docs to mention except tkl {} type qline/gqline
- spamfilter.conf: added soex trojan. Sig provided by Jay.
- Fixed a spamfilter memory leak
- Added '__' -> '_' decoding for spamfilter reason field.
- Made it so set::modes-on-join correctly works with extcmodes. Note: to 
  correctly work with modes created by modules, the module _must_ call CmodeAdd
  from Mod_Test (#0001624) reported by thunderbirdjl
- Made some changes to the curlinstall script to make it work with c-ares-1.0.0
  also updated INSTALL.REMOTEINC
- Fixed a typo in the /credits
- Made it so curlinstall doesn't use cp -f since it is nonportable
- Hide server IP in /stats z
- First Opteron crash bugfix. Thanks to Liverbugg for helping us trace this issue.
- More Opteron fixes... sizeof() fun, %B fun (always use a 'long'!), etc..
- Added __attribute__ stuff for ircsprintf() to catch more warnings.
- Fixed win32 compile problem. Reported by Troco (#0001644).
- Added a missing ',' to the version.c.SH script reported by docco (#0001643)
- Added conf check for too large spamfilter regex + reason field. Reported by
  Z3l3zT (#0001648).
- Added spamfilters for the Nkie worm
- Fixed a little sqline recode memory leak
- Fixed /spamfilter removal problem... often the wrong entry was removed [!] or
  nothing was removed at all. Reported by MiNdErAsR, RealCFC and others (#0001669).
- Fixed /spamfilter reason field bug.. things were double escaped sometimes,
  especially in post-RC2-cvs this was noticable. Reported by Fury (#0001670).
- help.conf: updated snomasks section.
- Added a patch by baafie to fix a problem where environment variables could not
  be specified in the Config script (#0001657)
- Imported TRE 0.6.6 on Win32 and Linux
- Made use of TRE's pkg-config support to solve a problem with libintl reported by
  raistlinmajere (#0001592)
- Fixed a problem with /stats S and extended channel modes (#0001675) reported by
  AngryWolf
- Fixed a resolver problem that could cause hosts to not be resolved on some Windows
  systems
- Fixed a problem where the win32 GUI's "rehash all" option did not reload motd/rules
  (#0001678) reported by w00t
- Made some changes to the win32 setup script to make it work with the latest version
  of Inno Setup (4.2.0)
- Made the setup script use the new compression method 'lzma' which makes the setup.exe
  ~300Kb smaller. Now also requires Inno Setup 4.1.6 (tested with 4.2.0).
- Usermode 'r' (registered) was unset even in case of "case"-nickchanges (like:
  'Syzop' -> 'syzop'). This affected f.e. ircservices. Reported by LoVeR (#0001679).
- spamfilter.conf: changed a lot of rules from 'block' to 'gline', left some
  on 'block' however if there was some (very low) chance on false positives (even though
  just like 0.01%).
- Fixed an SVSMODE #chan -qaohv bug that would cause the user to be able to readd the mode
  (#0001690) reported by auspice
- spamfilter.conf: added signature for LOI trojan.
- Added german translation of unreal32docs (doc/unreal32docs.de.html), translated
  by Stylus740 which will also maintain it.
- Patched TRE 0.6.6 to fix known crashbug (#0001684), testing is welcomed.
- Applied the above patch to the win32 TRE dll/lib files.
- Fixed a problem with vhost::swhois not being displayed remotely (#0001702) reported by 
  medice.
- Windows: Updated makefile/unrealinst.iss/zip.h to use zlib 1.2.1.
- Updated credits
- German doc updates (spelling+synch).
- Updated /credits a bit more
- Updated the /stats ? output to say Q is sqline and q is ban nick (#0001689) reported
  by Alzirr
- Made a note in example.conf about not using link::options::autoconnect for services
  (#0001674) suggested by fez
- Fixed a typo in /credits
- Fixed something if sptr->user->virthost was NULL (which is/should never be the case),
  just to be sure... (#0001724).
- Updated server<->server code for MODE so operoverride bug #0001704 and other
  feature requests can be fixed/added in the future (3.2.1).
- Fixed /who +m bug for opers, reported by Bugz (#0001715).
- Fixed halfop mode code to not check remote halfop modes (desynch danger).
- Force a TRE recompile if ./Config is re-run, due to timestamp fun if you were
  upgrading to CVS every time TRE was not recompiled even if you did make clean.
- Made ./unreal rehash (= kill -1 <pid>) also reread motd/rules/etc just as a
  normal /rehash does, reported by superh (#0001699).
- Various doc/text updates
- Added some release notes already.
- Fixed /rehash bug if an .so (or remote include?) failed to load properly,
  reported by fez (#0001736).
- doc/unreal32docs.html and help.conf updates (#0001734 + other stuff).
- spamfilter.conf: added signatures for Gaggle worm.
- Changed version to pre1
- Fixed SJOIN bug: it sometimes was setting too many modes at once.
- Minor sajoin/sapart ERR_NEEDMOREPARAMS tweak.
** internal pre1 release **
- Docs/help.conf tweak on /connect syntax (#0001755).
- German doc updates (from April 18) + gzline docs tweak.
- Fixed some remote includes issues and added a connect/transfer timeout, server should
  now no longer be frozen if the site is unreachable. Reported by Ron2K (#0001751).
- Changed version to 3.2 already
** internal pre2 release **
- Added temporary fix for include "http://www.blah.com/"; crashbug...although I doubt
  many people would use it. Reported by Angrywolf (#0001757).
- Some doc/release notes updates on win module support.
*** 3.2 release ***

[Unreal3.1.1-Darkshades]
- Fixed /userhost showing "unknown" as username for a lot of people
- Fixed ./update error
- Fixed a NO_FDLIST define problem in send.c and channel.c
- Added define PROPER_COREDUMP, will not launch s_segv when done and make
  proper coredumps
- Fixed the G:line bugs, i hope - moved tkl_sweep into a loopstruct
- Removed the ERR_NOTONCHANNEL message =P
- Made some memory cleanups on the command list (saved 268 bytes)
- More memory cleanups, changed aClient->refcnt to a signed char,
  aClient->hopcount to unsigned char
- Changed aChannel->mode.msgs & .per to unsigned short, and changed
  .kmode to unsigned char
- Changed aChannel->users to unsigned short (max 65536 users per channel)
  and FloodOpt->nmsg to an unsigned short
- Removed SUMMON totally
- Fixed another SJOIN problem, but not the exact one i was looking for
- Added IRCd bot (raw commands) and the IRC bot, webtv.c
  - Added WHOIS command (working) to IRCbot-
- Fixed a fun doublechar token problem (the AA unknown command)
- Removed _alot_ of unused variables
- Fixed *some* -Wall warnings (still alot left to fix)
- Fixed some more -Wall warnings
- ./update now checks when you specify wget if it exists, if not it tries lynx
- Cached MOTDs are now dynamically allocated (saves alot of memory)
- Made aClient->passwd dynamically allocated (saves 32bytes per user/server)
- Fixed a NOTICE crash bug, reported by EJ
- Removed a excessive va_end in send.c
- Fixed a bug when running the ircd with -h
- Readded /summon to return ERR_SUMMONDISABLED (required by RFC1459)
- Made /users return ERR_USERSDISABLED (required by RFC1459)
- Removed all utmp calls
- Fixed Something ... cant remember what ... oh yes, fixed if (sptr->passwd[0]) to if (sptr->passwd)
  it stopped the server crashing !
- Made Code revisions so that we can compile on Win32, and fixed some of sts's late nite 
  coding sessions(dbin)
- Fixed some REAL dumb find_server_quick bugs
- Fixed a wierd NOTICE bug
- Modified and fixed the NOTICE bug totally, with some waste of the nospoof
  system
- Fixed a bug where +K could be set when +i was not (reported by rapta)
- Made it so if you set -i on a channel that is +K it sets -iK
- Fixed whowas so it no longer reports away messages
- Made major changes to +I (may need debugging)
  - When you set +I while on a chan it sends a PART to the rest of the channel
  - When you set -I which on a chan it sends a JOIN to the rest of the channel
  - Net/TechAdmins now receive a JOIN/PART when you JOIN/PART a channel  - Net/TechAdmins can now see +I users in /names
- Fixed a typo in s_err.c reported by TRON
- Fixed more -Wall warnings
- Added #define LIST_SHOW_MODES to show channel modes in a /list (NOTE: only shows modes, not params)
- Fixed /mode # + bug reported by PhatNet/Mind
- Possible fixed the SJOIN kick bug (mode +Q), servers can now always kick
- Added NEW DNS resolver (Win32 Only atm)  ... use by defining NEWDNS
- FIXED "BUG" caused by NEWDNS *shrug*
- Fixed the passwd NICK problem
- Fixed the problem with NewDNS (ive always known about it but never known how it happens) [a pointer prob]
- Redhat 7 (broken string.h problem), ./Config
- Added SSL connections, open ports with P:ip:s:*:port to make them SSL
  ports, made after hq.alert.sk's implementation
- Added P:line flags C - client only, S - server only, J - java clients (replaces CONFROOM_JAVA_PORT)
- Fixed up a few various things
- Made SHOWCONNECTNOTICES work properly again, also with SSL
- Changed ./Config to detect SSL better, and generate certificates properly
- Removed some annoying logging in ssl.c
- Merged in changes from TEMPcvs branch
- Fixed a /UNSQLINE para problem, found by Joe
- #define SHOW_SECRET now allows all ircops to see +s channels in /whois.  If not defined, only net/tech admins can.
- Added #define CENSOR_QUIT, for WaveRide
- Fixed hashing bug that caused the server to crash on exit
- Made find_server_b64_or_real be a little faster, possible fixing bug
- Made /stats s checking check for sanity or insanity (ignore them for 0
  numerics)
- Fixed SJOIN (mp2parv) bug, that caused insane desynchs
- Changed Cannot find server message to be to sendto_realops
- Fixed a warning in CENSOR_QUIT
- Fixed the G:Line user wrongly matching (ip-alike addys didnt check user)
- Added protoctl SJB64, which adds B64-9 timestamps to many timestamping
  operations
- Added ircsprintf %B (base64-9^10) with ! as prefix, and %b (no prefix)
- Fixed a few places where for some reason sprintf() was used rather than ircsprintf()
- Tokenized ADCHAT, TECHAT, NACHAT, SWHOIS, and SVSKILL
- Fixed a bug in opermode that would make it display a notice on invalid modes
- Fixed a bug where the Found your hostname (cached) message was messed up
- Fixed a memory leak in the new password code
- Fixed a sptr->passwd bug
- Removed the unnecessary param from IsULine() it is now just IsULine(sptr)
- ircsprintf() is now used everywhere
- Fixed the SJB64 bugs that misplaced users
- Removed sendto_helpops and replaced it with sendto_umode
- Added is_chanownprotop() checks if +q +a or +o with 1 loop
- Added chmode +N (no nick changes) (opers, ulines, +o +q or +a can override)
- Added some fixes on the SJB64 crashing bug, and added tokenization in 
  channel messsages (yahooooo!)
- Fixed the /list bug, reported by many people
- Fixed a linking bug (where did that come from)
- Fixed bug where duplicate numerics could occur
- Fixed the hashing bug (thank you ROXnet ...)
- Fixed a wierd channel message bug ||
- Fixed a bug where non-NS servers would crash when linking
- Added TS2ts (supporting the SJB64 stuff), and fixed the !0 timestamp bug
- Fixed the /list only showing 64 channels bug! Also sped /list up in the process
- Probably fixed the hash bug, again.
- Possible fixed some b64 bugs
- Autodetects /usr/sbin/openssl now, thanks trinity
- Tokenized PING and PONG
- Fixes a missing : in SJOIN
- Possible fixed a internal server list bug
- When IRC WebTV bot cannot find a command, it sends it to parse() instead,
  thanks [Real]
- Added burst.c in extras/
- Moved lopt and whowas to anUser (saves 8 bytes for every server)
- Removed aClient->history, not used (saves 4 bytes for every user/server)
- Fixed compile error with SSL
- Fixed a /list and /quit bug
- Fixed the masskill bug with replacing "Server Exists" code.. i removed it
  accidentialy last time
- Added /botserv /bs command, patch by ATHnet.de
- /who's now show +i users for opers in channels, idea by  Strider@ChatCircuit
- Fixed NO_OPEROVERRIDE bug reported by otherguy
- #define STATSWRITING will make ircd write ircd.stats every 4 seconds,
  idea/sortof by WaveRide
    Format of ircd.stats:
       <global users>
       <global invisible users>
       <global servers>
       <irc operators>
       <unknown connections>
       <local clients>
       <local servers>
       <local max clients>
       <global max clients>
- Fixed +d (deaf) so it works again
- Removed some leftovers from the &channel code (which fixed a minor bug as well)
- Fixed a SJOIN3<->services problem
- Fixed a typo where it still said +I instead of +V in an error message
- Fixed the "Bad file descriptor" bug in SSL. This bugfix may be a bit risky
  as it is manipulating BIO fds. The reason openssl freaked at this, was
  that when a fd is closed, we change fds from 4 to 3 etc, in other words,
  we renumber fds. SSL didn't know this and if you would call SSL_set_fd it
  would close the connection/crash. Added SSL_change_fd() to change the FD
  directly through BIO_set_fd. 
- Fixed the masskill bug, hopefully. Was a delimiter/number array bug in
  find_server_b64_or_real, causing negative base64 to be accepted (bad).
  value 1-256 will never be able to be in two letters (a server name)
- Fixed \r\n bug, hopefully
- made SSL use same cert client/server
- Fixed help.c bug reported by Curt|s
- Different fixes, unreal.tspre.org -> unrealircd.com
- Fixed-fixed-fixed the \r\n bug and removed some useless cpu wasting code
- Removed remapping fds, and did a severe select() speedup, suggested by
  Demiurgus. Should speed CPU a lot
- Updated some messages
- Fixed-fixed-fixed the U:line branching thing made by codemastr
- Fixed a G: line-turn-into Z:line problem, reported by eYe-Man
- Added SJOIN (SJ3 only) instead of JOIN/MODE in /join and discovered a bug in 
  SJOIN code, that if the line doesnt have a " " appeneded, it wont take the
  last users or first for that sake. Hopefully patched SJ3 code for it
- Added OPT target OPT_SJB64 and OPT_NOT_SJB64
- Made SSL server<->server work, using __blocking__ sockets (this is only
  in connect moment thou) -stskeeps
- Removed 1.0 msg/s when not in HTM
- Fixed cutoff server infos in synch
- Added so /gline and /shun accepts time periods in 1d2h3s etc. a recode of
  some potvin stuff
- Added so blocking is only effective when SSL_connect()'ing
- Fixed a couple of SJOIN/Link problems detected by Curt|s
- Changed some stuff with SSL, you may want to seperate server.pem into
  server.key.pem and server.cert.pem (or "rm Makefile" and "./Config")
- Fixed a couple of SJOIN/Link problems detected by Curt|s
- Made /stats C show SSL/Zip flags
- Fixed the Stskeeps "mass G:line on /rehash" (tm) bug
- Removed last point of confusion in ALN/NS
- Removed CRYPTOIRCD (replaced by SSL)
- Added support for some more SJB64 stuff
- Added some more support for some even more SJB64 stuff
- Added some network files and even more network files
- Fixed some copyright stuff in ssl.c
- Fixed a /map problem
- Updated doc/conf.doc and doc/example.conf
- Fixed a bug where /map showed U:lines while HIDE_ULINES was set
- Removed "on network" in /whois oper
- Added code to makenet to stop fake submissions
- Fixed some /whois channels code, which may break +I /whois
- Fixed overflow in SJOIN
- Added SMO *, all users
- If a +r user is /who'ed, it shows a "r" in flags field. Suggested by
  Mirar.
- Fixed a typo in ssl.c
- Added SICI information, Donation information, fixed a ./Config problem
  overwriting certs ..
- Added hatblade's files
- Added some credits
- Fixed a real bad  /whois bug, reported by BiGi
- Fixed a problem with /sajoin .. atleast possible
- Added infofield in /stats L for clients/listeners
- Fixed a blocking socket thing
- Fixed up /stats L bug
- Changed CONNECTTIMEOUT to 30sec
- Changed some _more_ credits
- Fixed compile error found by Headbang
- #define CHINESE_NICK will make you able to use chinese nicks
  thanks to RexHsu and Aim
- Fixed up CHINESE_NICK and JAPANESE_NICK, suggested by Aim, see
  include/config.h
- Config change in SSL.h detection part
- SSL error change to sendto_umode(UMODE_JUNK)
- Fixed a hash error, topic problem

[fixes]
- Fixed a +d bug (it didnt send ` prefixes)
- Fixed a SJOIN bug, i think, thanks to Web
- Fixed a chinese nick thing, thanks to miCro and RexHsu
- Fixed a typo in config.h
- Fixed a bug in sendto_channel_prefix_tok reported by Strider@ChatCircuit
- Fixed P:line bug, caused by codemastr(tm) coding, (masskills), reported by
  sidv@sid-kitty-land.org
- Some few fixes from CodeM and Barubary:
  - Fixed /whois to show users for opers when not in the channel. 
  - Fixed /whois to allow only global eyes opers to see user modes.  
  - Fixed /whois to not show idle times of global opers to anyone except
    another global oper or services.
  - Fixed /who to show users for opers when not in the channel. 
- Fixed restart bug, reported by RaYmAn
- Fix-fixed " Fixed /whois to not show idle times of global opers to
     anyone" patch
- Fixed a recently found exploit involving reverse DNS (fix from bahamut)
- Made more openssl binary detection using 'which'
- Added message when trying to join a +z channel
- New segmentation fault code by Kanzen_Greiver

*** Unreal3.1 *** (final)       
- Moved REMOVE_ADVERTISE a little
- Fixed bug where you could /mode #test +L #test (link a channel to
  itself)                       
- Fixed a bug where a +L channel didn't have to be valid ex /mode #test
  +L blah would work, dangerous if 0 is used
- Fixed /map showing U:lines even if HIDE_ULINES was set oops :)
- Fixed a bug where opers couldn't walk through +l
- Fixed a bug where /mode #test +f *N:N was recognized the same as +f N:N
  (if *2:3 was set then /mode #chan +f 2:3 it wouldn't set, thought it was the same)
- Removed src/cio_init.c src/cio_main.c src/win32.c src/win32.rc as we don't
  use that anymore              
- Added ircsprintf() (ircsprintf.c and ircsprintf.h)
- Converted to use ircsprintf   
- Now using sprintf_irc from ircu, as %li would screw up the hybrid variant
- Some fdlist updates from bahamut
- Header change                 
- Some more Header change       
- Added agent.c for IRCd Agents (remote control etc)
- Fixed up some make misalignments
- Fixed +I /names
- Removed TESTNET defines
- Added poll() engine from bahamut (hard!)
- Made /vhost send failed login's to +e
- Made /stats V/R/F use raw rather than NOTICE
- Fixed some poll() engine problems
- Some more problems with poll()
- Removed the \2's from the is a Coder msg, whywere they there, no one
  knows (codemastr) Because i was the only one using it =P (Stskeeps)
- Fixed /names problem..
- Made /mode <nick> use get_mode_str() to list the modes
- Made /lusers info be pre-calculated :) Saves hell of a lot CPU time
- Made /stats z/Z oper only
- Fixed SJOIN bug only totally fixed when all servers upgraded
- Moving old 3.0 stuff to Changes.old
- Re-added README.ALPHA
- Fixed some more SJOIN bugs
- Fixed NICKv2 bugs with non NICKv2
- Fixed up /info, there will be a better layout for this
- Fixed up some poll() engine bugs (i hope)
- Start of telnet proxy scan code
- Took telnet proxy scan code out again =/ It really fux0red up
- Added networks/treklink.network
- Added options to /HTM, ON/OFF TO (what load do we auto start at) NOISY/QUIET (toggle whether HTM should
  announce when it starts)
- Fixed a little bug where /part didn't show the correct channel case
- Made unresolved host connections go faster, idea from PTLink IRCd v3.5.4 great job :)
- Removed support for & and + channels (i hope) and made m_message more
  handy and support for /notice +#channel, %#channel etc etc
- Topic fix?
- Incorperated the bahamut m_list and send_list, it's faster and smaller :P
- When /HTM is active /list is disabled to non-opers
- OperMOTD is now loaded into memory (faster, saves memory, and CPU)
- Added /rehash -omotd to rehash the OperMOTD
- Added unrealircd.conf option for SETUID and SETGID if ircd started as root.  And you can turn that off/on
   by defining/undefining BIG_SECURITY_HOLE in config.h
- Fixed small bug in ircd.c and dynconf.c (not using #ifndef BIG_SECURITY_HOLE)
- Removed & and + channels for sure..
- All MOTDs, RULES are read into memory (including T:lines)
- Added /rehash -bmotd (BotMOTD) /rehash -motd/-rules (MOTDs/RULES)
- Fixed memory leak in dynconf.c, allocated 2048 on each /rehash -dynconf
- Fixed _serious_ memory leak in cloak.c, abused 128 bytes every time
  someone went +x 
- Alphabeticalized making..
- flush_connections more better
- Fixed calls to check_registered*, more CPU spare:)
- Fixed a bug in /tsctl svstime
- Fixed a bug in the cached MOTDs
- Added support for remote /htm
- Even more tokensation
- Removed IRCII_KLUDGE
- Fixed /lusers wrong reply
- Removed V28PlusOnly define
- Fixed a bug in channel_modes()
- More and more and more tokenzation >:)
- Fixed a bug in m_user
- Removed have_ops() and is_deopped(), they weren't used
- Reorganized can_send() to make it faster
- More tokenzation >:)
- Fixed ircsprintf() %lu error when %lu == 0
- Added devel/ directory, put ideas/specifications in here
- Added devel/new.plines to describe new upcoming P:lines
- Added NO_IDENT_CHECKING in config.h
- Fixed bugs in get_version() and also made it a bit faster
- Fixed RPL_MYINFO problem with UnrealIRCd/32 version and ircII
  misunderstanding it, prob other clients too
- Updated msg.h hashtable to get most used commands more close
- Removed some unused defines in msg.h
- Removed dusers (not in use)
- m_user stuff
- Made use of : 's in between ircd.conf field working, using this format:
  A:"Test test:Moo":Moo:moo
- Fixed some /lusers miscalculations
- Added INET6 patch, now for making it work :P
- More INET6 patching (not working atm)
- INET6 compiles now, works? :P
- Fixed some WebTV stuff
- Made the m_message routine not do a user hash lookup if it starts with #
- Removed some fields in structures like aClient etc that was unused
- Removed Client->iown and the OWNLOGON code
- Removed Channel->blist
- Removed heaps of unused variables in functions
- Fixed THE G:line bug, missing parameter
- Hopefully fixed some calculation bugs
- +F bugfix
- In TKL a gline shows reason in quit message now
- Fixed the SVSMOTD OPERMOTD and BOTMOTD bug, suggest parantheses problem
- In K:Line it shows reason in quit message now, not sure about AKILL
- Experimental NOTE in register_user added
- Implemented hybrid scache.c, created by orabidoo and Dianora
- Fixed /connect scache problem, and actually fixed the OPERMOTD bug
- The hopefully last calculation bug..
- Made bans and exceptions actually sync *ducks*, done in old fashion MODE
  manner, better than making BS (bansync) or incorporating it in SJOIN
- Made /opermotd oper-only, bug reported by Bagge@ROXnet
- Made TOPICs be dynamically allocated - saves heaps memory
- Added hybrids/+cs'es /whowas system. Improved so it doesn't use static
  character arrays, and uses dynamically allocated strings instead 
- Added UMODE2 PROTOCTL and command, when a usermode change it uses :nick
  UMODE2 +-umodes. token = '|'
- Made CONNECTFAST default, will ensure faster connecting
- Updated /helpop to list more commands and new modes
- the 1-message-per-2-sec not applied to opers
- Topic fix with dynamic allocation
- 1-message-per-2-sec now 1-message-per-1.5-sec
- Removed TS fix notice
- Removed User %s tries to become server notice
- Made MAXCHANNELSPERUSER an unrealircd.conf option
- Changed unrealircd.conf version to 1.2
- Credit changes..
- Uses dgets() from hybrid now, should be a minor CPU fix
- Moved WebTV support, and +I disabling to an unrealircd.conf option
- Updated doc/conf.doc, removed references to DALnet, and fixed typos
- Moved doc/Elite.Changes to doc/History/Elite.Changes, away away away with
  that one
- Tokenized SQLINE
- Recoded dynconf, validates data too now
- Fixed a /list bug that crashed the server
- Fixed a minor bug in the new dynconf
- Fixed a bug in vhost.conf and dccdeny.conf where if the line was not valid it would crash, now it just
  ignores that line
- Added comment support to vhost.conf, dccdeny.conf, and chrestrict.conf (makes loading faster)
- Fixed one of those "code, what the fuck were you smoking" bugs in m_svsmode etc
  (what = MODE_DEL - eh?)
- Added AUTO_JOIN_CHANS to unrealircd.conf to force a user to join 1 or
  more channels on connect, read networks/unrealircd.conf for more info
- Added networks/axenet.network
- Possible change in the -1 operator bug
- /info changes- Unreal3.1-beta1 release
- Added a bunch of networks
- Updated doc/conf.doc
- Updated networks/networks.ndx cause someone *cough* sts *cough* forgot
- Updated m_svso to -H the user
- Added Solaris2.5 support and cleaned up Solaris2.x support
- A little /list fix
- Changed the unrealircd.conf version to 1.3
- Fixed a bug in the AUTO_JOIN_CHANS
- Added OPER_AUTO_JOIN_CHANS to unrealircd.conf, same as AUTO_JOIN_CHANS
  but is called on /oper
- Readded /ns, /cs, etc but this time they point to /nickserv, /chanserv,
  etc
- Removed IRCd Agents and made it so all opers can join unlimited channels
- Updated src/chkconf.c to recognize new lines
- Added "/mode #chan qa" support to send a list of +q users / +a users in a chan
- Fixed "/mode #chan qa" ... see channel.c m_join for the problem ... sts you owe me a tenner =P ..
- Removed Reg1, Reg2 etc etc and register. Modern compilers optimize better
  that way
- Sidenote: /msg nick@ bug can easily be caused in m_message
- Unreal3.1-beta1(build2)
- Disabled ID_* stuff but is still there, saves memory
- Made user->virthost a dynamic string now
- Fixed a virthost bug again, and starting to wreck in meow's badword patch,
  gonna be a swearword filter and new version of REMOVE_ADVERTISING
- Added meow's badword patch
- Moved the badword patch chmode to +G (G Rated Channel) cause thats what some other ircd's use so lets try
  and keep cross compatibility :P
- Added networks/interturk.network
- Fixed a bug in /names thanks to lucas for reporting it and fixing it :)
- Changed the badword umode to +G also
- Removed some unused variables from dynconf.h
- Cleaned up the dynconf and network file code to use less memory
- Fixed the kill bug in NICKv2, caused by codemastr(TM) code
  (was calling m_join before sending NICK info to other servers) 
  - SO NO IT WAS NOT MY FAULT *slap* (Stskeeps) -
- Did an attempt on fixing the /msg nick@ bug
- /stats s in DEVELOP mode will show cached scache hosts
- Added src/aln.c, for the new ALN system, read doc/aln.doc
- Minor ALN fix
- Introduced ALN system, look at send.c::sendto_serv_butone_nickcmd, a
  little better, we can scrape some functions now
- Some more ALN stuff, the server now understands |<aln> prefixes,
  find_client too
- Added the "IRC Operators Message Of The Day" to /opermotd
- Made Y:1 class in makeconf max 250 (we might get some complaints here, 
  but people can change to their limit, but we have to make it this low
  because else the program rj had can flood/crash the server
- Fixed a ALN problem with |nick persons getting killed off
- Removed an OLD EliteIRCD reference in ./Config, thanks to Linus
- Moved the ALN prefix to @ instead of |, as | would conflict with 
  clients
- Fixed ALN problem with it masskilling everyone :P
- ** RELEASE OF UNREAL3.1-BETA2 **
- Small Linux-ALPHA fix
- A small vsendto_prefix bugfix(?)
- Added /stats e to list e:lines
- Fixed a small /list problem
- Added #define USE_LOCALE, uses locale stuff in *nix versions
  to make better toupper() tolower(). might help some chinese nick
  things too
- Fixed a few minor NOSPOOF things
- Changed ircsprintf() to work with %lu with 0-5
- Added unreal-test.network, for the upcoming Unreal TESTnet (for beta
  testers and developers only)
- Using MyFree/MyMalloc now instead of MyRealloc.. lets hope it fixes
  something
- Fixed the virthost (possible), need extensive testing
- Possible fix of some server_estab problems
- Added networks/cc2.network, networks/kissland.network, and networks/digital-irc.network
- Changed unrealircd.conf version to 1.5
- Added HOST_TIMEOUT and HOST_RETRIES to unrealircd.conf to customize host resolving times
- Added Freelinks garbage collector (by Stskeeps :)), saves a lot of memory. 
  Check include/config.h on configuring it (default values should do)
- Fixed a /chghost and /chgident buffer overflow problem reported
  by Gravitron.
- Added Solaris2.6 and 2.7 support
- Added /dccdeny to add a temporary dccdeny, erased on /rehash -dccdeny
- Added /undccdeny, if the EXACT file you type is found it is removed, else it uses wildcards to search
- Made it so you can't add duplicate dccdenys
- IRCstats.operators count fix. It MUST work now.
- Fixed a bug in dccdeny
- Added a logo to the IRCd startup and made it work a little bit better
- Made version.c update when .c.SH is changed
- Made sendto_serv_butone_token work with ALN prefixes too
- Fixed an SQLINE bug
- SVSFLINEs now sync when a server links
- SVSFLINEs are now tokenized
- Fixed the /nick othernick thing failing (ALN fault, lets hope it doesnt
  break other stuff)
- Implemented DOUGH_HASH from hybrid IRCd
- Ran Unreal thru another memory leak check
  - Fixed a whowas.c memory leak
- Added /rehash -garbage which will clean up freelinks
- NOTE on PTlinks so called make yourself oper bug.. cannot see how it 
  can trigger at all.
- Fixed up some E:line code
- Added n:lines banning based on real names (E:lines override n:lines)
- Fixed a minor bug in m_message
- Fixed up and ALNized SERVER commands like @E8 SERVER name  
  for instance.. sts tends to severely drool over this
- Hopefully fixed the /msg unknownnick missing ERR_NOSUCHNICK bug
- Fixed the cannot change to lowercase nick thing, and made
  find_server() call hash_find_server instead of hash_find_client
  *slaps* to stskeeps :P
- Fixed a bug caused by sts's '/msg unknownnick missing ERR_NOSUCHNICK bug' fix :)
- n:lines now checked on /setname (not checked for opers)
- Fixed a bug caused by a line of code I forgot to remove ;P
- Fixed the pesky \r bug caused by windows editors. Unreal ignores \r now
  in ircd.conf
- For any sake, included the PTlink bugfix.., had some reports from
  zurna.net of it
- Fixed an n:line bug(nice bug really? :P)
- Removed behavoir of co-admins able to set +q in #channels
  (i think this was cos i was co-admin long time ago -sts)
- Made IRCops able to talk through +b, suggested by The_Cat
- Added /chgname nick :new realname and /svsname as an alias for it
  (suggested by ^Tux^)
- Fixed Sts's favorite mistake
- Indented Unreal .c files
- PROTOCTL's can be said more than once now
- Fixed a /dccdeny - /undccdeny bug reported by auspice
- Fixed the negative oper count bug. Was caused by codemastr-coding(TM)
- Removed the old non-caching motd functions
- Some IRCstats.unknown fixes..
- Took out compatibility for "Pyramid OS", is ancient and let them
  fix their fscked up os
- If a user (unknown connection) floods 2K (2048 byte) the user is
  disconnected and tkl z:lined for 600 secs (10 mins). Idea by GZ 
  from StarChat IRCd, code recoded by Stskeeps
- A ircd.conf Y:Line class is not added if it contains max clients
  > (MAXCONNECTIONS - 15)
- Flood activates only at unknown connections and only at 4K now ..
- Fixed a bug in m_setname with n:lines
- Added n:line support to m_chgname
- n:lines are now checked after a rehash
- Did a bugfix on ALN and non-ALN servers
- Fixed a bug with /chgname with incorrect parameters to other servers
- "Fixed" the /stats u bug?
- Fixed +f not working (?)
- Made the Own-protection just reduce the class maxli instead of bitching..
- Did a dirty hack on ALN problem with colliding hash (will deny linking in
  wrong servers)
- Fixed /stats C not showing N:lines, reported by auspice
- Fixed codemastr (possible) fucked up the shell ircd script with
  overwriting it ...
- Created /shun, /gline style. /shun +user@host time reason /shun -user@host
  will extend it so you can /shun +nick later
- A little anti-0 fix in channel.c
- Made MODE_X, MODE_I etc show mode change to user
- Added channel mode +C to disallow channel CTCPs, /me (CTCP ACTION) is still allowed
- Fixed a bunch of +H bugs
- Fixed a bug where the channel was still shown in /who for +I users
- First part of ZIP_LINKS
- Fixed a typo in ./newnet
- Made /close reset IRCstats.unknown ..
- Made SVSO (ofcourse) IRCstats.operators--;
- Another IRCstats.unknown fix. Hope this works (hacked from undernet code)
- NETINFO protocol 0 is accepted as valid protocool (for services etc)
- /stats s is now avail only for opers in mainstream
- Took out "nick did a /userhost on you"
- Reduced hashtable size
- Took out sequent/dynix support
- Fixed a bug that prolly was fixed by Potvin, but was "not fixed correctly"
- Fixed a crash problem in register_user and most likely fixed the "strange
  vhost" thing, (was a dumb bug, mising ircsprintf)
- Fixed the *** NickServ sets mode +creep SVS2MODE bug..
- sendto_serv_butone_token_opt ()..
- Small testing stuff
- In ./Config it runs a quick test to see how many socket()s you can do
- Fixed the double +cF notice on local connections exiting, ugly hack
- Removed the last traces of unix sockets, flag 0x10 free now
- Made all ircops able to use +F (totally this time)
- /quote close do not show realhost of caller anymore
- /shun accepts nick in add mode now (adds *@host)
- Allowed /shunned users to use /pong now
- Fixed (by DrBin) Shun and Gline bug, where they replaced eachothers ->type
  .... Learn that (= != ==) /me looks at Sts
- You can now specify 0 as the time for any TKL (ex Glines, Shun) for it to be perm
- Fixed a +L bug, (3.1 only) where any op could set +L
- Added channel mode +u, "Auditorium". Makes /names and /who #channel only
  show @'s
- Added config.h setting to disable oper overrides, NO_OPEROVERRIDE
- Added Debug support to win32 makefile ... compile with syntax
  NMAKE -f makefile.win32 DEBUG=1
  inorder to have debug support ... leave the DEBUG=1 out for normal builds
- Fixed ircsprintf.h ... we do want it to compile in debug mode yes ?
- Made /addline write to correct place when you use -f
- Made /zline not memory corrupt/crash, bad df bug
- Fixed a counting bug with unknown connections, very hopefully
- Fixed /htm giving wrong response when /htm to 1
- Fixed /shun showing "1970" to permanently shunned users
- Fixed ./Config showing freebsd 3.0 in freebsd 4
- Made so badwords.*.conf accepts # comments
- Added some default default badwords.message.conf and badwords.channel.conf
- Made so auditorium mode shows users to @'s 
- Fixed a bug where /chgident would overflow into the *real* host if it where greater than USERLEN
  because _someone_ aka sts told it to check against HOSTLEN rather than USERLEN... reported by wshs
- Fixed a bug in badwords not loading words correctly, and upped word limit
  to 50
- Small fix with ./Config showing incorrect path of stddef.h
- Made operkick be part of NO_OPEROVERRIDE
- Made admins unable to be shunned
- Made some socket errors which normally only showed up in DEBUGMODE, show
  up in ircd.log as well
- Fixed a wrongly outputted message (in hash collision detect)
- Removed aHush, not in use
- Removed DISALLOW_MIXED_CASE and IGNORE_FIRST_CHAR, waste of space
- Made IDLE_FROM_MSG stock define
- Made IRCII_KLUDGE disappear :P
- Fixed SENDQ_ALWAYS to be mainstream define (as always)
- Removed s_gline, not in use, removed some modeless channel checks (not needed), removed an old zombie
  code, and removed a line from aHush that was missed
- Added networks/seveneagle.network
- /msg irc <command> now works whether or not WEBTV_SUPPORT is on
- Moved /mode #channel ^ and ListBits() to #ifdef DEVELOP
- Made it so servers behind a U:lined server (ex Juped Server) are U:lined too, helpful if HIDE_ULINES is
  on (from bahamut)
- Added find_uline (from bahamut) for the new U:line code
- Modified /map to work with the new U:line code
- Redid s_err.c to be ALOT faster, based on bahamut's s_err.c (ALOT of
  work)
- Fixed last R_LINE stuff (check_time_interval)
- Fixed /setname desynch
- Removed IsService(), and some wierd stuff
- Broken INETD support removed
- Removed some odd Clone stuff(?)
- Added Blowfish encryption ability (SetSecure()), will extend to more
  better encryption
- Fixed a typo in /stats z
- Some more crypto stuff, will work on the new engine tommorow
- You can now encrypt the I:line passwords using mkpasswd (must have CRYPT_ILINE_PASSWORD defined)
- Editted Config to ask if you want encrypted I:line passwords
- Made it so you can encrypt restart/die passwords (same as I:line passwords)
- Editted Config to ask about encrypted restart/die passwords
- Made it so you can *view* a channel topic using /topic #channel without being a member
- Removed , support from /topic (not needed)
- Removed count_channels (not in use)
- Made a major is_banned speed up
- Redid K:line and n:line checking to be alot faster
- Fixed crypto stuff 100% :))
- Added CRYPTOIRCd ('r') to version string
- Added some more crypto stuff
    - /crypto <algoritm> <keyfile laying in keys/> <parameters>
- Fixed a ->passwd bug caused by codemastr..
- Added fclose() calls to the vhost, dccdeny, and chrestrict confs
- Some V:line stuff (added VL protoctl, and parsing of the SERVER command for the proto and flags)
- Fixed so that in +c it shows if a user is connected securely
- Backported the passwd stuff, not needed.
- Fixed a crash problem on /quit or /squit
- Fixed some aligning in the VL PROTOCTL
- Fixed some fucked up passwd stuff again ..
- Fixed a little Client Protoctl problem
- Fixed a crypto problem (forgot an #ifdef bad sts!)
- Fully added V:lines (doesn't really do much till the next version, since old versions don't support it)
- Added /stats v to list V:lines (/stats V still does vhost.conf)
- Added OpenBSD 2.x support, thanks to noriko for donating the development shell
- Added so stuff like Lost connection to, (report_error) only goes to realops
- Added some more descriptive error messages
- Added doc/crypto.doc describing the encrypted irc protocol
- Fixed a sendto_serv_butone_token problem
- Removed any trace of MD5, we use random() for nospoof now, this fixed a
  license problem too
- Removed NOSPOOF_SEED01 and 02
- Added VHP protoctl, (not in use in the synch). This makes virthost field
  in NICKv2 use the real virthost even if its +t. (Thanks to SL7)
- Added support for the CR Java Chat auto join feature
- Fixed a msg.h location problem ..
- Added secure connections and openssl tracing to Config
- Added regex portablity and checks in Config
- Added a #define capability to config.h (DISABLE_USERMOD),
  disables /sethost, /setident, /chgname, /chghost, /chgident
- Fixed a /rehash -garbage bug reported by Curt|s
- Added networks/makenet (generates a network configuration file)
- Added networks/staticedge.network
- Fixed some host revealing nick collision stuff
- Tokenized nick->nick PRIVMSG and NOTICE
- Made it so you can remove a protoctl by putting a - in front
- Fixed a bug in summon
- Added protection against webproxies
- Fixed TKL?
- Added SJ3, removed the old
- SJ3 bugfix, and another
- Hopefully a res.c fix.
- Fixed a +I bug
- Fixed a more SJ3 bug
- Updated networks/networks.ndx (bad sts!)
- Added networks/linuxsquare.network
- Added networks/chatstation.network
[recall]
- Fixed the pesky hostname bug
- Fixed a NO_OPEROVERDIE bug reported by Taz
- Fixed a +L bug
- Fixed a typo in Config
- SJ3 fixes. Let's hope this works (f*cken hell..)
- Fixed a V:line bug
- Added /infoserv (you can stop bugging us now skold ;P)
- Removed ALN, and the ALN system.
- Added base64 encoding instead, for ALN v2 (NS)
- Removed a SJ3 debug msg
- Removed SVSMODE +l support, and fixed servicestamp and +d support
- Changed to ircu/hybrid6/unreal mix of numeric 005
- Fixed a SJ3 Fake Direction loopbug (kills on nick collisions)
- SJ3 fixes, loop fix
- Added NS, new generation ALN.
- Added llthangel's whoisfix.patch, Makes sure +hv users show up as
  %#channel instead of +#channel. Bug report by ^Fanta.
- Changed find_server_quick to work with masks too ..
- Removed UPING UDP socket. Only resfd opens a udp fd now
- Small memory cleanup
- NS introduction in sendto_serv_butone_token
- Fixed Q:lined nick NickServ from <unregistered> on Nickname Server message
- Fixed a problem in synch using acptr->name as info line
- Introduced NS in SQLINE..
- Fixed a problem in SVS2MODE not displaying mode changes, and well known
  why
- Recoded SVSNOOP, but the IRCd doesn't get it at all??
- added llthangel to credits
- Changed channel.c so when you kick someone as halfop it doesn't show as an
  OperKick (unless you kick an op) (reported by ^Fanta, patch by llthangel)
(rc2)
- Fixed SVS2MODE bug with illegal modes
- Fixed /notice @%+ bug, where it didnt work at all
- Fixed a small chmode +u bug
- Added sendto_chanops_butone because of codemastr's laziness
- Fixed a few +u bugs 
- Fixed a +I bug (yes another one)
- Changed channel.c so that when an opped non +q/+a Oper kicks a user who
  is +q/+a it invokes an OperKick (patch by llthangel)
- Fixed the +lL (+Ll) bug, will first be fixed 100% when all is 3.1
- Possible fixed the lopts bug
- Fixed a egcs problem in Config, the strtok bug
- Fixed the 'ulimit core size failed' bug (now checks whether it should
  set the core size to unlimited in ./Config
- Changed s_user.c so that Opers will see +s channels in /whois
  (patch by llthangel)
- +u now lists +a and +q people, and sends JOINs/PARTs to +a and +q people
- Fixed a /mode (umode) typo where it said no such channel rather than no such nick,
  reported by llthangel
- Disabled anything with time in /list options temporary, causes bugs
- Fixed a little /chghost bug
- Fixed a SJ3 bug with ban syncing to SJ2 servers
- Fixed some cloak bugs(???)
- Made it so you can /knock without a reason, and a few /knock cleanups
- Made it so if the server name specified in the M:line does not contain a "."
  the ircd logs it to ircd.log and dies
- Updated ./ircd to also say to look at ircd.log
- Fixed a SQLINE synch bug
- Added command line option -F to prevent the ircd to fork out
- Fixed the f*cken TKL bug
- Fixed a netsplit bug
- Changed some find_server(name, NULL) to find_server_quick to speed up
  lookup of servers
- Made find_server_quick a prototype, and made some work more quicker as
  well
- Removed the : in :nick NICK newnick :timestamp
- Added script ./update to help update, uses pull technology (wget, cvs)
- Added script ./Setup which makes the user forced through Unreal.nfo, FAQ,
  Config, and all the things we want them to read/do to compile the IRCd
- Updated PREFIX Client Protoctl
- Added ^MrMike^'s command list, this one will be updated
- Removed ID_CVS, hopefully fixing some bastard stuff
- Fixed a last minute SJOIN bug
[ last fixes ]
- Re-added res_comp.c and win32.c and res_mkquery.c, which was damaged by
  the ID_CVS remove
- Fixed a SHOWCONNECTINFO bug
- Fixed a MODE_STRIPWORDS bug
- Fixed a PART bug
- Fixed a STRIPBADWORDS bug
- Fixed a BotMOTD bug
- Added Dianora's /userhost
- Recoded /links using NS
- Recoded /map a bit using NS, and added usercounts to Server struct
- Some crazy time_t -> TS stuff, will save us some time in 2038
- Fixed the "/mode #blah +Cplkf 1 moo 5:5" ( mode/#blah [+pClkf 1moo 5:5] 
  problem
- Hopefully fixed the +x problem
- Fixed a bug with mkpasswd on OpenBSD
- Added desynch +e warning, and updated ./update enough ...
- Updated update to work better, and that you can use lynx instead of wget
- Added #undef SHUN_NOTICES, to add notices for users who are shunned
- Fixed bug with U:Lines should be able to privmsg/notice and recieve
  badwords :P, does not work in channels
- Removed the old GLINE system, TKL is now standard.
- Added INV_TRACK define, we want people testing this.
- Fixed the -1 usercount bug, found by codemastr, fixed by Stskeeps
- Fixed a +h bug reported by Dukemaster
- Added IRIX support (does it work?)
- Fixed crypter so it actually functions (Makefile now sets mode 700) and
  it encrypts X and N lines too.
- Fixed empty mode sends in register_user, reported by Bagge
- Added some portability stuff
- Fixed some empty-line/missing parameter stuff in dccdeny, vhost, 
  and dynconf, chrestrict
- Made vhost strip too long vhosts
- Removed INV_TRACK
- Fixed a typo in /vhost
- Fixed some problems/typos/notlookingsogood (TM) bugs, in the tkl code
- Fixed ban merging/similar bug in SJOIN
- Made /kick for opers only be possible for netadmin/techadmin
- Fixed /server so it doesnt support SERVER name :info anymore..



*** Unreal3.0-Morrigan(fix) ***
* NOTE: If your system clock is wrong you will have problems with TOPICs
  being set on all servers. That is because TOPICs which are _new_ are 
  taken instead of old
- Fixed +f not banning when * is specified
- Fixed +q (chan owners) not being able to set +L (partially fixed)
- Fixed /tsctl segfaulting the server
- Fixed the killing bug. The cause was that when m_mode was called in the
  NICKv2 parsing routine, it sent out a :nick MODE :+x which was an unknown 
  nick, and the NICK was being sent just after, causing it to kill the user
  (was a _huge_ bastard to find)
- If someone changes their nick to irc and WebTV is enabled, problems
  occur FIX: deny change to that in m_nick (bug fixed)
- Added lost unrealircd.bmp.gz file
- Removed the old Elite host masking code, wasn't even in use

*** Unreal3.0-Morrigan ***
- Added the new GUI main coded by DrBin, first coding by {X}
- Added v64net.network
- Added 972-scripterz.network
- Made NO_FDLIST compilation work as well
- Fixed DCCDENY bug (p->mask, p->mask) (*slaps sts*)
- +F not flood off if netsplit happens
- Made TODO, made "Unable to write tunefile" show an error if *nix
- Added stormdancing.network
- send.c sendto_realops problem solved
- Fixed a segfaulting bug in /tsctl reported by x-wartech
- Fixed segfaulting bug with -oh bounce stuff in channel.c reported by Dana
- Fixed +q bug reported by several people, inc DrBin
- Added networks/fireirc.network
- Fixed +f * option not banning correctly
- Fixed fdlist on win32 problem
- Added /HTM for high traffic mode status (partially added)
- Added networks/digitalirc.network
- G:lines expire every 5th second now
- /stats T now show incoming and outgoing rate
- Some HTM stuff
- Some release stuff
- Fixed up some NICKv2 stuff, more faster stuff:)
- Moved old Changes stuff to Changes.old
- Made so /path ~path or ".."'s in T:lines arent possible
- Made it so certain files ie ircd.conf,oper.motd, unrealircd.conf, ircd.log
  can't be used in a T:line
- Added dynconf option to specify SOCKS kill message & ban message & bantime
- Fixed SOCKS exception bug (!!)
- Fixed some indention in dynconf.c and a memory leak problem (what were you
   smoking code?:P)
- iNAH bugfixes( call them fixes and ill smash you;))
- Recoded color striping to be ALOT more accurate and faster
- Using hybrid IsMember()
- Fixed +F bug (again)
- Added FDlists, does those work on win32?
- De-Potvinized addline, addmotd, and addomotd (should run faster)
- Made addline, addmotd, addomotd display to the user what was written
- Removed /snote and /snotes (no one used them)
- GPL stuff
- Some comestic tkl fixes..
- Fixed +F bug
- Made +F connect notices more bandwidth friendly, 
  only bad things:
    - Not showing port in connect +F
    - On servers rejoin you get +F flooded (will be fixed in an later
       release)
- Made ALLOW_CHATOPS a unrealircd.conf option rather than a #define
- Fixed a bug where you had to be +AC to see adminchats
- chatops, adchat, nachat, techat, wallops no longer require a leading :
- More TKL stuff..
- m_chatops uses sendto_umode now, and also removed sendto_chatops
- Remote rehashes now support the - flags, ex -dcc, -vhost etc
- Fixed more G:Line stuff
- Fixed G:Line bug with not expiring correctly - thanks Dark-Prince for
  being guinea pig, and to JojoII for finding it
- Fixed +ix remote bug reported by RevPsych
- /list can now make opers see +s channels
- Did some SJOIN2 work..
- Fixed /whois bug with WHOIS_Channels
- Fixed a minor, yet annoying bug in the dynconf version system, thanks to GoNiS
- Fixed bug: EpicII stripping too much of /oper fail notice
- Fixed bug: SJOIN TS Change notice should not show when (ts == oldts)
- Fixed WEBTV_NONOTICE bug with CTCPs - thanks rjameson
- Fixed +h can +o themselves bug, thanks to Mikey, HERZ and many other
  people
- Added TSP client/server
- Fixed m_netinfo stuff..
- Fixed a bug with the new m_names and +h (chanmode)
- Removed .CHANGES.NEW2 - not in use anyways
- Now using new m_names from bahamut by Lucas Madar (DarkRot)
- Removed zombie code
- Fixed up the MODE_ADMINONLY code
- Fixed some bugs in can_send
- Added TS Change notice to SJOIN
- Fixed a +f bug, and fixed SJOIN resynch bug (serious)
- Fixed up the remote rehash code a bit
- Updated conf.doc
- Added some WebTV stuff, read config.h
- Removed the NO_DEFAULT_INVISIBLE define from config.h
- Added MODE_I to unrealircd.conf, auto setting of +i when a user connects
- Fixed a minor unrealircd.conf bug
- Fixed up all SJOIN fuzz, made RESYNCMODES be 12
- Fixed this bug:
   * After sync on other server 
      *** Stskeeps is using modes +oiwghsaHATcCreWIdt
    should be:
       Stskeeps is using modes +owghskaATcfrebW

- Made unrealircd.conf option to hide U:lines from non-opers in /links
- Updated the unrealircd.conf and all the .network files to support the
  version system, and for unrealircd.conf to support HIDE_ULINES
- Made a versioning system for unrealircd.conf and *.network (This will
  allow us to makesure _old_ versions are not being used when new features
  are added to the files)
- TKL/zap bugfix!!
- Channel mode +H errors in numeric 459 now, coded by Rev_Null- thanks
- Moved RPL_WHOISSPECIAL to 320
- Another TKL bug.
- TKL bug fixed
- Made TKL backwards compatible
- TKLs are now syncing
- Bug fixes..
- Fixed TKL<->GLINE protocol problems
- Renamed chmode +I to +V as it screwed up some clients thinking it was
  IRCnet..
- Took out m_fjoin, not in use
- Fixed up +e so it works with mIRC channel dialog now
- Added channel mode +H, only setable by SkoAdmin, makes +I users unable to
  join channel - code&thanks to RevPsych & Rev_Null
- Removed all MegaIRC references
- Fixed VHOST desynch bug..
- Removed aGline record
- Fixed some idention in msg.h
- Fixed warning in s_misc.c
- Removes /ns, /cs, /ms, /os, /hs commands (not in use)
- Fixed bug where /statserv needed a : for more than one param
- Fixed so that /trace only cloaks hostname if it is an oper
- Fixed token non case sensitive problem
- Fixed warning in mp2parv..
- Fixed DEBUGMODE compile bug..
- Fixed BOTMOTD bug..
- Fixed some bugs (1.16->1.17) and removed aClient->user->host and replaced
  it by realhost. Saves memory
- Fixing up for beta release
- Updated networks/networks.ndx
- Reason in temp and static K:lines like |kc.gline will show user klined
  file kc.gline (only legal names are |kc.*)
- Added e:lines to the docs
- Added solargalaxy.network
- Fixed a minor +S (chanmode) bug
- Fixed a bug where if a channel was +n it would display a
  must be +v msg rather than no external msgs (thank Potvin for that one)
- Made dccdeny's notice +e users when a file is rejected
- Added NOTICE in m_sajoin/m_sapart (You were forced to join/part #)
- Added e:lines, SOCKS check exception lines
  format: e:ip (not hostname):*:*
- Added doc/faq entry about debian on sparcs..
- added debian sparc support (read doc/faq)
- SJOIN sortof working. Straight testing needed
- made /botmotd use NOTICE AUTH (so all bots will see it)
- fixed NICKv2 umode field when no mode bug..
- added T (TechAdmin) to the SMO flags
- fixed a little _mistake_ in the /dusers error message
- fixed a bug where +c (chanmode) blocked all privmsgs :P
- m_sjoin compiled, need to make it unreal3.0 compatible
- added include/sjoin.h for SJOIN stuff
- Deleted :server prefix from SWHOIS burst.
- Added UMODE_SETHOST (+t), and set NICKv2 up to only send when a real
  virthost. Spares bandwidth:) +t is _not_ user setable
- Removed UMODE_COFOUND, UMODE_WMASTER, not in use anymore.
- Fixed up MODE_LINK, MODE_FLOODLIMIT syncronization,
  you can mode do /mode # -lf without parameters
- Gave Unreal correct orgin (df4.6.5)
- Gave /stats N,S a header
- Added network solarxtreme.network
- /stats N returns .network file information
- /stats S returns unrealircd.conf information
- Added a virtualhost field to NICKv2
- Updated conf.doc
- Removed all traces of CLIENT_COMPILE
- Some Linux-ALPHA support.. i need accces to a alpha box :P
  Fixes done by Ramuh (irc.risanet.com) originally for UltimateIRCd, 
  thanks to ShadowMastr for forwarding me..
- Removed all traces of services.h..
- NICKv2 working.. :)
- Updated doc/faq slightly
- Updated doc/example.conf with new lines an Oflags
- Implemented NICKv2 (umode field in NICK)
- Similar topics are sent along now .. was a bug ? (thanks Headbang,
    WonderWal, etc)
- Fixed up compile warnings
- Fixed channel.c warning in can_join
- Removed SHOW_PASSWORD define, not in use anymore
- Removed USE_CASETABLES define, not in use anymore
- Removed TIMED_KLINE define, not in use anymore
- Added OPER_NO_HIDING define
- Removed RelicNet +z, unreal isnt at use at relicnet anyways and 
  i still dont believe that potvin _thought_ he could make them use it?
  hah!
- Added REMOVE_ADVERTISING define (off by default) , check include/config.h
  and src/s_user.c (m_message) for more info (by ice)
- Fixed channel name similarity bug reported by IXpfah
- Comment on Nickflood/joinflood thing (stskeeps): Services can do that?
- Fixed up some version.c.SH stuff
- Added SJOIN protoctl for preparing for SJOIN
- Split up PROTOCTL_SUPPORTED in PROTOCTL_SERVER and PROTOCTL_CLIENT
- Added networks/uzaynet.network
- NOTICE auth, tells you that it found a bad SOCKS.
- Made umode +d work correctly
- Made it so users can't see the RPL_WHOISCHANNELS for a
  +I user
- Fixed a bug in +I where a +I user couldn't see themself
  in /names
- Fixed a minor bug in /chgident
- Added bot.motd support on +B and /botmotd
- /join 0 now shows "Left all channels" in reason why left
- Added +H umode, hides oper status
  in /who /who 0 o /whois (so opers
  can spy on a channel and no one knows
- win32: s_socks.c small problem fixed
- Fixed a bug in the new zline code
- Fixed a typo in the Win32 socks check (oops)
- (development) added TODO.maybe
- Added /vhost login password
  read the s_extra.c on vhost.conf format
- vhost.conf, added /rehash -vhost
- Removed s_user.c/m_message warning
- SOCKS check functioning
- Removed src/list2.c - not in use
- Removed networks/agitated.network, no longer existing network
- Added networks/bunker7.network
- Deleted ircdbug
- Renamed LICENCE to LICENSE
- /version shows alpha while in development..
- (development) added include/stamp.h for static development stamping
- send.c optimations from ircu :)
- Added codemastr as offical developer
- Now using GPL v2
- NOTICE AUTH problem solved, i hope
- Took out UNIXPORT code
- Removed traces of R_LINE* in config.h
- SOCKS check in progress
- Fixed the Blowbug
- TSCTL svstime works now :P correctly that is
- nick is using modes +rx
  instead of "nick is using modes [+rx]
- Removed some lame brackets
- /close sendto_ops() now
- Fixed small SVSNICK bug (.)
- Fixed +L resync bug..
- df4.6.7 SVSNICK - fixes desynchs
- Took out all the R_LINES code
- Took out all SERVICES_MODE code
- Took out all USE_SERVICES code
- Added .crjava patch by Fish read include/config.h for more info..
- Added IRCu .ack patch you can now use "ONE" in password line in I:Lines
  to ensure only one connecting from that kind of I:line per IP.
- /Lusers <mask> is not working anymore.. took out possible flood thing..
- /List - IRCops should be able to see +s now (thanks Headbang and others)
- RPL_YOURHOST - Your host is server, running version x
  Removed [hostname].
- RPL_MYINFO now selfupdates when adding new modes (channel and user)
- Fixed umodestring
- Umode +d avail to everyone now:P
- Fixed channel mode +r defunctional bug
  (thanks to gdb and the coder-com people who learnt me to use gdb:P)
- SVSFLINE <+/-/*> [mask] [reason]
     + = add (mask + reason)
     - = delete (mask)
     * = wipe all services F:Lines
  (13/12/1999 working.)
- Fixed server<->server token problem
- Moved /info data to m_info_send
- Made SIGSEGV do core too.. MAIL THEM TO ME ALONG WITH THE src/ircd FILE
  if it tells ya to! 
- Fixed "GLINE @moo.org 10 :moo\r" G:Line bug (they haunt me)
- New F:Line system (dccdeny.conf)
- Removed OLD F:lines
- Fixed up /stats f/F 
- Made /rehash -dcc      = rehashes dccdeny.conf
       /rehash -dyn      = rehashes dynamic configuration (RISK OF TERMINATE:P)
       /rehash -rest     = rehashes channel restrict config chrestrict.conf
- New channel restrict system
  (chrestrict.conf)
  # = comment
  allow #moo             = can join #moo
  msg message            = shows message when cannot join cos of allow


-------------------------------
|      Unreal2.1.7            | 
-------------------------------
RELEASE NOTES:
** IF YOUR VERSION REPLY DOES NOT SAY UNREAL2.1.7+rs PLEASE REDOWNLOAD!! **
* The announced GUI (UnrealIRCd/32) is going to be released around 
  1-2 weeks after this release
* If you experince any bugs PLEASE email me at stskeeps@tspre.org
  or seek me at /server toybox.flirt.org - #unrealircd 
  (savage.global-irc.net) and talk with me there
------------------------------- 
*** Unreal2.1.7+rs
- Small win32 compilation problem fixed.
- Changed snprintf references in channel.c to sprintf for compatiblity
- Fixed RPONG bug
- Changed version.h to Unreal2.1.7+rs
*(released original)*
- Fixed the U:line kill bug thingie.
- Fixed up K: Z: & G: lines.
- Fixed that bloody parse() lookup routine again..
- /addline now shows who added what:P
- New command lookup routine to support tokens etc.
- Fixed the bloody blowbug - exit(-1) in remove_unknown()
  :services.* SVSO nick -
  == remove Oo and operflags:P 
- FINALLY fixed svsmotd
- Fixed umode +h thing :P
- /stats O now show oper flags :>
- Did PTR overflow thingie in res.c from PTlink IRCd (Lamego)
  Thank you:)
- /ADCHAT not to co-admins fixed..
- Added Channel Mode +f (Flood)
    Example: 
       +f 5:10 <- Will kick a user non-oper & non-chanop if saying >= 5
                  lines in 10 secs
       +f *5:10 <- Will do the same just ban the user using *!*@virthost
                   instead
  Idea from ircbr improved thou (thanks _Jozeph_)
- Added in doc/tao.of.irc - read it! its funny
- Made IRCops possible to see realhosts in /whowas..
  (suggested by many people)
- Added F:Lines by _Jozeph_ (jozeph@globalmedia.com.br)
  They check if DCC sends are allowed f.x so you can do 
  F::You are infected with dmsetup.exe - seek help at http://www.vira.org:dmsetup.exe
  (i think)..
- Fixed setname cosmetic bug..
- Added SWHOIS.. contact me for more info on this feature:P
- Fixed 66.6% services maybe IRCd 66.6% CPU bug..
  (damn m_topic to hell)
- Fixed the +C Server Administrator bug.
- Made the whois notice be "***"'ed
- Made it possible for U:lines to join any channel under RESTRICTCHAN
- Fixed +qa +ov stuff 
- Fixed restart bug
- Fixed the mysterious kill questionmark bug.
- Z:Line wrong network name fixed.
- Fixed the hopefully last G:Line bug.
- Changed version to Unreal2.1.6-tCx3.miscfix
- unP 2109 
- Added RESTRICTCHAN define. r:?channelname  will enable people non-opers
  only to go to r:lined chanels. Example: r:?chatzone
** Unreal2.1.6-tCx3 ***
- Fixed small G:Line bugs
- Fixed +I bug. ANYONE could use it.
- Fixed watch bug?
- Fixed +L bug with numeric.
- Fixed KILL virthost bug.
- Similar AWAY's are now not spread out (strcmp)
- SMO can now be like "SMO oO" - added some more flags.
- Upgraded to unProto 2107
- Fixed wrong IP cloakin'
- Fixed really wierd identd bug
- Fixed remote rehashes
- Added remote restarts. (/RESTART password server.* reason)
- Max local users & TStiem is now kept (tunefile)
- Did some facelifiting
** Unreal2.1.6-tCx2 (Bugfix) **
* Okay I can't keep promises anymore regarding Unreal releases
* so if there isnt coming one out for some time im working on Mercury
* If you need help ./server irc.global-irc.net #UnrealIRCd.
[Done:]
- Y2k Bugfix. /Time didnt work
- G:Line expire bug fixed. <= !!! >=
- +I bug fixed. Was restricting ^ to netadmins/techadmins
- chmode +e memory leak bug fixed. (sub_channel)
- Fixed /userhost hostname revealing bug.
- Fixed +a not working bug.
- Fixed wierd +e bug (send_mode_list)
- Fixed some version.c.SH stuff
- Fixed possible +x bug.
  (this may be a iNAH one).
- Added SAPART, SVSPART, CHGIDENT

** Unreal2.1.6-tCx **
   I hoped you enjoy this IRCd as much as I did
   when I made it (yes that bad :>) So .. 
   Any support can be given at my e:mail or at
   #UnrealIRCd @ irc: irc.global-irc.net

         Seeya in the future!
         *vaporizes* -Techie 
]
QUOTE OF THE RELEASE:
*** You have been killed by operator Potvin Elite!HSE-TOR-ppp38181.sympatico.ca!Potvin (.)
* (v:Lines not included yet.. would be too hard and delay too much) 
- Fixed CHGHOST BUG. Thanks to vim.
- Fixed umode +S bug.
- Removed obsolete admin.invisible.patch .. due to recode of +I
- Fixed possible DCC error with +x.. (USERHOST)
  Gardien-de-reves found this:)
- Fixed up +I . OFLAG required (^)
- SMO A - Server admins.
- Changed unprotocol to 2106
- Changed version from Unreal2.1.5-tabby2 to Unreal2.1.5-tCx
- YAY! G:lines work!!!!
- Added "N" flag to SMO - netadmin/techadmin
- /userhost notices & showrealhost..
- Banwalk notices..
- +B umode now show up in /whois as RPL_WHOISBOT 335
- Made OperTopic notices..
- Fixed DEBUG/DEBUGMODE
- Mandrake bugfix.. (PTlink)
- Added SVSJOIN/SAJOIN . SVSJOIN copied from PTlink IRCd
  (C) PTlink coders team.
- Wildcards like C:*:password:*::32 must be the only one in the file
    (this is a bug)
- Made C/N & H:lines support wildcards
  YAY! ;)
- Fixed win32 stuff (ramuh.win32.patch for dal4.4.15 write != send)
- Started on new CVS rep
- Added some MegaIRC stuff
- Disabled G:Line commands. Due to G:Line bug.
- IPs +x = 0.0.0.network-chksum
- Added +I patch for admins, coded by me, idea by Hedge
- Managed to retrieve my old s_user.c :P~
- Fixed notice on +I bug.
- Fixed some remote rehash bug..
- Added relinfo.h for release info.
- Added some credits
- Fixed oflag H / iNAH bug reported by Kyle
  Thank you.
- Added patches by }{ - extras/
- Added "Real hostname: nick (hostname)" in Whois
  (Patch by }{) =)
- Added a couple of networks.
- Added neohorizion network. 
- Internal TSCTL function added.
  /TSCTL OFFSET +|- time
  will correct the internal IRC clock offset to be f.x -1242
  (watch out with negative values- u will have to reconnect to the server)
  /TSCTL TIME 
  - will report TS report.
- Fixed +q +a kick bug.
- Fixed /GLINE wrong response.
- Added amiga config support. Thanks to Mick & Sp^ 
- src/chkconf screws up with X:Lines and T:Lines
  (segfault) cannot fix bug.
- G:Lines was tested by }{ and Sandman .. thank you
  (worked:P)
- Fixed up CHKCONF to fit T:Lines and new oper flags..
- Fixed /stats t
- T:hostmask:motd:rules
  Patch by codemastr
- no */~ prefix in /names
- Fixed WIERD locop bug(showed +o at OTHER servers) ?? 
- Fixed wierd channel resync bug (damn *='\0') to hell
  (this involved +k and more..)
  Reported by strtok(Erik)
- missing "techadmin" dynconf bug fixed.
  (reported by Syndicate and others)..
- Wierd +q kick bug fixed.. I've never seen SUCH bad coding
  (waste from Elite)
- spreadout bug in SVSMOTD fixed.
- cptr bug in chghost bug fixed
- nick_user_host in G:line reply
  & a possible cause of G:Line spreadout crash
^^ Unreal2.1.5-tabby patch ^^
* YOU MAY NEED TO RECONFIGURE UNREALIRCD.CONF*
- "Full channel" on link now not shown .. LINKED CHANNEL message shown
  instead.. 
- Fixed +l bug plus more..
- KLINE_ADDRESS null bug fixed.
- #define STATS_ONLYOPER makes /stats oper-only .. 
- +L can now be taken off with +l not set.
- +I join/part missing addys fixed.. Thanks to Sp^ and Mick
- +I activation doesnt show up for non-ops .. only for NA/TE
- E:Line comments now show up
  (E:host:comment:user)
  /stats E and /stats K with E:Lines work OK now
- -D_AMIGA lets you compile Unreal on AmigaOS now.
  Made by Sp^ given to me by Mick..
- To Erik: /names # show hidden users if you are net/techadmin 
  Yes.. it's not a bug;)
- codemastr is now official win32 maker of 2.1.5 wether
  he wants it or not. 
- win32 compiling patches by codemastr done.
- OperMOTD config file option ..
- Fixed G:Line spreading bug (switched parameters)
- SVSMOTD shown correctly now.. END OF MOTD not shown if there wasnt any
  local motd
*** Unreal2.1.5 *** (10 August 1999) 
- E:Lines not shown correctly.. (in stats E)
- ADDLINE, SVSMOTD, OPERMOTD bugs fixed, T:Line stats fixed
- Added usermode +I - NetAdmin/TechAdmin only
  Can join/part channel without being noticed
- Server<->Server bug fixed
- DOMAINNAME no longer static
- Client->Server bug fixed.. :P
- I would like to apoligze for all that havoc 2.1.3,4 caused..
  It worked on my box so I thought I knew it worked other places. 
  (Which it didnt)
- IRCops can now see +sp channels in /list..
- WIN32 is not sured to work in this version.
*** Unreal2.1.3 *** (5 August 1999 - took 14 days so far)
|-----------------------------------------|
| RELEASE NOTES:                          |
|-----------------------------------------|
^ Unreal2.1.3 is highly incompatible with uProtocols < 2103 (unreal2.1.3)
^ /DUsers is deactivated in this version due to Aiiee! Segmentation Fault :P
^ 2.1.2 never was released and thank god for that...  (cos of bugs)
^ Mailing list not active yet, e-mail stskeeps@Mp3Fans.net for more info
^ I HIGHLY RECOMMEND YOU TO USE FULL O:LINE FLAGS INSTEAD OF  
  "*" - as its easier to prevent abuse of stuff
[Done: ]
- Removed scripts/
- G:lines should work now and i still friggin hate em :P
- G:line as owner of G:Line now fixed..
- G:Lines "setby" is now in nick!user@real/virthost
- Fixed G:Lines again... i friggin hate those:P
- Fixed chmode +sp mode (reported by Avenger12)
- Added anti-fake squit kill again .. 
- Win32 stuff
- Config.c
- Fixed small SMO bug + server-go-mental-when-squit bug .. 
  (missed a { } )
- SENDUMODE is aliased to SMO server<->server to lower bw usage
- Removed annyoing EliteIRCd reference in ./makeconf
- Hub, halfhub, leaf option in ./Config
- Unreal compiles under LinuxPPC (iMac) (thanks to Amgine)
- ./ircdbug made to bug reports
- Added MegaIRC as network
- ./ircdreg now also chmod +x'ed on makedist..
- ./ircdreg working, $nick bug fixed ($nickname it should be)
- /ChgHost fixed up to be alike the set* family.. in checking (sorry SL7!!)
- Made /Knock show hostname now..
- G:Lines minus bug fixed.. reported by NonMortal (O_x)
- G:Lines are now double chained..more failsafe
- NEWNET working OK
- Statement: +L is working:))
- Fixed sethost/inah bug reported by Erik.. (!(setflags & UMODE_HIDDEN))
- G:Line bugfixed.. (thanks to Erik.. which network with 6 servers segfaulted:P)
- Numeric 62* -> 64* for Zero compatibility.. 
- Added IRCd Registration script (just so i know people actually use it :P)
- /Info bug found .. I think! (when did i add a rpl_str ??)
- Removed dynconf.c warning..
- Uhm dynconf system actually works now but /info crashes..
- Made NOSPOOF seeds STATIC :(
- Bugfixed %#channel .. works now .. (compiles :P~)
- Added newsgroup news://the.elite-hacker.cx/irc.unreal-ircd
- /notice %#channel for halfops.. 
- /notice +#channel now sends to halfops as well :P
- Dynconf stuff
- Changed networks configs to use new format:)
- UnrealIRCd/32 shows up as UnrealIRCd/32 v2.1.3 in win32
- /StatServ is now able to send without @stats.*
  If your statserv is secure define STATSERV_ABSOLUTE
  (secure in accepting StatServ@Stats.* privmsgs)
- Did some dynconf stuff
- elite.c is now called cloak.c
- Static Linking of setting is gone now. (sorry) - use configuration file
- One more +L try.. this was a FULLCHANNEL recode in can_join ..
^ Added Agitated.net in networks.default
^ Made doc/History directory
* Added doc/faq
- Agents can now join so many channels they want to >;)
- Added IRCd Agents ground code (umode 'Z' oflag 'S' UMODE_AGENT)
- Netinfo detect TS-splits now .. (endsync < sendsync)
- /Names now show chan owners as * chan prots as ~
  Example:
    #Global *Roxxon ~Stskeeps @Shmad %Helper +Voice Peon
- Win32: Made the motd/rules window works.
   to porters: Please put ircd.motd / ircd.rules samples together with the port
- +L still not even working .. 
- Stats for t:lines added.
- /Stats T != /stats t
- T:Lines work. (recoded to use find_tline)
- /DUsers disabled due to bug. (will be back later)
- Using different nick collision style by binary (to fit with twilight)
- Fixed addnet bug (forgot cat << so results didnt even get emailed to me)
- Fixed some iNAH bugs (yes ihateNetadminAnnoyingHosts =P )
  (this may be the one you had trouble with michael ..)
- +L bug attempted once more (Yes I know Elite has fixed it but Potvin
   made it commercial)
- is_halfop checks if user is already channel operator .. :P
- Added Anti-Commercial note
- Topics now bounces.. (binary)
- Fake kills by SQUIT not able to anymore (fix by binary from twilight ircd)
- Now using more cryptic version number system .. 
- Win32 hCio compatibility fixed..
- Made /DUSERS
- Removed make devserv1 & devserv2 support
- Added TODO file as we are developing
- Added /ADDMOTD, /ADDOMOTD
  Shaped up the /ADD* family
  NOTE: ADDMOTD is the one pointing to the real MOTD 
  (so T:Line support is Shell/file stuff)
- Added T:Line support
  T:hostmask:path(or relative) pointing to MOTD
  Read from the bottom and up .. so beware..
  /stats T added as well
- E:Lines comments are now shown =P
*** Unreal2.1.2 *** (22 July 1999)
- alpha(1) Symbolic link to Unreal2.1.2
- Doing HEAVY CVS'ing.. 
- NA/TE/AD chat uses sendto_umode now .. MORE stable i think 
  (THANKS to fourcorners.global-irc.net for finding this bug :P)
- Okay.. rolling to alpha(1) now.. 
- Opermotd done.. /OperMotd .. auto shown when /opering up as well
*** Unreal2.1.1 *** (21 July 1999)
** ROLLING back to 2.1.1 as +q bug found.
- +F - Global connect notices:)) (waaste of bandwidth)
- +q bugfixed.. 
- Having a go making some +q bugfixing (umode)
*** Unreal2.2-alpha(1) *** (21 July 1999)
- SENDUMODE added .. for servers only
- Starting on alpha(1).. 
*** Unreal2.1.1 *** (21 July 1999)
- server settings(dynamically) are in progress. not active in 2.1.1 as
  of some bugs in the main IRCd hybrid
- Made so non-opers cannot see machine info in /version
- Moved Elite.Changes to doc/
- Made ./Config remove core after Config..
- Added remote rehash by binary..
  (net/tech admins only)
- Sigsegvs are globops'ed now .. :P
- Fixed /KNOCK <no # prefix> :reason sigsegv bug
- Accidently removed ircop-can-pass-bans in 2.1 .. activated now
  with customization possibility
- REMGLINE bug fixed? (strchr or some strange stuff) ?
- Added credits, raised protocol number (2101)
- MYOSNAME in win32 = 'Win32'
- Win32 Porters -- look in config.h
  (WIN32_SPECIFY) - It's wIRCd port credits to standardize stuff more
- Made the "version" field in win32 work (-1?!)
- Having a go making server settings be chosen as dynamically or static
  (and no im not ripping off elite)
- Changed version.h a tad
*** Unreal2.1+win32(2) *** (14 July 1999)
- This is a Windows only release
  Fixing of win32.c szAppName bug + TITLEAPP
  + case missing ":"
  + Win32 port credits goes to Magic_Wizard & {X}
- #define MYOSNAME "Windows" in Config.c output
- millitime() may be not precise cos of lack of gettimeofday
  little patch applied
*** Unreal2.1 *** (12 July 1999)
- TODO before release (Unreal2.1 now)
  * Establisment of help channels with more.
- NETINFO actually WORKS now ! :P
- HIDE_ULINES defined makes U:lines be hidden for non-opers in /links & /map
- Improved NETINFO - Calcs synctime as well
- Fixed email addy again :/
- Didn't add UPING cos I am not able to make UDP sockets  
  (due to lack of knowledge from my side)
- Added RPING/RPONG (from Undernet IRCd) made by Run (Carlo Wood)
- Added some stuff to readthis.now
- "kill" in root of unreal dist is now called killircd
- Now using TerraIRCd's +x with some modifications to work better
  Therefore pre(8)+terra[x]
- Fixed FUNNY set family bug ( /setident :)
- Fixed writeout bug in Config networks part
- Changed /KILL messages a tad
  "Local kill by %s" -> "[<servername where its local>] Local kill by %s"
  Now sends to UMODE_KILLS on all kills - b4 it was sendto_ops !! :P
  More proper IsHidden() behaviour
- Moved Bot/Coder stuff lower down in /whois
- Fixed BREPORT a bit (messages)
- Changed ban messages a bit
- Pre(8) should originally be called Pre(7.2)+elinefix
   as i added E:Lines in it
- NOTE: Elite.c hostcloaking will be recoded in 2.1.1
- Doing a little main cleanup of stuff
  * Bugs fixed:
    - Setname and family bug fixed
    - Halfop_mode mysteriously disappeared.. halfop mysterious bug fixed
    - malloc->MyMalloc in m_gline to prevent faults that c7 has got
    - Fixed 'cc' bug in makeconf
    - changed missing # bug in Config
    - wIRCd(UnrealIRCd/32) fixed target too fast bug
    - Fixed small HALFHUB bug in ./Config
    - Fixed re-init of hashtables in set_mode (stack bug)
    - Fixed svskill bug
    - SNote Family bug fixed:
         cleaned up "%s:***" -> "%s :***"
         Where has that P*coder learnt to make NOTICES??
    - NETINFO bug fixed (the max global count setting != max_global_count
          but lu_mglobalu; (also in s_serv.c)
    - Segfault when +N doing TECHAT fixed (done (sendto_techat))
  * Someone tell me parv[parc - 1] is the element of parc.. 
  * Removed some flushes from rehash @ s_conf.c
  * /mode #channel ^ lists info about current mode (+ bitstring)
	Added ListBits(<long>, <maxbitlength>
  * Co-admins are not spread out with globops anymore
  * Changed some stuff in config.c
  * Added some return 0; 's in channel.c
  * UnrealIRCd/32: Added some stuff to About menu
  * Added /License to show GNU License
  * Added include/license.h with the GNU license:)
    We are the GNU Generation remember?
  * When a helpop is away it doesn't show "available for help"
    (ive changed "looks very helpful" btw!)
  * Netadmins/techadmins can only set umode +q now
  * Server admins / Server Co-Admins can use /SDesc
  * Added Mp3fans net to networks
  * Having a go making the /raw help system
    * Help system changed a tad.. so we can do ircd -H :)
    * ./manual is ircd -H now .. 
    * Manual now checks if ircd is compiled
    * Converted help.c to text ;) (doc/unreal.doc)
  * Fixed some TAB's
  * Added some hush reference.. not sure if I'm gonna use it yet :P
  * Recoded /lag removed /lagrpl
    - /Lag only for Opers (local & global)
    - Returns in a SNOTICE  *** Lag reply -- <server1> <searchedserver> <unixtime>
      from every server the lag command passes before reaching searchedserver
      This can be used to trace timestamp errors
  * Fixed the rpl-umodes/chmodes avail
  * Changed email addy
  * Recoded G:line system + fixed small gline syncro bug 
  * Tried applying a simple fix for the +L line bug >;)
    This only allows people to bounce 5 times thou but > 5 would be excessive?!
  * Fixed Y2k Bug in /Time (date())
  * Added halfhub option to addnet
  * Made EYES notice when doing a operkick (IRCops can do this now as well)
  * Fixed REMGLINE bug (cosmetic!)
  * Fixed expire bug
  * Changed unrealmanual to use fgets to avoid warning
  * Added umode +1 (UMODE_CODER) - For opers (ircops, locops only)
  * Fixed networks who want to use @netadmin.network.net by #define iNAH
  * Added E:Lines (doesn't pass G:Lines)
    Same format as K:Lines.. can be viewed using /Stats K
  * Removed the sendto_ops("*** Set<name>") stuff in the set family.. 
    cos it would require a total recode to fix it :P
  * Made notice on SDESC
  * I will do 1-2 tries to fix the +L bug b4 releasing Unreal2.1 in total
    at 14th July <my birthday>.. So until then its disabled cos it doesn't
    work :/
*** Unreal2.1c7 *** (1 July 1999)
[ I got a feeling that UnrealIRCd is soon able to be released:)
  No bugs found yet except them already fixed.. so .. N'joy:)
  This is prolly gonna be the last c version of 2.1:)
  I'm doing some cleanup of the IRCd atm just to tighten things up
  I've already started finding new ideas for Unreal2.2 .. 
  so .. I hope you will enjoy what I've made - cos I'm
  heading off for a little non-programming holiday soon .. 
  (which I deserve after all!) ] --Techie
- Fixed G:Line stuff again ;) - Its fixed now
- Added a ":" to s_err.c / ERR_NOTFORHALFOPS
- By this G:lines are both incompatible with < Unreal2.1c7 and EliteIRCd
- GLINE server<-> server is now :servername GLINE user@host unixtime_for_expire maker :reason
- Moved m_knock from channel.c to s_unreal.c
- Fixed some semi-memoryleaks .. G:Lines not using MyMalloc() & MyFree()
  Where has that coder learnt IRCd programming??
- Recoded m_gline a tad.. fixed some general dropholes
  Expirelag can only exist now when time is incorrect
- Fixed small G:line bug made by me..
- Fixing message outputs a bit at G:lines stuff
  + file outputs in gline.log
- Added error when doing mode not for halfops
  (numerics) ERR_NOTFORHALFOPS (460)
- Got rid of cflags[] as we made new system
- Fixed small server_estab bug with sethost that made
   services and non-+x people get virthost:P
- Using twilight ircd match.c by binary- another good job
- Fixed spelling mistake (the old dusty erroneus)
- Removed m_bm from s_user.c
- Made halfhub support
- Fixed up on tokens
*** Unreal2.1c6 *** (30 June 1999)
- Recoding m_knock replies a tad to use numerics
- Added numeric 480 (ERR_CANNOTKNOCK)
- Made simple anti-354 (so i wont use it by accident!)
- Fixed make_mode_str bug - What was needed:
    - a 1024x768 resolution
    - two "joe's"
    - and a !( ) :P - LOL!!!
- Made alias for numeric 223 (RPL_STATSGLINE) and changed it to be
  "G " at start to fit with format of /stats K
- Fixed /StatServ bug + m_knock "dunt have to use " : " + in setname
- +L will first be activated in 2.2 thou - sorry!
- Tried to make my own implementaion of +L (maybe more sucky but it maybe works!)
- Customizing can_join a little to be more fair with ADMONLY and alike
- Changed m_version & RPL_VERSION to do version(IRCNETWORK)
- Changed version.h again a tad
- Incorporated IsMember patch for m_knock by codemastr
*** Unreal2.1c5 *** (29 June 1999)
- Fixed modesystem make_mode_str bug .. halfops can now ban people as well
- Fixed numeric 001 a tad.. (%s!%s@%s)
- Changed NACHAT to go to both na's & te's
  TECHAT goes only to TE's
- Added /Credits ;) for unreal ircd credits
- Added /DALINFO again for dalnet credits 
- Fixed the modesystem bug ;)
- Changed version.h a tad
- Make kill messages to +k be virthost
  if u #define SHOWREALHOSTATKILL in config.h it will send
  *** /Kill victim was nick!user@host
- Made halfops able to use +b, +e & alike
- Fixed +h-can-kick-+o-bug
- Having a go at making channel flags "long"
- Diagnosis on overlap bug: unsigned int ! WTF not "long" channel modes?
- Fixed +hv bug in m_names (put halfop higher than voice)
- Fixed /whois non-% bug
- Chmode +Q is now ok - U:lines can kick
  - reported by codemastr, SL7 and others
- wIRCd is now called UnrealIRCd/32 in the UnrealIRCd wIRCd version:)
- Changed s_segv message
- Made /stats G use numerics
  (Numeric 223 - No name) "%s@%s %d %s :%s"
	"user@host secsback madeby :reason"
- Fixed addnet
- Made STATS_SERVER networks.h option
- Chmode +S .. overlaps?
- Done some win32 support..
  mkpasswd disabled in win32
- Done Apple MacOS X Server support
- Fixed some version.h stuff
 (version is  Unreal2.1c5+(win32)=Global-IRC f.x for win32 compiling at Global-IRC)
- "DALINFO" -> "CREDITS"
- Made "New max global" in m_netinfo
- Changed version to 2.1c5

*** Unreal2.1c4 *** 
- Fixed +S & IP in kill message
- Fixed NA/TEchat
- Fixed watch hidden hostname bug
- Fixed rehash bug
- Fixed setname & clones bug (length)
- Fixed m_knock bug (flags & banned)
- Fixed silly +l bug (i forgot it!)
- Changed version to 2.1c4
- NETINFO <maxglobal> :network name
  fixed! when server_estab it has the same maxglobal over all net
- Re-etablish glines when server_etablish (done)
- G:Lines always expire SAME time over ALL network
- +L will be back in 2.2
- Disabled +S (didn't work!) will be back in 2.2
- Added to s_err.c
/* 620 */       RPL_DUMPING, ":Dumping clients matching %s",
/* 621 */       RPL_DUMPRPL, "%s %s %s %s %c",
/* 622 */       RPL_EODUMP,  ":End of /dusers - %i",
- Added numerics RPL_DUMPING(620), RPL_DUMPRPL(621) & RPL_EODUMP(622)
- Removed OFLAG_PASSER from old can_join thingie.. not any use
- Fixed rehash bug
    (flush_connections(me.fd) b4 anything breaks loose)
- Fixed Opermode bug
   (silly! =))
- Added SIGSEGV handling - Why didn't it have it before ??
- Having a go at removing the Rehash Bug
- Having a go at opermode as well
- Noinvite works (chmode +I)
- /knock # reason   - if +i && !MODE_NOKNOCK
  - :servername NOTICE @# :[Knock] requested by <nick> (reason)
- Added channel mode MODE_NOKNOCK ('K') & MODE_NOINVITE ('I')
- Fixed silly except ban bug ;) (b instead of e)
- Added m_statserv / statserv - behaviour is in config.h .. (good old :))
- Removed automatic syslog logging? (why was it on anyways??)
- Okay .. what to do now is = Bug testing/compiling and all that ****:P
- Made GLIBC 2.x support (RH6.0) 
- (b) Okay - I have skipped the support of channel mode +L
  I will make a better implementation somekind before release
- Having a go to add the elite modes of ch
- Added OperMode [IRCop (and so on) to new modesystem
- Added +SHE to channels mode of numeric of modes avail 
- Hmm .. in my implementation of +h 
  Can a halfop do:
   o Kick non-ops
   o Set topic
  Cannot:
   o Kick ops
   o Set modes (this includes +b & +e & +v & +o)
- Added +e (works)
- Fixed svsnoop bug (fix by binary)
- Okay.. after messing around making my own channel mode system,
  I found a great re-coded one made by binary - (garryb@binary.islesfan.net)
  from the Twilight / DarkFire IRCd - I will keep who wrote it and so on and 
  add "Exception bans & Elite IRCd modes support made by Stskeeps" to it 
    To binary: GREAT JOB!=)) 
- Having a go at intregating twilight mode system.. done?
- Removed some EliteIRCd references..

*** Unreal2.0-buggy ***
- Have fixed Chanmode +S (?)
- Made /who notice for +W
- Hmm . nachat works for TECHADMINS as well .. It sends to TechAdmins
  as well now - And techadmins can as well ... TECHAT sends to umode
   techadmin & netadmin .. and allows both (decision?)
- Rehash bug shouldnt be a case (?)
- Make /who <x> o notice (to helpops)
- Customized can_join .. take a look in channel.c
- Okay I both tested and looked into the whois bug .. I will say
  it was fake :( If you ever get the "Permission Denied" on a whois.. 
  email me

*** Unreal2.0c1 ***
- Now is Unreal 2.0 RELEASED (1.99b(ug))
- /sdesc :desc  - RENAME server description (Server admin ONLY)
- Disabled +S again will be back at 2.1
- q+A & Q+A bug (or alike) bug fixed
  (changed MODE_OPERONLY to 0x20000)
  (changed MODE_ADMINONLY to 0x40000)
  (changed MODE_NOKICKS to 0x80000)
- changed +B whois reply to "Bot is a \2bot\2 on <network>"
- changed version to Unreal2.0c13.1
- Moved new features to s_unreal.c + included from s_user.c
- Made error message for sethost too long error
- Restricted sethost to be a-z, A-Z, 0-9, '-' & '.'
  (inc error message)
- /setident <ident> made - restricted to same as sethost + '~'
- /setname <name> made - :) No restrictions except length
- Fixed RPL_MYINFO line to be updated
- +P umode can now pass bans (noone else!)
- Fixed channel_modes system to be more fast (may fix some client bugs as
  well?)
- Made chanode +S (strip colours)
  (took from Terra IRCd hybrid) - added MODE_STRIP (+S)
   (wif some modifications)
- /lag <servername> should work
- Dammit! There's TWO characters in the token system *slaps himself*
  Now using it 

*** Unreal2.0.beta13 ***
- Removement of bold stuff with more.
- Removement of @hostname.network.net for opers
  (this includes auto +x on oper up (?))
  (replaced by manually /sethost)
- Addition of /sethost <host> for IRCops
- /nachat <message> sends out to all Network Admins
- /techat <message> sends out to all Technical Admins
- Removement on whois notice - replacement to if you
  want it - umode +W
- Change of some whois stuff
  (bold stuff and some text)
- Removement of IPs in /links
- Channel mode +O - IRCop only channel
- Channel mode +A - Admin only channel
- User mode +q - Cannot be kicked (?)
- Channel mode +Q - No kicks able (?)
- numeric 470,265,266 removed bold stuff    --sts
  (in 265,266 - the []'s too)
- Virthost patchin' for netsplit..
  (m_server_etabl or something)
- /sethost done
  (+ removement of the admin.network.net stuff -- Do it MANUALLY people! ;)
- msg.h - Use of "?" token 4ever - token system is not active
  (ran out of token space)
- Auto +x on oper up removed - (UMODE_HIDE in m_oper)
  (replace by sethost)
- Whois mode +W stuff made
- /nachat & /techat made 
- Removed bold stuff from WHOIS_OPERATOR reply in whois .. 
  + "Services Bot" -> "Network Service"
- Removed the "IP" stuff in SERVER connect (/links)
- ONLY NetAdmins can go through bans now (can_join)
- Added numeric 519, 520 (ERR_ADMONLY, ERR_OPERONLY)
- Added mode +O & +A
  (+O is for IRCops only)
  (+A is for Server admins - tech admins & Co admins )
- Usermode +q added - only settable by services admins(+A)
  not sure if it works - +q umode ppl cannot be kicked
  except by servers/ulines
- Oper ircd.conf flag H & W  - H is auto +x - W is auto +W
- HelpOp flag in ircd.conf gives auto +h now (on oper up)
- +B flag - Shows "nick" is a bot 
- Fixed the sethost "long-hostname" bug... + sent umode to user as well
- NetAdmins||Techadmins can set channels to b +O and +A
- U:line bug in usermode +q fixed - U:lines can now kick +q users as well
- Channel mode +Q - No kicks able unless by Services/U:Lines

** Started base off Elite2.0b13 by Potvin **
